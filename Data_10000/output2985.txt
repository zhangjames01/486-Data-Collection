{"kind": "Listing", "data": {"after": "t1_g2kl9ck", "dist": 25, "modhash": null, "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2th52", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Race to the \u2026 bottom! $GOOG $MSFT", "mod_reason_by": null, "banned_by": null, "ups": 13, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "wallstreetbets", "link_author": "No_Low_2541", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "j7t8lvh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 296, "can_mod_post": false, "send_replies": true, "parent_id": "t1_j7sc7qq", "score": 13, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Reddit already exists.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Reddit already exists.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_10x30n9", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/wallstreetbets/comments/10x30n9/race_to_the_bottom_goog_msft/j7t8lvh/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/wallstreetbets/comments/10x30n9/race_to_the_bottom_goog_msft/", "name": "t1_j7t8lvh", "author_flair_template_id": null, "subreddit_name_prefixed": "r/wallstreetbets", "author_flair_text": null, "treatment_tags": [], "created": 1675922517.0, "created_utc": 1675922517.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.redd.it/dt7d478661ha1.jpg"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ubgg", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Neighbor does a u-turn over our grass strip (and destroying it) and drives on to our driveway every time he leaves", "mod_reason_by": null, "banned_by": null, "ups": 14, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "mildlyinfuriating", "link_author": "lamsta", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "j7jqpj4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 1206, "can_mod_post": false, "send_replies": true, "parent_id": "t1_j7jfnui", "score": 14, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The \"if controlled properly\" is a big one. The types of bamboo used for garden features can actually be controlled remarkably reliably. They only propagate via \\~6\" deep rhizomes, not via seeds. Either a buried plastic containment barrier, or even just planting bamboo on a raised mound, will totally block the spread.\n\nOutside of such a planned garden feature, then yeah, bamboo is horribly invasive and difficult to control.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &amp;quot;if controlled properly&amp;quot; is a big one. The types of bamboo used for garden features can actually be controlled remarkably reliably. They only propagate via ~6&amp;quot; deep rhizomes, not via seeds. Either a buried plastic containment barrier, or even just planting bamboo on a raised mound, will totally block the spread.&lt;/p&gt;\n\n&lt;p&gt;Outside of such a planned garden feature, then yeah, bamboo is horribly invasive and difficult to control.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_10vp992", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/mildlyinfuriating/comments/10vp992/neighbor_does_a_uturn_over_our_grass_strip_and/j7jqpj4/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/mildlyinfuriating/comments/10vp992/neighbor_does_a_uturn_over_our_grass_strip_and/", "name": "t1_j7jqpj4", "author_flair_template_id": null, "subreddit_name_prefixed": "r/mildlyinfuriating", "author_flair_text": null, "treatment_tags": [], "created": 1675756583.0, "created_utc": 1675756583.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/gallery/10vp992"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Can non-negative integers be described as a variant type, or as a type at all (statically)? Or should valid subsets of types be handled with assertions (dynamically)?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "sementery", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ibbocaa", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 6, "can_mod_post": false, "send_replies": true, "parent_id": "t1_ial3y6e", "score": 1, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I agree, even OCaml has some subtyping! I meant more specifically, subtyping involving restricted ranges of the language's primary integer type is not a common feature. I'm not familiar with any languages that aren't proof-systems that support this, it just seems like a feature that only a language that is also dependently typed would support. But yeah, it doesn't require dependent typing.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I agree, even OCaml has some subtyping! I meant more specifically, subtyping involving restricted ranges of the language&amp;#39;s primary integer type is not a common feature. I&amp;#39;m not familiar with any languages that aren&amp;#39;t proof-systems that support this, it just seems like a feature that only a language that is also dependently typed would support. But yeah, it doesn&amp;#39;t require dependent typing.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_umdaet", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/ibbocaa/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/", "name": "t1_ibbocaa", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1654483110.0, "created_utc": 1654483110.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qnts", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "'Prince Andrew Is A Sweaty N***e' hits UK top 20 during Jubilee celebrations", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "nottheonion", "link_author": "rainbowarriorhere", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ib7t0in", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 416, "can_mod_post": false, "send_replies": true, "parent_id": "t1_ib7pypi", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Cryptographers borrowed the term from linguists. In cryptography, \"nonce\" is a loose term used to refer to a mathematical element whose value is arbitrary. In some usages, a nonce value must be distinct from other nonces in use.", "edited": 1654401166.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cryptographers borrowed the term from linguists. In cryptography, &amp;quot;nonce&amp;quot; is a loose term used to refer to a mathematical element whose value is arbitrary. In some usages, a nonce value must be distinct from other nonces in use.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_v4vlj2", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/nottheonion/comments/v4vlj2/prince_andrew_is_a_sweaty_ne_hits_uk_top_20/ib7t0in/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/nottheonion/comments/v4vlj2/prince_andrew_is_a_sweaty_ne_hits_uk_top_20/", "name": "t1_ib7t0in", "author_flair_template_id": null, "subreddit_name_prefixed": "r/nottheonion", "author_flair_text": null, "treatment_tags": [], "created": 1654400810.0, "created_utc": 1654400810.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.joe.co.uk/news/prince-andrew-is-a-sweaty-ne-hits-uk-top-20-during-jubilee-celebrations-340006"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "What is the best course to learn Ocaml online?", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "Kovaska", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i90wht6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 14, "can_mod_post": false, "send_replies": true, "parent_id": "t1_i90p6kr", "score": 4, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "IMO it's not that the functor usage makes it inaccessible, the main issues with beginners following RWO are a lot simpler:\n\n1. The way Core &amp; Base replace the standard library with not-quite-the-same modules confuses people trying to learn from multiple sources, e.g. many answers they find on stackoverflow won't work if they're following RWO and have opened Core\\_kernel.  \n\n2. Core &amp; Base use lots of newer language features like labeled and optional arguments which have a few parsing warts. These aren't hard for anyone with experience to work around, but, the compiler error messages are less than helpful for beginners.  \n\nThese don't sound like big issues but in my experience the additional confusion that arises can be a pretty devastating obstacle to some beginners.\n\nSo yeah, I don't know about \"fully grasp / appreciate\", but the background you mentioned sounds sufficient to avoid the main points of confusion, and benefit from RWO.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IMO it&amp;#39;s not that the functor usage makes it inaccessible, the main issues with beginners following RWO are a lot simpler:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The way Core &amp;amp; Base replace the standard library with not-quite-the-same modules confuses people trying to learn from multiple sources, e.g. many answers they find on stackoverflow won&amp;#39;t work if they&amp;#39;re following RWO and have opened Core_kernel.  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Core &amp;amp; Base use lots of newer language features like labeled and optional arguments which have a few parsing warts. These aren&amp;#39;t hard for anyone with experience to work around, but, the compiler error messages are less than helpful for beginners.  &lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;These don&amp;#39;t sound like big issues but in my experience the additional confusion that arises can be a pretty devastating obstacle to some beginners.&lt;/p&gt;\n\n&lt;p&gt;So yeah, I don&amp;#39;t know about &amp;quot;fully grasp / appreciate&amp;quot;, but the background you mentioned sounds sufficient to avoid the main points of confusion, and benefit from RWO.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_urv3q6", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/urv3q6/what_is_the_best_course_to_learn_ocaml_online/i90wht6/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/urv3q6/what_is_the_best_course_to_learn_ocaml_online/", "name": "t1_i90wht6", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1652839678.0, "created_utc": 1652839678.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/urv3q6/what_is_the_best_course_to_learn_ocaml_online/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "How to properly lookup functions in Base", "mod_reason_by": null, "banned_by": null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received": 1, "subreddit": "ocaml", "link_author": "AlexKosh", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i8vibzc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 13, "can_mod_post": false, "send_replies": true, "parent_id": "t3_ur3ab9", "score": 12, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Some general principles on how Core is organized:\n\nCore prefers to do a lot more namespacing via modules than the standard library. In particular, Core eschews most \"top level\" functions in favor of putting everything at least one layer down in a module (e.g. `string_of_int` to `Int.to_string`, `print_endline` to `Out_channel.print_endline`, etc.).\n\nCore aims for a high degree of consistency &amp; code reuse between its module by taking advantage of OCaml's module system, specifically using lots of functors and signature inclusion. For example, all container types in Core will include one of the signatures within [Base.Container](https://ocaml.janestreet.com/ocaml-core/v0.14/doc/base/Base/Container/index.html), which means they all implement the \"same\" `to_list`, `find`, `min_elt`, etc. (Somewhat similar to what other programming languages call \"interfaces\".)\n\nUnfortunately, this heavy usage of the module system can make autogenerated docs for Core kinda a pain to navigate... but still, whenever I'm looking for a Core function I usually have good luck searching through [https://ocaml.janestreet.com/ocaml-core/v0.14/doc/core\\_kernel/Core\\_kernel/index.html](https://ocaml.janestreet.com/ocaml-core/v0.14/doc/core_kernel/Core_kernel/index.html). FWIW, it does not appear to me like Core has any function to convert an int to a string of \"1\"s and \"0\"s.\n\nLastly: don't be overly worried about mixing Core with OCaml's standard library. Even after an `open Core` or `Core_kernel` you can still access the standard OCaml modules &amp; functions under the `Caml` module. I wouldn't recommend that someone just learning OCaml waste too much time caring about the \"Core\" way of doing things, if you've already figured out how to do what you want using the standard library. Like, Core's `Int.to_string` is literally just an alias for the standard library's `string_of_int`, so the difference is purely stylistic (...although, the Core style does result in less boilerplate once you start getting fancy with the module system and making generic functors and stuff).", "edited": 1652745846.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some general principles on how Core is organized:&lt;/p&gt;\n\n&lt;p&gt;Core prefers to do a lot more namespacing via modules than the standard library. In particular, Core eschews most &amp;quot;top level&amp;quot; functions in favor of putting everything at least one layer down in a module (e.g. &lt;code&gt;string_of_int&lt;/code&gt; to &lt;code&gt;Int.to_string&lt;/code&gt;, &lt;code&gt;print_endline&lt;/code&gt; to &lt;code&gt;Out_channel.print_endline&lt;/code&gt;, etc.).&lt;/p&gt;\n\n&lt;p&gt;Core aims for a high degree of consistency &amp;amp; code reuse between its module by taking advantage of OCaml&amp;#39;s module system, specifically using lots of functors and signature inclusion. For example, all container types in Core will include one of the signatures within &lt;a href=\"https://ocaml.janestreet.com/ocaml-core/v0.14/doc/base/Base/Container/index.html\"&gt;Base.Container&lt;/a&gt;, which means they all implement the &amp;quot;same&amp;quot; &lt;code&gt;to_list&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;min_elt&lt;/code&gt;, etc. (Somewhat similar to what other programming languages call &amp;quot;interfaces&amp;quot;.)&lt;/p&gt;\n\n&lt;p&gt;Unfortunately, this heavy usage of the module system can make autogenerated docs for Core kinda a pain to navigate... but still, whenever I&amp;#39;m looking for a Core function I usually have good luck searching through &lt;a href=\"https://ocaml.janestreet.com/ocaml-core/v0.14/doc/core_kernel/Core_kernel/index.html\"&gt;https://ocaml.janestreet.com/ocaml-core/v0.14/doc/core_kernel/Core_kernel/index.html&lt;/a&gt;. FWIW, it does not appear to me like Core has any function to convert an int to a string of &amp;quot;1&amp;quot;s and &amp;quot;0&amp;quot;s.&lt;/p&gt;\n\n&lt;p&gt;Lastly: don&amp;#39;t be overly worried about mixing Core with OCaml&amp;#39;s standard library. Even after an &lt;code&gt;open Core&lt;/code&gt; or &lt;code&gt;Core_kernel&lt;/code&gt; you can still access the standard OCaml modules &amp;amp; functions under the &lt;code&gt;Caml&lt;/code&gt; module. I wouldn&amp;#39;t recommend that someone just learning OCaml waste too much time caring about the &amp;quot;Core&amp;quot; way of doing things, if you&amp;#39;ve already figured out how to do what you want using the standard library. Like, Core&amp;#39;s &lt;code&gt;Int.to_string&lt;/code&gt; is literally just an alias for the standard library&amp;#39;s &lt;code&gt;string_of_int&lt;/code&gt;, so the difference is purely stylistic (...although, the Core style does result in less boilerplate once you start getting fancy with the module system and making generic functors and stuff).&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_ur3ab9", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/ur3ab9/how_to_properly_lookup_functions_in_base/i8vibzc/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/ur3ab9/how_to_properly_lookup_functions_in_base/", "name": "t1_i8vibzc", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1652738721.0, "created_utc": 1652738721.0, "awarders": [], "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": null, "coin_price": 100, "id": "award_19860e30-3331-4bac-b3d1-bd28de0c7974", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png", "days_of_premium": null, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=16&amp;height=16&amp;auto=webp&amp;v=enabled&amp;s=7434e8ec65f434b811666ff6be1cbc18e675c5bf", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=32&amp;height=32&amp;auto=webp&amp;v=enabled&amp;s=aacfdc98efb123d6d4464d6a227aff2f9d90a3fb", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=48&amp;height=48&amp;auto=webp&amp;v=enabled&amp;s=af6b886c9a013bed09f09ef8bb3757f14a1286b9", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=64&amp;height=64&amp;auto=webp&amp;v=enabled&amp;s=0e3debe040221236e3cdde5840d9ea8f67d7dca9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=128&amp;height=128&amp;auto=webp&amp;v=enabled&amp;s=bd5fb5fe09c1ac5e0d58faed4fc7e9108f6f7718", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "I needed this today", "end_date": null, "sticky_duration_seconds": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Heartwarming", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=16&amp;height=16&amp;auto=webp&amp;v=enabled&amp;s=7434e8ec65f434b811666ff6be1cbc18e675c5bf", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=32&amp;height=32&amp;auto=webp&amp;v=enabled&amp;s=aacfdc98efb123d6d4464d6a227aff2f9d90a3fb", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=48&amp;height=48&amp;auto=webp&amp;v=enabled&amp;s=af6b886c9a013bed09f09ef8bb3757f14a1286b9", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=64&amp;height=64&amp;auto=webp&amp;v=enabled&amp;s=0e3debe040221236e3cdde5840d9ea8f67d7dca9", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png?width=128&amp;height=128&amp;auto=webp&amp;v=enabled&amp;s=bd5fb5fe09c1ac5e0d58faed4fc7e9108f6f7718", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/v1mxw8i6wnf51_Heartwarming.png"}], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/ur3ab9/how_to_properly_lookup_functions_in_base/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Can non-negative integers be described as a variant type, or as a type at all (statically)? Or should valid subsets of types be handled with assertions (dynamically)?", "mod_reason_by": null, "banned_by": null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "sementery", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i811yr2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 6, "can_mod_post": false, "send_replies": true, "parent_id": "t3_umdaet", "score": 9, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "In short: No, OCaml does not have a built-in type for non-negative integers.\n\nOCaml's type system has no logic for making decisions about ranges, and cannot natively represent a subset of the integers as a type. This is a highly unusual feature even in functional programming languages, and AFAIK only research languages with dependent type systems support stuff like this.\n\n(The closest thing OCaml has is automatic subtyping for polymorphic variants, but, that doesn't do what you want here.)\n\nIf you just want unsigned integers like those in C, there are libraries for that, e.g. https://github.com/ocamllabs/ocaml-integers\n\nIt's probably a bad idea, but you can literally do what you're asking for by manually defining a type for non-negative integers. But, it's *very* manual... like, you'll need to define your own arithmetic operators for your new type.  \n\n```\nmodule NonNegative : sig\n  (* Note: if we had `type t = int` in the module signature (or no manually\n   * specified signature), then `t` would just be a type alias for `int`, and\n   * people could freely pass `int`s as `NonNegative.t`, which would defeat\n   * the point.\n   * `type t = private int` would also make sense. nonnegative integers are\n   * literally the demo case for private type aliases:\n   * https://v2.ocaml.org/manual/privatetypes.html#ss%3Aprivate-types-abbrev *)\n  type t\n\n  val of_int: int -&gt; t option\n  val to_int: t -&gt; int\n  val add: t -&gt; t -&gt; t\n  (* Returns int because non-negative integers not closed over subtraction. *)\n  val sub: t -&gt; t -&gt; int\nend = struct\n  type t = int\n  let of_int x = if x &gt; 0 then Some x else None\n  let to_int x = x\n  let sub x y = x - y\n  let add x y =\n    let r = x + y in\n    (* ocaml ints can overflow and wrap around to a negative value,\n     * which is probably undesirable for a non-negative type :P *)\n    assert (r &gt;= 0);\n    r\nend\n```\n\nSomething like this isn't always a bad idea, it's just probably a bad idea specifically for `int`s. If there was a general way to do this that wasn't wildly unergonomic to use in practice, OCaml would already have such a NonNegative type included its standard library :P\n\n\nSo yeah, for relatively continuous values like integers, the \"out of range\" problem is usually not best handled using the type system in OCaml. Some standard idioms for dealing with this include:\n\n1. Asserting like you did is often fine. Raising an `Invalid_argument` exception might be better in some cases, to allow more explicit user handling. Obviously, the downside is that now your function may throw an exception instead of \"always working\".\n\n2. Have a function return an `option` (or `result`) type, where the result returned is `None` (or an `Error`) if an error condition is encountered, e.g. `let rec fact = function 0 -&gt; Ok 1 | n when n &lt; 0 -&gt; Error \"negative\" | n -&gt; match fact (n-1) with Error e -&gt; Error e | Ok x -&gt; if n*x/n = x then Ok (n*x) else Error \"overflow\"`. This is the \"more functional\" alternative to throwing exceptions, however the downside is that it's basically like an exception that the caller MUST write a handler for.\n\n3. Just expand the definition of the function such that all cases are handled, e.g. `let rec fact = fun n -&gt; if n &lt;= 0 then 1 else n * fact (n-1)`. This is often equivalent to silently handling an error, which may or may not be a good thing.\n\n4. For relatively discrete types, expressing them with OCaml's [polymorphic variants](https://v2.ocaml.org/manual/polyvariant.html) can be a great choice for handling a myriad of functions that input &amp; output many different subsets of tags. The type system will automatically enforce that no function receives a tag that it cannot handle. (Just using traditional non-polymorphic variants and manually defining the subsets you need as their own types may also be a fine option, if you don't need *many* different subsets of values to be expressed as their own types.)", "edited": 1652176777.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In short: No, OCaml does not have a built-in type for non-negative integers.&lt;/p&gt;\n\n&lt;p&gt;OCaml&amp;#39;s type system has no logic for making decisions about ranges, and cannot natively represent a subset of the integers as a type. This is a highly unusual feature even in functional programming languages, and AFAIK only research languages with dependent type systems support stuff like this.&lt;/p&gt;\n\n&lt;p&gt;(The closest thing OCaml has is automatic subtyping for polymorphic variants, but, that doesn&amp;#39;t do what you want here.)&lt;/p&gt;\n\n&lt;p&gt;If you just want unsigned integers like those in C, there are libraries for that, e.g. &lt;a href=\"https://github.com/ocamllabs/ocaml-integers\"&gt;https://github.com/ocamllabs/ocaml-integers&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s probably a bad idea, but you can literally do what you&amp;#39;re asking for by manually defining a type for non-negative integers. But, it&amp;#39;s &lt;em&gt;very&lt;/em&gt; manual... like, you&amp;#39;ll need to define your own arithmetic operators for your new type.  &lt;/p&gt;\n\n&lt;p&gt;``&lt;code&gt;\nmodule NonNegative : sig\n  (* Note: if we had&lt;/code&gt;type t = int&lt;code&gt;in the module signature (or no manually\n   * specified signature), then&lt;/code&gt;t&lt;code&gt;would just be a type alias for&lt;/code&gt;int&lt;code&gt;, and\n   * people could freely pass&lt;/code&gt;int&lt;code&gt;s as&lt;/code&gt;NonNegative.t&lt;code&gt;, which would defeat\n   * the point.\n   *&lt;/code&gt;type t = private int` would also make sense. nonnegative integers are\n   * literally the demo case for private type aliases:\n   * &lt;a href=\"https://v2.ocaml.org/manual/privatetypes.html#ss%3Aprivate-types-abbrev\"&gt;https://v2.ocaml.org/manual/privatetypes.html#ss%3Aprivate-types-abbrev&lt;/a&gt; *)\n  type t&lt;/p&gt;\n\n&lt;p&gt;val of_int: int -&amp;gt; t option\n  val to_int: t -&amp;gt; int\n  val add: t -&amp;gt; t -&amp;gt; t\n  (* Returns int because non-negative integers not closed over subtraction. &lt;em&gt;)\n  val sub: t -&amp;gt; t -&amp;gt; int\nend = struct\n  type t = int\n  let of_int x = if x &amp;gt; 0 then Some x else None\n  let to_int x = x\n  let sub x y = x - y\n  let add x y =\n    let r = x + y in\n    (&lt;/em&gt; ocaml ints can overflow and wrap around to a negative value,\n     * which is probably undesirable for a non-negative type :P *)\n    assert (r &amp;gt;= 0);\n    r\nend\n```&lt;/p&gt;\n\n&lt;p&gt;Something like this isn&amp;#39;t always a bad idea, it&amp;#39;s just probably a bad idea specifically for &lt;code&gt;int&lt;/code&gt;s. If there was a general way to do this that wasn&amp;#39;t wildly unergonomic to use in practice, OCaml would already have such a NonNegative type included its standard library :P&lt;/p&gt;\n\n&lt;p&gt;So yeah, for relatively continuous values like integers, the &amp;quot;out of range&amp;quot; problem is usually not best handled using the type system in OCaml. Some standard idioms for dealing with this include:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Asserting like you did is often fine. Raising an &lt;code&gt;Invalid_argument&lt;/code&gt; exception might be better in some cases, to allow more explicit user handling. Obviously, the downside is that now your function may throw an exception instead of &amp;quot;always working&amp;quot;.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Have a function return an &lt;code&gt;option&lt;/code&gt; (or &lt;code&gt;result&lt;/code&gt;) type, where the result returned is &lt;code&gt;None&lt;/code&gt; (or an &lt;code&gt;Error&lt;/code&gt;) if an error condition is encountered, e.g. &lt;code&gt;let rec fact = function 0 -&amp;gt; Ok 1 | n when n &amp;lt; 0 -&amp;gt; Error &amp;quot;negative&amp;quot; | n -&amp;gt; match fact (n-1) with Error e -&amp;gt; Error e | Ok x -&amp;gt; if n*x/n = x then Ok (n*x) else Error &amp;quot;overflow&amp;quot;&lt;/code&gt;. This is the &amp;quot;more functional&amp;quot; alternative to throwing exceptions, however the downside is that it&amp;#39;s basically like an exception that the caller MUST write a handler for.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Just expand the definition of the function such that all cases are handled, e.g. &lt;code&gt;let rec fact = fun n -&amp;gt; if n &amp;lt;= 0 then 1 else n * fact (n-1)&lt;/code&gt;. This is often equivalent to silently handling an error, which may or may not be a good thing.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;For relatively discrete types, expressing them with OCaml&amp;#39;s &lt;a href=\"https://v2.ocaml.org/manual/polyvariant.html\"&gt;polymorphic variants&lt;/a&gt; can be a great choice for handling a myriad of functions that input &amp;amp; output many different subsets of tags. The type system will automatically enforce that no function receives a tag that it cannot handle. (Just using traditional non-polymorphic variants and manually defining the subsets you need as their own types may also be a fine option, if you don&amp;#39;t need &lt;em&gt;many&lt;/em&gt; different subsets of values to be expressed as their own types.)&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_umdaet", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/i811yr2/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/", "name": "t1_i811yr2", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1652172843.0, "created_utc": 1652172843.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/umdaet/can_nonnegative_integers_be_described_as_a/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Dune 3.0.0", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "apoisel", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hwnbws8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 4, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hwn1lxk", "score": 3, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Nope. The constraint solver is part of opam, not dune, and runs before opam would even start building anything with dune.\n\nFWIW whenever opam's solver has flipped a shit on me, temporarily switching away from the built-in solver to aspcud has done the trick (pass `--solver=aspcud` to opam when performing the offending operations; you need to have aspcud installed). Although, this only happens rarely to me, so, you might have a different problem \u00af\\\\_(\u30c4)_/\u00af", "edited": 1644675913.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nope. The constraint solver is part of opam, not dune, and runs before opam would even start building anything with dune.&lt;/p&gt;\n\n&lt;p&gt;FWIW whenever opam&amp;#39;s solver has flipped a shit on me, temporarily switching away from the built-in solver to aspcud has done the trick (pass &lt;code&gt;--solver=aspcud&lt;/code&gt; to opam when performing the offending operations; you need to have aspcud installed). Although, this only happens rarely to me, so, you might have a different problem \u00af\\&lt;em&gt;(\u30c4)&lt;/em&gt;/\u00af&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_sqc97y", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/sqc97y/dune_300/hwnbws8/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/sqc97y/dune_300/", "name": "t1_hwnbws8", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1644675654.0, "created_utc": 1644675654.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://github.com/ocaml/dune/releases/tag/3.0.0"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2uy3o", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "[deleted by user]", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "lowlevel", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hv7s5il", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 6, "can_mod_post": false, "send_replies": true, "parent_id": "t3_si2k6f", "score": 1, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Kinda adjacent to what you were asking for, the various security \"wargame\" sites serve as curated exercise sets. A couple of good ones that have been around for a while:\n\n* [https://microcorruption.com/](https://microcorruption.com/) embedded reversing &amp; exploitation\n* [https://overthewire.org/](https://overthewire.org/) variety of topics\n* [https://webhacking.kr/](https://webhacking.kr/) web exploitation", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kinda adjacent to what you were asking for, the various security &amp;quot;wargame&amp;quot; sites serve as curated exercise sets. A couple of good ones that have been around for a while:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://microcorruption.com/\"&gt;https://microcorruption.com/&lt;/a&gt; embedded reversing &amp;amp; exploitation&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://overthewire.org/\"&gt;https://overthewire.org/&lt;/a&gt; variety of topics&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://webhacking.kr/\"&gt;https://webhacking.kr/&lt;/a&gt; web exploitation&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_si2k6f", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/lowlevel/comments/si2k6f/deleted_by_user/hv7s5il/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/lowlevel/comments/si2k6f/deleted_by_user/", "name": "t1_hv7s5il", "author_flair_template_id": null, "subreddit_name_prefixed": "r/lowlevel", "author_flair_text": null, "treatment_tags": [], "created": 1643765531.0, "created_utc": 1643765531.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/lowlevel/comments/si2k6f/deleted_by_user/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "ELI5: If Bernoulli\u2019s principle is true, then why are some planes capable of flying upside down?", "mod_reason_by": null, "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "explainlikeimfive", "link_author": "kingofthekarts", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hq9ljjq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 46, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hq98f0j", "score": 6, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The most popular description of how plane wings work sounds like \"The asymmetrical shape of the wing makes air flow faster over the top of the wing than the bottom, and a scientific fact known as 'Bernoulli's principle' says that faster moving fluids have reduced pressure, creating a suction effect that lifts the plane into the sky\".\n\nOP is questioning how that description could be correct, given that planes can fly upside down. (I believe almost all planes can at least sort-of fly upside down? They certainly don't fall out of the sky, like that description would suggest).\n\nAnd yeah, short answer: these \"Bernoulli's principle\" descriptions of wings are often wildly misapplied, misinterpreted, or just wrong. A better description is simply \"wings are slanted and shove air down, pushing the plane up\", which makes it more obvious that a plane can still fly with its belly up as long as its wings are still slanted in the right direction.\n\n(To be clear: Bernoulli's principle isn't wrong. It's just that people often misdescribe or misunderstand the principle when explaining plane wings, so it's best not to mention it at all unless you want to dive deeper into fluid mechanics.)", "edited": 1640691386.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The most popular description of how plane wings work sounds like &amp;quot;The asymmetrical shape of the wing makes air flow faster over the top of the wing than the bottom, and a scientific fact known as &amp;#39;Bernoulli&amp;#39;s principle&amp;#39; says that faster moving fluids have reduced pressure, creating a suction effect that lifts the plane into the sky&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;OP is questioning how that description could be correct, given that planes can fly upside down. (I believe almost all planes can at least sort-of fly upside down? They certainly don&amp;#39;t fall out of the sky, like that description would suggest).&lt;/p&gt;\n\n&lt;p&gt;And yeah, short answer: these &amp;quot;Bernoulli&amp;#39;s principle&amp;quot; descriptions of wings are often wildly misapplied, misinterpreted, or just wrong. A better description is simply &amp;quot;wings are slanted and shove air down, pushing the plane up&amp;quot;, which makes it more obvious that a plane can still fly with its belly up as long as its wings are still slanted in the right direction.&lt;/p&gt;\n\n&lt;p&gt;(To be clear: Bernoulli&amp;#39;s principle isn&amp;#39;t wrong. It&amp;#39;s just that people often misdescribe or misunderstand the principle when explaining plane wings, so it&amp;#39;s best not to mention it at all unless you want to dive deeper into fluid mechanics.)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rq2gtg", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/explainlikeimfive/comments/rq2gtg/eli5_if_bernoullis_principle_is_true_then_why_are/hq9ljjq/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/explainlikeimfive/comments/rq2gtg/eli5_if_bernoullis_principle_is_true_then_why_are/", "name": "t1_hq9ljjq", "author_flair_template_id": null, "subreddit_name_prefixed": "r/explainlikeimfive", "author_flair_text": null, "treatment_tags": [], "created": 1640690744.0, "created_utc": 1640690744.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/explainlikeimfive/comments/rq2gtg/eli5_if_bernoullis_principle_is_true_then_why_are/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r87b", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "How to catch up with peers in terms of coding?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cmu", "link_author": "apirational-avocado", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hpsm3j9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 16, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hprf2q9", "score": 1, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Yeah, it's good to note that not all CS classes are the same, even within CMU. 150 &amp; 210 may resonate more with some people than 122 or 213. (And vice versa! I was a 210 TA back in my day, I have seen both directions first-hand.)\n\nI'd still encourage seizing the initiative and practicing more on your own, OP. Just, don't get too into your own head about having had a tough time in 122, during 150 you'll notice that literally all of your peers are afflicted with equal inexperience in SML. It's the perfect chance to try to catch up a bit! :P", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, it&amp;#39;s good to note that not all CS classes are the same, even within CMU. 150 &amp;amp; 210 may resonate more with some people than 122 or 213. (And vice versa! I was a 210 TA back in my day, I have seen both directions first-hand.)&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d still encourage seizing the initiative and practicing more on your own, OP. Just, don&amp;#39;t get too into your own head about having had a tough time in 122, during 150 you&amp;#39;ll notice that literally all of your peers are afflicted with equal inexperience in SML. It&amp;#39;s the perfect chance to try to catch up a bit! :P&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rn06x5", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cmu/comments/rn06x5/how_to_catch_up_with_peers_in_terms_of_coding/hpsm3j9/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cmu/comments/rn06x5/how_to_catch_up_with_peers_in_terms_of_coding/", "name": "t1_hpsm3j9", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cmu", "author_flair_text": null, "treatment_tags": [], "created": 1640341225.0, "created_utc": 1640341225.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cmu/comments/rn06x5/how_to_catch_up_with_peers_in_terms_of_coding/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r87b", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Missing the first 3 weeks of classes because of a medical procedure", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cmu", "link_author": "mykatz50", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hpsjpwi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 9, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hps55b3", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "This 100%. Start with your academic advisor if you haven't already, and also email your professors. (...Maybe wait until a week before the semester starts for the latter, that's probably a better time for most profs than right now.)\n\nThen, follow up with your professors once you're back on your feet. In a vaguely similar situation, I had a prof be almost unresponsive over email ahead of my absence, and then very accommodating afterward about making up work.\n\nAnd of course, also talk to your academic advisor again when you get back if you're unsure about anything, it is literally their job to advise you through stuff like this and in my experience they were pretty good at it :)\n\nGood luck OP!", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This 100%. Start with your academic advisor if you haven&amp;#39;t already, and also email your professors. (...Maybe wait until a week before the semester starts for the latter, that&amp;#39;s probably a better time for most profs than right now.)&lt;/p&gt;\n\n&lt;p&gt;Then, follow up with your professors once you&amp;#39;re back on your feet. In a vaguely similar situation, I had a prof be almost unresponsive over email ahead of my absence, and then very accommodating afterward about making up work.&lt;/p&gt;\n\n&lt;p&gt;And of course, also talk to your academic advisor again when you get back if you&amp;#39;re unsure about anything, it is literally their job to advise you through stuff like this and in my experience they were pretty good at it :)&lt;/p&gt;\n\n&lt;p&gt;Good luck OP!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rnfvra", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cmu/comments/rnfvra/missing_the_first_3_weeks_of_classes_because_of_a/hpsjpwi/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cmu/comments/rnfvra/missing_the_first_3_weeks_of_classes_because_of_a/", "name": "t1_hpsjpwi", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cmu", "author_flair_text": null, "treatment_tags": [], "created": 1640339183.0, "created_utc": 1640339183.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cmu/comments/rnfvra/missing_the_first_3_weeks_of_classes_because_of_a/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "ELI5: How come water does not go through a stage of becoming more firm or soft-solid as it approaches it's freezing point? Shouldn't it become more viscous or thick as it gets closer to the point it moves from liquid to solid?", "mod_reason_by": null, "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "explainlikeimfive", "link_author": "Dekes1", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hoq72l5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 35, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hoq386j", "score": 8, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Yep, the same explanation applies to vodka (and many other liquids).\n\nTangent: even though vodka is 60% water, it's NOT true that something like \"little ice crystals are forming in the vodka, making it thicker\" happens. Mixtures of miscible liquids have different properties than their constituents, including freezing point, viscosity, etc.\n\nAlthough, that \"little ice crystals\" explanation can be true for certain materials other than vodka, like ice cream.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yep, the same explanation applies to vodka (and many other liquids).&lt;/p&gt;\n\n&lt;p&gt;Tangent: even though vodka is 60% water, it&amp;#39;s NOT true that something like &amp;quot;little ice crystals are forming in the vodka, making it thicker&amp;quot; happens. Mixtures of miscible liquids have different properties than their constituents, including freezing point, viscosity, etc.&lt;/p&gt;\n\n&lt;p&gt;Although, that &amp;quot;little ice crystals&amp;quot; explanation can be true for certain materials other than vodka, like ice cream.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rh9x11", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/explainlikeimfive/comments/rh9x11/eli5_how_come_water_does_not_go_through_a_stage/hoq72l5/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/explainlikeimfive/comments/rh9x11/eli5_how_come_water_does_not_go_through_a_stage/", "name": "t1_hoq72l5", "author_flair_template_id": null, "subreddit_name_prefixed": "r/explainlikeimfive", "author_flair_text": null, "treatment_tags": [], "created": 1639620817.0, "created_utc": 1639620817.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/explainlikeimfive/comments/rh9x11/eli5_how_come_water_does_not_go_through_a_stage/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r87b", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "CMU School of Computer Science \"lore\"", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cmu", "link_author": "CMUDDGthrowaway", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ho2awrn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 26, "can_mod_post": false, "send_replies": true, "parent_id": "t1_ho0lcep", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Reminds me of a less crazy story: a few years ago, during a minor renovation of the CIC, they pulled up the floor panels and found a cryptocurrency mining rig running down there. Not that big, IIRC it was like 6 GPUs. The owner was not uncovered.\n\nThe funnier part is, whoever set this up could have just left the machine out running on a desk and I doubt anyone would have questioned it. This was a cubicle area of the CIC that was basically unused at the time with random computers &amp; tech detritus scattered around the desks (e.g. I vaguely remember a pile of large quadcopters that sat around for like 2 years).", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Reminds me of a less crazy story: a few years ago, during a minor renovation of the CIC, they pulled up the floor panels and found a cryptocurrency mining rig running down there. Not that big, IIRC it was like 6 GPUs. The owner was not uncovered.&lt;/p&gt;\n\n&lt;p&gt;The funnier part is, whoever set this up could have just left the machine out running on a desk and I doubt anyone would have questioned it. This was a cubicle area of the CIC that was basically unused at the time with random computers &amp;amp; tech detritus scattered around the desks (e.g. I vaguely remember a pile of large quadcopters that sat around for like 2 years).&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rd7nlr", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cmu/comments/rd7nlr/cmu_school_of_computer_science_lore/ho2awrn/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cmu/comments/rd7nlr/cmu_school_of_computer_science_lore/", "name": "t1_ho2awrn", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cmu", "author_flair_text": null, "treatment_tags": [], "created": 1639185838.0, "created_utc": 1639185838.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cmu/comments/rd7nlr/cmu_school_of_computer_science_lore/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh13", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Swiss vote to approve COVID restrictions as infections rise. Swiss voters have given clear backing to legislation that introduced special COVID-19 certificates under which only people who have been vaccinated, recovered or tested negative can attend public events and gatherings", "mod_reason_by": null, "banned_by": null, "ups": 23, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "worldnews", "link_author": "calbert1735", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hmhh8ha", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 2823, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hmh05i1", "score": 23, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "FWIW California does this a lot and it mostly just sucks. In and of itself, running a bunch of referendums does little to improve governance.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FWIW California does this a lot and it mostly just sucks. In and of itself, running a bunch of referendums does little to improve governance.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_r4j32z", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/worldnews/comments/r4j32z/swiss_vote_to_approve_covid_restrictions_as/hmhh8ha/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/worldnews/comments/r4j32z/swiss_vote_to_approve_covid_restrictions_as/", "name": "t1_hmhh8ha", "author_flair_template_id": null, "subreddit_name_prefixed": "r/worldnews", "author_flair_text": null, "treatment_tags": [], "created": 1638154995.0, "created_utc": 1638154995.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://abcnews.go.com/Health/wireStory/swiss-vote-approve-covid-restrictions-infections-rise-81431684"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2xxyj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Steve Jobs wasn\u2019t super honest", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Damnthatsinteresting", "link_author": "ClaraLaraMeadie", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hm79159", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 2953, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hm5piry", "score": 1, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Apple was also fucking up PDAs in the 90s https://en.wikipedia.org/wiki/Apple_Newton\n\nIf anything, Apple had the head start, which might even demonstrate the point harder. It took Apple \"over 20 years\" to develop the iPhone. It's not like Apple just waltzed into the space and reinvented it overnight, which would have suggested that someone else could have done it as well.\n\nUnfortunately, the other players in the space with the best chances of \"creating the iPhone\" got so absolutely murdered by the iPhone that they could barely copy it fast enough to survive. So, pretty difficult to guess how their devices would have evolved had Apple not released the iPhone.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Apple was also fucking up PDAs in the 90s &lt;a href=\"https://en.wikipedia.org/wiki/Apple_Newton\"&gt;https://en.wikipedia.org/wiki/Apple_Newton&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If anything, Apple had the head start, which might even demonstrate the point harder. It took Apple &amp;quot;over 20 years&amp;quot; to develop the iPhone. It&amp;#39;s not like Apple just waltzed into the space and reinvented it overnight, which would have suggested that someone else could have done it as well.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately, the other players in the space with the best chances of &amp;quot;creating the iPhone&amp;quot; got so absolutely murdered by the iPhone that they could barely copy it fast enough to survive. So, pretty difficult to guess how their devices would have evolved had Apple not released the iPhone.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_r2npkc", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Damnthatsinteresting/comments/r2npkc/steve_jobs_wasnt_super_honest/hm79159/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Damnthatsinteresting/comments/r2npkc/steve_jobs_wasnt_super_honest/", "name": "t1_hm79159", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Damnthatsinteresting", "author_flair_text": null, "treatment_tags": [], "created": 1637963214.0, "created_utc": 1637963214.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.redd.it/jd1g91p31y181.jpg"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Embedding a file as a string at compile time", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "Fish_45", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hkrr11y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 4, "can_mod_post": false, "send_replies": true, "parent_id": "t3_quqgqk", "score": 4, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "[`ppx_blob`](https://opam.ocaml.org/packages/ppx_blob/) does this.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://opam.ocaml.org/packages/ppx_blob/\"&gt;&lt;code&gt;ppx_blob&lt;/code&gt;&lt;/a&gt; does this.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_quqgqk", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/quqgqk/embedding_a_file_as_a_string_at_compile_time/hkrr11y/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/quqgqk/embedding_a_file_as_a_string_at_compile_time/", "name": "t1_hkrr11y", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1637011643.0, "created_utc": 1637011643.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/quqgqk/embedding_a_file_as_a_string_at_compile_time/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh13", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "EU hijab inclusivity campaign dropped after anger in France", "mod_reason_by": null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "worldnews", "link_author": "Dark-X", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hje60j2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 5471, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hjbi5l3", "score": 0, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Ah, sorry, I was trying to clarify that this wasn't an argument against your point. I totally agree that wearing a hijab or whatever isn't a cultural attack on anyone.\n\nI was just chasing the tangent of linking anti-hijab sentiment in France to \"attacks\": there's a startling amount of recent terrorism in France that (if the descriptions at the linked Wikipedia article are to be believed) are perceived as Islamic attacks on French culture, which lead to generic Islamophobia, which materializes as popular support for this anti-hijab nonsense.\n\nDefinitely didn't mean to come off as \"well all Muslims are terrorists so ban the hijabs\". Was only looking to share a little sympathy at the conditions under which France has to resolve its present culture clashes.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, sorry, I was trying to clarify that this wasn&amp;#39;t an argument against your point. I totally agree that wearing a hijab or whatever isn&amp;#39;t a cultural attack on anyone.&lt;/p&gt;\n\n&lt;p&gt;I was just chasing the tangent of linking anti-hijab sentiment in France to &amp;quot;attacks&amp;quot;: there&amp;#39;s a startling amount of recent terrorism in France that (if the descriptions at the linked Wikipedia article are to be believed) are perceived as Islamic attacks on French culture, which lead to generic Islamophobia, which materializes as popular support for this anti-hijab nonsense.&lt;/p&gt;\n\n&lt;p&gt;Definitely didn&amp;#39;t mean to come off as &amp;quot;well all Muslims are terrorists so ban the hijabs&amp;quot;. Was only looking to share a little sympathy at the conditions under which France has to resolve its present culture clashes.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_qmlhmi", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/worldnews/comments/qmlhmi/eu_hijab_inclusivity_campaign_dropped_after_anger/hje60j2/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/worldnews/comments/qmlhmi/eu_hijab_inclusivity_campaign_dropped_after_anger/", "name": "t1_hje60j2", "author_flair_template_id": null, "subreddit_name_prefixed": "r/worldnews", "author_flair_text": null, "treatment_tags": [], "created": 1636102296.0, "created_utc": 1636102296.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.thenationalnews.com/world/uk-news/2021/11/04/eu-hijab-inclusivity-campaign-dropped-after-anger-in-france/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh13", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "EU hijab inclusivity campaign dropped after anger in France", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "worldnews", "link_author": "Dark-X", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hjbfdat", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 5471, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hjb3je4", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 1, "body": "Interesting choice of words, because a lot of non-Muslims in France likely feel literally under attack right now, given the constant stream of Islamist terrorist attacks in the last few years https://en.m.wikipedia.org/wiki/List_of_terrorist_incidents_in_France\n\n(Whether or not literal/cultural attack is happening, or if that would justify legal push-back against Islamic practices, is everyone's own opinion. All I'm saying is that I think you've found a key point in understanding sentiments here.)", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting choice of words, because a lot of non-Muslims in France likely feel literally under attack right now, given the constant stream of Islamist terrorist attacks in the last few years &lt;a href=\"https://en.m.wikipedia.org/wiki/List_of_terrorist_incidents_in_France\"&gt;https://en.m.wikipedia.org/wiki/List_of_terrorist_incidents_in_France&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Whether or not literal/cultural attack is happening, or if that would justify legal push-back against Islamic practices, is everyone&amp;#39;s own opinion. All I&amp;#39;m saying is that I think you&amp;#39;ve found a key point in understanding sentiments here.)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_qmlhmi", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/worldnews/comments/qmlhmi/eu_hijab_inclusivity_campaign_dropped_after_anger/hjbfdat/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/worldnews/comments/qmlhmi/eu_hijab_inclusivity_campaign_dropped_after_anger/", "name": "t1_hjbfdat", "author_flair_template_id": null, "subreddit_name_prefixed": "r/worldnews", "author_flair_text": null, "treatment_tags": [], "created": 1636052038.0, "created_utc": 1636052038.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.thenationalnews.com/world/uk-news/2021/11/04/eu-hijab-inclusivity-campaign-dropped-after-anger-in-france/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "ELI5: Why is blue such a rare color in animals?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "explainlikeimfive", "link_author": "Communist_Pants", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hhy54a1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 19, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hhxtt2t", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Any \"it didn't evolve because it's energetically expensive\" argument should probably be amended to \"expensive relative to the benefits it provides\", which explains why things tend to produce beta-carotene and not indigo dye.\n\n...but this doesn't really fix the above explanation, there's a lot wrong with it. Like, things don't need to have molecules that absorb red&amp;green and reflect blue to appear blue (e.g. the sky, blue eyes), blue pigments don't need to be \"complex\" (e.g. cobalt aluminate, metal nanoparticles), \"complex\" things aren't necessarily energetically more expensive to create than \"simple\" things  (unless you define complexity that way).", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any &amp;quot;it didn&amp;#39;t evolve because it&amp;#39;s energetically expensive&amp;quot; argument should probably be amended to &amp;quot;expensive relative to the benefits it provides&amp;quot;, which explains why things tend to produce beta-carotene and not indigo dye.&lt;/p&gt;\n\n&lt;p&gt;...but this doesn&amp;#39;t really fix the above explanation, there&amp;#39;s a lot wrong with it. Like, things don&amp;#39;t need to have molecules that absorb red&amp;amp;green and reflect blue to appear blue (e.g. the sky, blue eyes), blue pigments don&amp;#39;t need to be &amp;quot;complex&amp;quot; (e.g. cobalt aluminate, metal nanoparticles), &amp;quot;complex&amp;quot; things aren&amp;#39;t necessarily energetically more expensive to create than &amp;quot;simple&amp;quot; things  (unless you define complexity that way).&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_qf6q59", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/explainlikeimfive/comments/qf6q59/eli5_why_is_blue_such_a_rare_color_in_animals/hhy54a1/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/explainlikeimfive/comments/qf6q59/eli5_why_is_blue_such_a_rare_color_in_animals/", "name": "t1_hhy54a1", "author_flair_template_id": null, "subreddit_name_prefixed": "r/explainlikeimfive", "author_flair_text": null, "treatment_tags": [], "created": 1635134764.0, "created_utc": 1635134764.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/explainlikeimfive/comments/qf6q59/eli5_why_is_blue_such_a_rare_color_in_animals/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh60", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "OCaml slower than Haskell?", "mod_reason_by": null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "ocaml", "link_author": "argent_smith", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "gg2xzb8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 22, "can_mod_post": false, "send_replies": true, "parent_id": "t3_ke5r7n", "score": 7, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "OCaml is usually a bit faster, according to the benchmarks at https://benchmarksgame-team.pages.debian.net/benchmarksgame/which-programs-are-fastest.html \n\n(The site itself does a good job of explaining why all this should be taken with a massive grain of salt, and you're encouraged to look side-by-side at the actual programs being compared. To me, it looks like Haskell programs need to use massive amounts of the \"Unsafe\" to be competitive with other languages, which suggests to me that GHC is not all that good at \"optimization\" relative to other languages.)", "edited": 1608159677.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OCaml is usually a bit faster, according to the benchmarks at &lt;a href=\"https://benchmarksgame-team.pages.debian.net/benchmarksgame/which-programs-are-fastest.html\"&gt;https://benchmarksgame-team.pages.debian.net/benchmarksgame/which-programs-are-fastest.html&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;(The site itself does a good job of explaining why all this should be taken with a massive grain of salt, and you&amp;#39;re encouraged to look side-by-side at the actual programs being compared. To me, it looks like Haskell programs need to use massive amounts of the &amp;quot;Unsafe&amp;quot; to be competitive with other languages, which suggests to me that GHC is not all that good at &amp;quot;optimization&amp;quot; relative to other languages.)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_ke5r7n", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/ocaml/comments/ke5r7n/ocaml_slower_than_haskell/gg2xzb8/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/ocaml/comments/ke5r7n/ocaml_slower_than_haskell/", "name": "t1_gg2xzb8", "author_flair_template_id": null, "subreddit_name_prefixed": "r/ocaml", "author_flair_text": null, "treatment_tags": [], "created": 1608159476.0, "created_utc": 1608159476.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/ocaml/comments/ke5r7n/ocaml_slower_than_haskell/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh18", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Phoronix - Apple M1 ARM Performance With A 2020 Mac Mini", "mod_reason_by": null, "banned_by": null, "ups": 17, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "hardware", "link_author": "X712", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "gd57r18", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 134, "can_mod_post": false, "send_replies": true, "parent_id": "t1_gd41d6g", "score": 17, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "It's a combination of AOT and JIT. (And technically a little bit of hardware assistance; M1 has a special flag to enable an x86-compatible cache coherency model.)", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a combination of AOT and JIT. (And technically a little bit of hardware assistance; M1 has a special flag to enable an x86-compatible cache coherency model.)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_jyeycq", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/hardware/comments/jyeycq/phoronix_apple_m1_arm_performance_with_a_2020_mac/gd57r18/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/hardware/comments/jyeycq/phoronix_apple_m1_arm_performance_with_a_2020_mac/", "name": "t1_gd57r18", "author_flair_template_id": null, "subreddit_name_prefixed": "r/hardware", "author_flair_text": null, "treatment_tags": [], "created": 1606010173.0, "created_utc": 1606010173.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.phoronix.com/scan.php?page=article&amp;item=apple-mac-m1&amp;num=1"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2sokd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "ELI5: why does squinting help you see a little better when you don\u2019t have your glasses on?", "mod_reason_by": null, "banned_by": null, "ups": 54, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "explainlikeimfive", "link_author": "TheTalmidim", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "g4laugm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "clockish", "num_comments": 504, "can_mod_post": false, "send_replies": true, "parent_id": "t1_g4k1zma", "score": 54, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "FWIW, it doesn't decrease the size of the picture. What decreases is the amount of light being gathered, so the picture is dimmer (assuming we're holding exposure time and ISO constant. In reality, you basically always up the ISO to avoid dim pictures, which makes the picture noisier instead of dimmer).\n\nYou could also lengthen the exposure time to maintain brightness and low noise, at the cost of moving subjects becoming blurry.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FWIW, it doesn&amp;#39;t decrease the size of the picture. What decreases is the amount of light being gathered, so the picture is dimmer (assuming we&amp;#39;re holding exposure time and ISO constant. In reality, you basically always up the ISO to avoid dim pictures, which makes the picture noisier instead of dimmer).&lt;/p&gt;\n\n&lt;p&gt;You could also lengthen the exposure time to maintain brightness and low noise, at the cost of moving subjects becoming blurry.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_ipi3td", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/explainlikeimfive/comments/ipi3td/eli5_why_does_squinting_help_you_see_a_little/g4laugm/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/explainlikeimfive/comments/ipi3td/eli5_why_does_squinting_help_you_see_a_little/", "name": "t1_g4laugm", "author_flair_template_id": null, "subreddit_name_prefixed": "r/explainlikeimfive", "author_flair_text": null, "treatment_tags": [], "created": 1599689158.0, "created_utc": 1599689158.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/explainlikeimfive/comments/ipi3td/eli5_why_does_squinting_help_you_see_a_little/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhi6", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Electric discharge", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Physics", "link_author": "Nervous_Buddy", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "g2morxu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 20, "can_mod_post": false, "send_replies": true, "parent_id": "t1_g2kx06j", "score": 2, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "That's quite cool, I had no idea the streamer mechanisms were that asymmetric. I look forward to someday seeing crazy exotic-atmosphere lightning demonstrations from your community :P", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s quite cool, I had no idea the streamer mechanisms were that asymmetric. I look forward to someday seeing crazy exotic-atmosphere lightning demonstrations from your community :P&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_iez0m9", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Physics/comments/iez0m9/electric_discharge/g2morxu/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Physics/comments/iez0m9/electric_discharge/", "name": "t1_g2morxu", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Physics", "author_flair_text": null, "treatment_tags": [], "created": 1598220327.0, "created_utc": 1598220327.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Physics/comments/iez0m9/electric_discharge/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhi6", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Electric discharge", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Physics", "link_author": "Nervous_Buddy", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "g2kl9ck", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "clockish", "num_comments": 20, "can_mod_post": false, "send_replies": true, "parent_id": "t1_g2kjpp7", "score": 3, "author_fullname": "t2_cohd9", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "...a simpler answer that better highlights the symmetry of the situations is that: You can usually think of charge as relative, so a \"positively charged object\" is like a neutral object surrounded by negatively charged objects. Thus, a discharge can still occur.\n\n(Just thinking about charges as relative, without worrying about electrons, will generally hold for electric circuits, AP Physics questions, and wanting to avoid get shocked by highly charged objects. It doesn't quite hold for things like battery chemistry, where considering the actual movement of electrons for their availability in reactions is somewhat important... but of course both ends of a battery are equally adept at shocking you.)", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;...a simpler answer that better highlights the symmetry of the situations is that: You can usually think of charge as relative, so a &amp;quot;positively charged object&amp;quot; is like a neutral object surrounded by negatively charged objects. Thus, a discharge can still occur.&lt;/p&gt;\n\n&lt;p&gt;(Just thinking about charges as relative, without worrying about electrons, will generally hold for electric circuits, AP Physics questions, and wanting to avoid get shocked by highly charged objects. It doesn&amp;#39;t quite hold for things like battery chemistry, where considering the actual movement of electrons for their availability in reactions is somewhat important... but of course both ends of a battery are equally adept at shocking you.)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_iez0m9", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Physics/comments/iez0m9/electric_discharge/g2kl9ck/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Physics/comments/iez0m9/electric_discharge/", "name": "t1_g2kl9ck", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Physics", "author_flair_text": null, "treatment_tags": [], "created": 1598179600.0, "created_utc": 1598179600.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Physics/comments/iez0m9/electric_discharge/"}}], "before": null}}