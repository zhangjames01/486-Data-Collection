{"kind": "Listing", "data": {"after": "t1_hlx81wl", "dist": 25, "modhash": null, "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "PI planning preparation", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "randomUser9393", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "j9qtg2y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 19, "can_mod_post": false, "send_replies": true, "parent_id": "t3_11934cs", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "How long have you been doing SAFe? \n\nDepending on where you are, there are typical patterns we follow in large scale transformations. And there\u2019s a lot of back and forth as you do what\u2019s necessary for emergent practices. (See cynefin framework for further context) \n\nIe: how is your org at release management and change management as a discipline? I\u2019m willing to bet it\u2019s crap. So your RTEs and change agents are likely working on foundational knowledge. We can\u2019t expect everyone to suddenly start using calculus if they don\u2019t know their multiplication tables and don\u2019t yet understand the limits of algebra. If you don\u2019t yet understand why you can\u2019t break every problem into an algebra problem, are you going to seriously invest in learning calculus? \n\nWe\u2019re year 3 into our journey. Our first year was spent defining releases. Next was features. Now we\u2019re going into backlogs. I make that sound organized, but groups already strong at releases spent the extra time learning how to handle new concepts. We\u2019re still bad at it. The org itself is in like Year 10 of its transformation to agile. This stuff is hard to do at scale. \n\nThis also doesn\u2019t address the biggest challenge/elephant in the room: how do you teach someone iterative change management when they don\u2019t understand change at a fundamental level? \n\nBring your concerns up. Challenge your SMS to explain what\u2019s going on. They should know.\n\n Keep in mind you may be volunteering to help drive change. This has its perks and is great career capital if you know how to engage. It\u2019s mostly thankless, so don\u2019t get suckered into work. Part of the job of the RTE is ensure accountability. Without volunteers it goes to leadership/management", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How long have you been doing SAFe? &lt;/p&gt;\n\n&lt;p&gt;Depending on where you are, there are typical patterns we follow in large scale transformations. And there\u2019s a lot of back and forth as you do what\u2019s necessary for emergent practices. (See cynefin framework for further context) &lt;/p&gt;\n\n&lt;p&gt;Ie: how is your org at release management and change management as a discipline? I\u2019m willing to bet it\u2019s crap. So your RTEs and change agents are likely working on foundational knowledge. We can\u2019t expect everyone to suddenly start using calculus if they don\u2019t know their multiplication tables and don\u2019t yet understand the limits of algebra. If you don\u2019t yet understand why you can\u2019t break every problem into an algebra problem, are you going to seriously invest in learning calculus? &lt;/p&gt;\n\n&lt;p&gt;We\u2019re year 3 into our journey. Our first year was spent defining releases. Next was features. Now we\u2019re going into backlogs. I make that sound organized, but groups already strong at releases spent the extra time learning how to handle new concepts. We\u2019re still bad at it. The org itself is in like Year 10 of its transformation to agile. This stuff is hard to do at scale. &lt;/p&gt;\n\n&lt;p&gt;This also doesn\u2019t address the biggest challenge/elephant in the room: how do you teach someone iterative change management when they don\u2019t understand change at a fundamental level? &lt;/p&gt;\n\n&lt;p&gt;Bring your concerns up. Challenge your SMS to explain what\u2019s going on. They should know.&lt;/p&gt;\n\n&lt;p&gt;Keep in mind you may be volunteering to help drive change. This has its perks and is great career capital if you know how to engage. It\u2019s mostly thankless, so don\u2019t get suckered into work. Part of the job of the RTE is ensure accountability. Without volunteers it goes to leadership/management&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_11934cs", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/11934cs/pi_planning_preparation/j9qtg2y/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/11934cs/pi_planning_preparation/", "name": "t1_j9qtg2y", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1677190731.0, "created_utc": 1677190731.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/11934cs/pi_planning_preparation/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Struggling to find another job. Not looking for Contract roles.", "mod_reason_by": null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "dpoduval", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i5jljmj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 41, "can_mod_post": false, "send_replies": true, "parent_id": "t1_i5ir8gu", "score": 0, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Other than the vc comment, I don\u2019t feel that you have said anything that contradicts me. Unless you want me to address something specific I\u2019ll keep my comment to that. Otherwise I feel we\u2019re in violent agreement.\n\nYes, Boston has software. Everywhere does. That Doesn\u2019t mean they are known for their expertise in it. The Midwest certainly isn\u2019t. It\u2019s mostly insurance, healthcare and banks. All of the best agilits I know work in biopharma. We all agree biopharma isn\u2019t agile and shouldn\u2019t be. So we hybridize and use agile project management. The entire business needs to be considered. Pure agile does not make sense for biopharma software due to regulations. The level and scale of swift adaptability simply isn\u2019t needed. No smart company is going to over invest here. \n\nVC and start ups are a very different beast than modern or traditional software development. It\u2019s extremely intellectually dishonest to imply these skills are transferable. An org in vc needs different skills at different stages of vc due to the scalability and availability the company is trying to achieve with how workable the software currently is. This is a big reason contracting SMs is popular. Other than the obvious benefits you can also hire specific skills sets rather than trying to find the unicorns that can do everything. If you\u2019re wanting to be that unicorn and earn the bigger bucks, there\u2019s a clear and obvious path to get them. \n\nAlso agree working in Austin, etc. is not needed. But working in areas with proven experience and success will accelerate learning. This also assumes the sm is wanting to be more pure agile rather than a agile project manager.\n\nEdit: I also thought 130 felt low. Thanks for confirming that", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Other than the vc comment, I don\u2019t feel that you have said anything that contradicts me. Unless you want me to address something specific I\u2019ll keep my comment to that. Otherwise I feel we\u2019re in violent agreement.&lt;/p&gt;\n\n&lt;p&gt;Yes, Boston has software. Everywhere does. That Doesn\u2019t mean they are known for their expertise in it. The Midwest certainly isn\u2019t. It\u2019s mostly insurance, healthcare and banks. All of the best agilits I know work in biopharma. We all agree biopharma isn\u2019t agile and shouldn\u2019t be. So we hybridize and use agile project management. The entire business needs to be considered. Pure agile does not make sense for biopharma software due to regulations. The level and scale of swift adaptability simply isn\u2019t needed. No smart company is going to over invest here. &lt;/p&gt;\n\n&lt;p&gt;VC and start ups are a very different beast than modern or traditional software development. It\u2019s extremely intellectually dishonest to imply these skills are transferable. An org in vc needs different skills at different stages of vc due to the scalability and availability the company is trying to achieve with how workable the software currently is. This is a big reason contracting SMs is popular. Other than the obvious benefits you can also hire specific skills sets rather than trying to find the unicorns that can do everything. If you\u2019re wanting to be that unicorn and earn the bigger bucks, there\u2019s a clear and obvious path to get them. &lt;/p&gt;\n\n&lt;p&gt;Also agree working in Austin, etc. is not needed. But working in areas with proven experience and success will accelerate learning. This also assumes the sm is wanting to be more pure agile rather than a agile project manager.&lt;/p&gt;\n\n&lt;p&gt;Edit: I also thought 130 felt low. Thanks for confirming that&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_u7tbma", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/i5jljmj/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/", "name": "t1_i5jljmj", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1650495028.0, "created_utc": 1650495028.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Struggling to find another job. Not looking for Contract roles.", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "dpoduval", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i5iwz83", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 41, "can_mod_post": false, "send_replies": true, "parent_id": "t1_i5ijk6h", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I\u2019ll do my best. Obvious disclaimer that my experience isn\u2019t all encompassing. Grey areas exist and is expect each hiring manager to have those own strategy. \n\nWhen Asking about daily activities, I\u2019m looking for a split somewhere between 60-40 and 40-60 between coaching the team and engaging at the org level. The biggest red flag is orgs that don\u2019t allows SMs to engage beyond the team. If you only work with your immediate teams, that\u2019s a good indication your agile in paper only. \n\nI haven\u2019t seen many SMs that only facilitate for teams lately, but that would be something else I look at. What do you provide beyond basic facilitation. \n\nAlso knowing what you are good at training teams at. And understand how that aligns with the org transformation. Depth of understanding is variable here. But I expect something. \n\nMorale questions also give me a good idea here. Someone who lives agile cares about the \u201cmental compatibility \u201c of a team too and knows how to utilize the available catalysts for change. Again, variable depth. I\u2019m more concerned at the absence of depth. \n\nSo it\u2019s also knowing what you can personally develop and coach against what you\u2019re willing to pay and finally what you need to complete the transformation\n\n/u/Foxxinator37  answer is very good too:)", "edited": 1650495267.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019ll do my best. Obvious disclaimer that my experience isn\u2019t all encompassing. Grey areas exist and is expect each hiring manager to have those own strategy. &lt;/p&gt;\n\n&lt;p&gt;When Asking about daily activities, I\u2019m looking for a split somewhere between 60-40 and 40-60 between coaching the team and engaging at the org level. The biggest red flag is orgs that don\u2019t allows SMs to engage beyond the team. If you only work with your immediate teams, that\u2019s a good indication your agile in paper only. &lt;/p&gt;\n\n&lt;p&gt;I haven\u2019t seen many SMs that only facilitate for teams lately, but that would be something else I look at. What do you provide beyond basic facilitation. &lt;/p&gt;\n\n&lt;p&gt;Also knowing what you are good at training teams at. And understand how that aligns with the org transformation. Depth of understanding is variable here. But I expect something. &lt;/p&gt;\n\n&lt;p&gt;Morale questions also give me a good idea here. Someone who lives agile cares about the \u201cmental compatibility \u201c of a team too and knows how to utilize the available catalysts for change. Again, variable depth. I\u2019m more concerned at the absence of depth. &lt;/p&gt;\n\n&lt;p&gt;So it\u2019s also knowing what you can personally develop and coach against what you\u2019re willing to pay and finally what you need to complete the transformation&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/u/Foxxinator37\"&gt;/u/Foxxinator37&lt;/a&gt;  answer is very good too:)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_u7tbma", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/i5iwz83/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/", "name": "t1_i5iwz83", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1650485056.0, "created_utc": 1650485056.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Struggling to find another job. Not looking for Contract roles.", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "dpoduval", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i5ivlpz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 41, "can_mod_post": false, "send_replies": true, "parent_id": "t1_i5ihl0f", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Staying put maybe your best option. In my opinion, Boston and NYC aren\u2019t really ready to be agile. So your skills may be ahead of their time. Ie: I\u2019m not convinced you need to be super mature in agile to be successful in that market. If anything you may need to lean more heavily into prince2 because that\u2019s what Everyone knows and expects. Obviously this doesn\u2019t work if you\u2019re goal is more being an expert in agile as opposed to making a decent living. Everyone has their own reasons. Agile project management has a demand. That demand will not go away. \n\nContracting is the best way to get good diverse expierience. After that, I\u2019d look for engagement in local communities to supplement deficiencies at the org level.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Staying put maybe your best option. In my opinion, Boston and NYC aren\u2019t really ready to be agile. So your skills may be ahead of their time. Ie: I\u2019m not convinced you need to be super mature in agile to be successful in that market. If anything you may need to lean more heavily into prince2 because that\u2019s what Everyone knows and expects. Obviously this doesn\u2019t work if you\u2019re goal is more being an expert in agile as opposed to making a decent living. Everyone has their own reasons. Agile project management has a demand. That demand will not go away. &lt;/p&gt;\n\n&lt;p&gt;Contracting is the best way to get good diverse expierience. After that, I\u2019d look for engagement in local communities to supplement deficiencies at the org level.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_u7tbma", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/i5ivlpz/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/", "name": "t1_i5ivlpz", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1650484528.0, "created_utc": 1650484528.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Struggling to find another job. Not looking for Contract roles.", "mod_reason_by": null, "banned_by": null, "ups": -2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "dpoduval", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i5if86s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 41, "can_mod_post": false, "send_replies": true, "parent_id": "t3_u7tbma", "score": -2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Have you looked for remote positions? \n\nI wouldn\u2019t call Boston a software hub. This changes what people look for in the area and what they are willing to pay. If you\u2019ve tried for remote positions and can\u2019t get them\u2026. \n\nThis is an obvious over simplification, but 7 years in Boston isn\u2019t as valuable as 4 years in a place like Austin. Individual organizations matter, it would be misleading to say they don\u2019t matter. But the Boston area as a whole, because it\u2019s not a known tech hub, will on average have lower maturity skill sets when compared to more established areas. Simply put, the orgs themselves don\u2019t have the infrastructure to truly be agile. This stunts your ability to learn what this role is and should be doing in an org. Very few people in general will know how to carve a brand when no one understands what you\u2019re actually doing. \n\nAnd I hate how this sounds, but when you know what to look for it\u2019s obvious who\u2019s agile on paper and who really embodies the mindset. \n\nWhat is your current skill focus? I\u2019m a little worried because after 7 years I\u2019d expect you to be working directly with recruiters and getting cold calls. This makes me think your actual agile skills may be lacking or misrepresented when you\u2019re interviewing\n\nI would try to spend a few years contracting to get more diverse skills. This not only helps you network but also helps you keep your salary in line with inflation. Most places don\u2019t give merit increases based on inflation anyway.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you looked for remote positions? &lt;/p&gt;\n\n&lt;p&gt;I wouldn\u2019t call Boston a software hub. This changes what people look for in the area and what they are willing to pay. If you\u2019ve tried for remote positions and can\u2019t get them\u2026. &lt;/p&gt;\n\n&lt;p&gt;This is an obvious over simplification, but 7 years in Boston isn\u2019t as valuable as 4 years in a place like Austin. Individual organizations matter, it would be misleading to say they don\u2019t matter. But the Boston area as a whole, because it\u2019s not a known tech hub, will on average have lower maturity skill sets when compared to more established areas. Simply put, the orgs themselves don\u2019t have the infrastructure to truly be agile. This stunts your ability to learn what this role is and should be doing in an org. Very few people in general will know how to carve a brand when no one understands what you\u2019re actually doing. &lt;/p&gt;\n\n&lt;p&gt;And I hate how this sounds, but when you know what to look for it\u2019s obvious who\u2019s agile on paper and who really embodies the mindset. &lt;/p&gt;\n\n&lt;p&gt;What is your current skill focus? I\u2019m a little worried because after 7 years I\u2019d expect you to be working directly with recruiters and getting cold calls. This makes me think your actual agile skills may be lacking or misrepresented when you\u2019re interviewing&lt;/p&gt;\n\n&lt;p&gt;I would try to spend a few years contracting to get more diverse skills. This not only helps you network but also helps you keep your salary in line with inflation. Most places don\u2019t give merit increases based on inflation anyway.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_u7tbma", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/i5if86s/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/", "name": "t1_i5if86s", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1650478164.0, "created_utc": 1650478164.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/u7tbma/struggling_to_find_another_job_not_looking_for/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "How to create collaboration in Scrum team", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "raymondroots", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i1b91al", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 18, "can_mod_post": false, "send_replies": true, "parent_id": "t3_tfccew", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The easiest way I\u2019ve gotten a siloed team to work together is give them a shared goal to accomplish. \n\nIn software that usually means a release. Although most scrum masters should tell you to start with the sprint goal. I\u2019ve found releases more tangible. Even if you are used to working individually on your code, a release almost always requires coordination. Especially knowing how bad most places are at devops. \n\nI\u2019d also collaborate with your po to make sure release or sprint goals are collaborative and not simply \u201crelease this list of tickets\u201d", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The easiest way I\u2019ve gotten a siloed team to work together is give them a shared goal to accomplish. &lt;/p&gt;\n\n&lt;p&gt;In software that usually means a release. Although most scrum masters should tell you to start with the sprint goal. I\u2019ve found releases more tangible. Even if you are used to working individually on your code, a release almost always requires coordination. Especially knowing how bad most places are at devops. &lt;/p&gt;\n\n&lt;p&gt;I\u2019d also collaborate with your po to make sure release or sprint goals are collaborative and not simply \u201crelease this list of tickets\u201d&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_tfccew", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/tfccew/how_to_create_collaboration_in_scrum_team/i1b91al/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/tfccew/how_to_create_collaboration_in_scrum_team/", "name": "t1_i1b91al", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1647715953.0, "created_utc": 1647715953.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/tfccew/how_to_create_collaboration_in_scrum_team/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Software Philosophy: Agile Development and 'Programming by Priesthood'", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Agilethrowaway", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "i00f8om", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 17, "can_mod_post": false, "send_replies": true, "parent_id": "t3_taee7p", "score": 3, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I think a lot of 'pure' software companies have moved past this. I think a lot of companies that are starting to become major software entities are just learning this lesson. IE: All the banks, insurance, and automobile companies that are starting to transform have yet to learn this lesson.\n\n&gt;With Agile, there is the dogma of 'One Right Way' to program.\n\nThis isn't true. The closest agile gets to this is devops. but in devops we're more focused on the path to production rather than having a right or wrong way to program.\n\nThe usual path to production is something like:\n\nTest changes against last known good build locally -&gt; Test your changes against other team member changes in a shared test environment -&gt; Test your team changes against other team changes in a shared pre-production/stage environment -&gt; Move to production.\n\nHow this happens varies very widely from org to org and even from team to team within an org sometimes. automation can make this process take minutes and in some orgs this process takes weeks. One thing poor agile implementations often do, is they don't tie the system of work to their branding.\n\nBut really, every agile transformation is about taking that process, making it transparent, and making sure you have feedback loops in the right spots of that process to ensure you almost always deliver the right thing at the right time.\n\nIE: an org that is more about customer service, needs a system of work that is strict in specific ways to ensure uptime, recovery, and backup plans are in place so everyone has the tools they need to laser focus on the users experience and ensuring it's never interrupted.\n\n\\-------\n\nI've always kind of viewed developers like a crew and a ship dedicated to exploring. Often times they will be motivated enough to self start; and if I don't give them direction they are happy to figure out what to do and bring back something of value.\n\nHowever I also shouldn't be surprised every time they bring back a bunch of random crap if I don't provide them any direction.\n\nDepending on my market, maybe any random crap will do. go nuts. but if I'm a jeweler and I'm primarily looking for gems, precious stones, and metals. I better provide strong direction so I get what I want.\n\nAt the same time, I also need to understand I need to provide time for them to maintain their ship and get shore leave. If I send them out constantly that ship is going to break down. Right now, a lot of the ships my crews sail are Victorian style monoliths. they are pretty. they function well enough. but they are slow, don't have radar or many other modern capabilities.\n\nHow the hell are they supposed to adopt modern practices and dogma when they call for the use of tools we don't have and don't know how to build? So for a lot of orgs I also think they haven't given themselves a choice. they have to go back to old ways of thinking because otherwise the system won't work. They simply don't have a modern enough system that enables more modern thinking", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think a lot of &amp;#39;pure&amp;#39; software companies have moved past this. I think a lot of companies that are starting to become major software entities are just learning this lesson. IE: All the banks, insurance, and automobile companies that are starting to transform have yet to learn this lesson.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;With Agile, there is the dogma of &amp;#39;One Right Way&amp;#39; to program.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This isn&amp;#39;t true. The closest agile gets to this is devops. but in devops we&amp;#39;re more focused on the path to production rather than having a right or wrong way to program.&lt;/p&gt;\n\n&lt;p&gt;The usual path to production is something like:&lt;/p&gt;\n\n&lt;p&gt;Test changes against last known good build locally -&amp;gt; Test your changes against other team member changes in a shared test environment -&amp;gt; Test your team changes against other team changes in a shared pre-production/stage environment -&amp;gt; Move to production.&lt;/p&gt;\n\n&lt;p&gt;How this happens varies very widely from org to org and even from team to team within an org sometimes. automation can make this process take minutes and in some orgs this process takes weeks. One thing poor agile implementations often do, is they don&amp;#39;t tie the system of work to their branding.&lt;/p&gt;\n\n&lt;p&gt;But really, every agile transformation is about taking that process, making it transparent, and making sure you have feedback loops in the right spots of that process to ensure you almost always deliver the right thing at the right time.&lt;/p&gt;\n\n&lt;p&gt;IE: an org that is more about customer service, needs a system of work that is strict in specific ways to ensure uptime, recovery, and backup plans are in place so everyone has the tools they need to laser focus on the users experience and ensuring it&amp;#39;s never interrupted.&lt;/p&gt;\n\n&lt;p&gt;-------&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve always kind of viewed developers like a crew and a ship dedicated to exploring. Often times they will be motivated enough to self start; and if I don&amp;#39;t give them direction they are happy to figure out what to do and bring back something of value.&lt;/p&gt;\n\n&lt;p&gt;However I also shouldn&amp;#39;t be surprised every time they bring back a bunch of random crap if I don&amp;#39;t provide them any direction.&lt;/p&gt;\n\n&lt;p&gt;Depending on my market, maybe any random crap will do. go nuts. but if I&amp;#39;m a jeweler and I&amp;#39;m primarily looking for gems, precious stones, and metals. I better provide strong direction so I get what I want.&lt;/p&gt;\n\n&lt;p&gt;At the same time, I also need to understand I need to provide time for them to maintain their ship and get shore leave. If I send them out constantly that ship is going to break down. Right now, a lot of the ships my crews sail are Victorian style monoliths. they are pretty. they function well enough. but they are slow, don&amp;#39;t have radar or many other modern capabilities.&lt;/p&gt;\n\n&lt;p&gt;How the hell are they supposed to adopt modern practices and dogma when they call for the use of tools we don&amp;#39;t have and don&amp;#39;t know how to build? So for a lot of orgs I also think they haven&amp;#39;t given themselves a choice. they have to go back to old ways of thinking because otherwise the system won&amp;#39;t work. They simply don&amp;#39;t have a modern enough system that enables more modern thinking&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_taee7p", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/taee7p/software_philosophy_agile_development_and/i00f8om/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/taee7p/software_philosophy_agile_development_and/", "name": "t1_i00f8om", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1646854862.0, "created_utc": 1646854862.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/taee7p/software_philosophy_agile_development_and/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Can someone please explain to me what the Lean methodology is and 6 sigma? It would be really helpful if you could use practical/real life examples.", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Fantasydreamer2450", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hxuf1bz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 10, "can_mod_post": false, "send_replies": true, "parent_id": "t3_swn7nr", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The source material for Lean is the Toyota Production System. I think Six Sigma was Motorolla; but I can't remember.   \n\n\nAnyway, Toyota, being in Japan, had a problem that many other auto makers don't have: Japan has no space for warehouses or storage. So, how do you make a lot of cars if you can't keep parts on hand?   \n\n\nToyota's solution to this was 'Just in Time' Manufacturing. Partnering with suppliers and creating a system of transparency to enable lightning fast decision making with one goal in mind: Ensure that parts arrived where they were needed when they were needed as cheap as possible. Turns out, this also ensure very high quality because this also means you don't have backup parts if you can't keep a surplus just lying around.   \n\n\nThis mindset is what gave birth to Lean, and 'eliminating waste' In the west; we dont' have the same space problem. so we needed a different 'north star' to guide the framework. Companies in the west wanted to realize the same cost savings and quality of Toyota. The main thing linking the two together is a general sense of 'We can't afford to do certain activities, so eliminate them from our workflow' In Toyota's case this was storage of parts. Parts sitting around don't make money. the longer they sit, the more money you are wasting. both because you can't sell the individual part and you have to pay to store it.   \n\n\nin software, this directly translates to unutilized code in repositories. I can't make money on code that isn't in production. higher WIPs directly translate to higher amounts of code not being utilized; etc. This is lean thinking.   \n\n\nSix Sigma focuses more on limiting defects. so If I want to ensure 99.999% uptime of a website; Six Sigma tactics will likely serve me well. although I dont' see six sigma applies to software outside of some specific use-cases.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The source material for Lean is the Toyota Production System. I think Six Sigma was Motorolla; but I can&amp;#39;t remember.   &lt;/p&gt;\n\n&lt;p&gt;Anyway, Toyota, being in Japan, had a problem that many other auto makers don&amp;#39;t have: Japan has no space for warehouses or storage. So, how do you make a lot of cars if you can&amp;#39;t keep parts on hand?   &lt;/p&gt;\n\n&lt;p&gt;Toyota&amp;#39;s solution to this was &amp;#39;Just in Time&amp;#39; Manufacturing. Partnering with suppliers and creating a system of transparency to enable lightning fast decision making with one goal in mind: Ensure that parts arrived where they were needed when they were needed as cheap as possible. Turns out, this also ensure very high quality because this also means you don&amp;#39;t have backup parts if you can&amp;#39;t keep a surplus just lying around.   &lt;/p&gt;\n\n&lt;p&gt;This mindset is what gave birth to Lean, and &amp;#39;eliminating waste&amp;#39; In the west; we dont&amp;#39; have the same space problem. so we needed a different &amp;#39;north star&amp;#39; to guide the framework. Companies in the west wanted to realize the same cost savings and quality of Toyota. The main thing linking the two together is a general sense of &amp;#39;We can&amp;#39;t afford to do certain activities, so eliminate them from our workflow&amp;#39; In Toyota&amp;#39;s case this was storage of parts. Parts sitting around don&amp;#39;t make money. the longer they sit, the more money you are wasting. both because you can&amp;#39;t sell the individual part and you have to pay to store it.   &lt;/p&gt;\n\n&lt;p&gt;in software, this directly translates to unutilized code in repositories. I can&amp;#39;t make money on code that isn&amp;#39;t in production. higher WIPs directly translate to higher amounts of code not being utilized; etc. This is lean thinking.   &lt;/p&gt;\n\n&lt;p&gt;Six Sigma focuses more on limiting defects. so If I want to ensure 99.999% uptime of a website; Six Sigma tactics will likely serve me well. although I dont&amp;#39; see six sigma applies to software outside of some specific use-cases.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_swn7nr", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/swn7nr/can_someone_please_explain_to_me_what_the_lean/hxuf1bz/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/swn7nr/can_someone_please_explain_to_me_what_the_lean/", "name": "t1_hxuf1bz", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1645459407.0, "created_utc": 1645459407.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/swn7nr/can_someone_please_explain_to_me_what_the_lean/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Looking for insight regarding scrum master role in SAFe", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Support_Free", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hxubslx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 9, "can_mod_post": false, "send_replies": true, "parent_id": "t3_sx6xy8", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Almost everyone that complains about SAFe is doing so because it's a meme at this point. A lot of people like to blame SAFe for infrastructure, leadership, or cultural problems, when in reality the agile framework is doing it's job of highlighting a problem that no-one is bothering to go fix. 95% of the time, this problem is outside a scrum masters sphere of influence.\n\nI think a lot of people ingore the fact, that no-one with an already-agile-mindset is going to adopt SAFe. you adopt something like SAFe specifically because you don't know what you're doing and you need to course correct at scale.\n\nScrum and Kanban can't do this (Well, Kanban can but you have to already know what you're doing to do it) because they are essentially grass-roots movements. Without top-level coordination you simply can't scale.\n\nScrum, and really all the agile frameworks, take advantage of being repetitive because repetition is an effective way to learn/teach. If you don't like repetition, don't be a scrum master or agilist.\n\nIf you've built out your processes and infrastructure correctly, the standardizations within SAFe allow you to focus more on impediments. In an environment that needs to scale, dependency and impediment management is what becomes difficult.\n\n\\-----------------\n\n&gt;I enjoy using creativity to produce value of my own as well as acting as a servant leader.\n\nSAFe wont' stop you from doing this. Bad management will.\n\nWorking in SAFe environments can be different/harder than other environments. not because of SAFe itself, but because of the type of environments that need SAFe are, for the most part, inherently broken already. IE: if you already have strong leadership and leaders who know how to not only instill discipline but utilize it: SAFe will cause a lot of problems. Otherwise, it's a good way to introduce leaders into being an agile leader. Of course, it can't do the work for them which creates a bit of a catch 22. this compounds if some parts of the org are more mature than others.\n\nIf you have crap leadership, SAFe provides a way to train, improve, and instill leadership as a skill across the org and not just into specific roles. -&gt; This is a long hard journey; as again, if the organization were capable of doing this on their own, they wouldn't look to adopt safe. there's a lot of weaponized incompetency and intellectual dishonesty that happens in a standard failed SAFe inplementation.\n\nIn addition, it's probably important to mention that most org's doing SAFe, will move to their own custom, internal framework once they know what they are doing.\n\nEvery SAFe environment I've ever worked in, first started as either a scrum shop or Kanban shop and they failed to become agile. Most likely due to a scalability problem. \n\n\\--------------\n\nPut another way: I like working in SAFe environments because the vast majority of SAFe orgs are in the 'Forming' or 'Storming' phase of the agile learning curve. This is the most exciting part of the curve for me, but I know many SMs that like working in the Norming or Performing stages. Probably most of the SMs I know are this type.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Almost everyone that complains about SAFe is doing so because it&amp;#39;s a meme at this point. A lot of people like to blame SAFe for infrastructure, leadership, or cultural problems, when in reality the agile framework is doing it&amp;#39;s job of highlighting a problem that no-one is bothering to go fix. 95% of the time, this problem is outside a scrum masters sphere of influence.&lt;/p&gt;\n\n&lt;p&gt;I think a lot of people ingore the fact, that no-one with an already-agile-mindset is going to adopt SAFe. you adopt something like SAFe specifically because you don&amp;#39;t know what you&amp;#39;re doing and you need to course correct at scale.&lt;/p&gt;\n\n&lt;p&gt;Scrum and Kanban can&amp;#39;t do this (Well, Kanban can but you have to already know what you&amp;#39;re doing to do it) because they are essentially grass-roots movements. Without top-level coordination you simply can&amp;#39;t scale.&lt;/p&gt;\n\n&lt;p&gt;Scrum, and really all the agile frameworks, take advantage of being repetitive because repetition is an effective way to learn/teach. If you don&amp;#39;t like repetition, don&amp;#39;t be a scrum master or agilist.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;ve built out your processes and infrastructure correctly, the standardizations within SAFe allow you to focus more on impediments. In an environment that needs to scale, dependency and impediment management is what becomes difficult.&lt;/p&gt;\n\n&lt;p&gt;-----------------&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I enjoy using creativity to produce value of my own as well as acting as a servant leader.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;SAFe wont&amp;#39; stop you from doing this. Bad management will.&lt;/p&gt;\n\n&lt;p&gt;Working in SAFe environments can be different/harder than other environments. not because of SAFe itself, but because of the type of environments that need SAFe are, for the most part, inherently broken already. IE: if you already have strong leadership and leaders who know how to not only instill discipline but utilize it: SAFe will cause a lot of problems. Otherwise, it&amp;#39;s a good way to introduce leaders into being an agile leader. Of course, it can&amp;#39;t do the work for them which creates a bit of a catch 22. this compounds if some parts of the org are more mature than others.&lt;/p&gt;\n\n&lt;p&gt;If you have crap leadership, SAFe provides a way to train, improve, and instill leadership as a skill across the org and not just into specific roles. -&amp;gt; This is a long hard journey; as again, if the organization were capable of doing this on their own, they wouldn&amp;#39;t look to adopt safe. there&amp;#39;s a lot of weaponized incompetency and intellectual dishonesty that happens in a standard failed SAFe inplementation.&lt;/p&gt;\n\n&lt;p&gt;In addition, it&amp;#39;s probably important to mention that most org&amp;#39;s doing SAFe, will move to their own custom, internal framework once they know what they are doing.&lt;/p&gt;\n\n&lt;p&gt;Every SAFe environment I&amp;#39;ve ever worked in, first started as either a scrum shop or Kanban shop and they failed to become agile. Most likely due to a scalability problem. &lt;/p&gt;\n\n&lt;p&gt;--------------&lt;/p&gt;\n\n&lt;p&gt;Put another way: I like working in SAFe environments because the vast majority of SAFe orgs are in the &amp;#39;Forming&amp;#39; or &amp;#39;Storming&amp;#39; phase of the agile learning curve. This is the most exciting part of the curve for me, but I know many SMs that like working in the Norming or Performing stages. Probably most of the SMs I know are this type.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_sx6xy8", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/sx6xy8/looking_for_insight_regarding_scrum_master_role/hxubslx/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/sx6xy8/looking_for_insight_regarding_scrum_master_role/", "name": "t1_hxubslx", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1645458057.0, "created_utc": 1645458057.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/sx6xy8/looking_for_insight_regarding_scrum_master_role/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hybrid Developer Help", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "GasTankBoy", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hx7re7q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 2, "can_mod_post": false, "send_replies": true, "parent_id": "t3_stz8hs", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "This isn't a hybrid role, but rather the desired state. Every developer should be prepared to support the code they are putting into production.   \n\n\nyou leave a buffer. if you've been diligent, you should have data that should give you an idea of how much capacity you should reserve on average per sprint.   \n\n\nEG: Team has a historical velocity of 55 points.   \n\n\nOn average, the team needs 25 points to handle customer requests.   \n\n\nWhen you go into sprint planning: only plan for 30 points.   \n\n\nIf someone on the team runs out of work because the buffer wasn't needed: pull in the next highest priority from the backlog instead of working on CPS. or do tech debt or w/e the team decided to do when they don't need the buffer.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This isn&amp;#39;t a hybrid role, but rather the desired state. Every developer should be prepared to support the code they are putting into production.   &lt;/p&gt;\n\n&lt;p&gt;you leave a buffer. if you&amp;#39;ve been diligent, you should have data that should give you an idea of how much capacity you should reserve on average per sprint.   &lt;/p&gt;\n\n&lt;p&gt;EG: Team has a historical velocity of 55 points.   &lt;/p&gt;\n\n&lt;p&gt;On average, the team needs 25 points to handle customer requests.   &lt;/p&gt;\n\n&lt;p&gt;When you go into sprint planning: only plan for 30 points.   &lt;/p&gt;\n\n&lt;p&gt;If someone on the team runs out of work because the buffer wasn&amp;#39;t needed: pull in the next highest priority from the backlog instead of working on CPS. or do tech debt or w/e the team decided to do when they don&amp;#39;t need the buffer.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_stz8hs", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/stz8hs/hybrid_developer_help/hx7re7q/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/stz8hs/hybrid_developer_help/", "name": "t1_hx7re7q", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1645041771.0, "created_utc": 1645041771.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/stz8hs/hybrid_developer_help/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Definition of done in project with big ticket variation", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "mystery_orange", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hw89c95", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 23, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hw7axli", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;how do you normally deal with that in your project? Do you have an automated deployment step?\n\nIt's not always an automated deployment step. More often it's semi-automated. and starting out, it will of course be manual. automation is the end-goal but depending on where you are, this could be a multi-year effort.\n\nOn the journey to an automated pipeline, DoD is often the first step. we can't really automate a deployment from dev to test if we don't have standards to build that automation from. Without a good DoD we can't build consistency around the pushes, that's step 1: Establish a baseline and build consistency. focus on one part of the deployment process and then scale from there.\n\nDepending on other problems you're having (IE: many orgs in this position also have security and quality issues) you can roll more initiatives into the DoD as you get closer to a release. IE: performance and security requirements become more stringent starting in test and mirror production in stage. you also want to include things like rollback plans and data recovery as part of DoD\n\nbefore you have fully automated pipelines, it's not uncommon to temporarily have a DoD when exiting each environment.\n\nIE: Dev, Test, Stage, Prod. are the usual suspects. Dev is typically focused on testing individual changes against last known good build. Test is about testing the team's changes against the last known good build. and stage is about testing teams changes against other teams changes in a prod-like conditions.\n\nAs you move through this, your DoD should increase in complexity and homogenize what the teams are working on into releasable code.\n\nbefore you start trying to automate, make sure you understand your environments, how you're using them, how you maintain parity, and the developers have a crystal clear way to understand what is and is not part of a specific build/version.\n\n\\--------\n\nI'd probably start with feature flags and versioning before building in the automation. you'll want a good system for knowing what's in production, what's turned on, what's turned off, and a quick/easy way to interface with those flags and selectively turn off/on specific functionality.\n\nonce you know how to do it, automation can be used to make it easier as you'll have hands on experience knowing specifically what you want it to do. as you start automating your infrastructure, you'll also want to apply the same theory of versioning; when you start to automate you begin approaching infrastructure as code and you'll want to start on the right foot and make sure it's versioned and maintained. you may not have to start out with a dev environment for infrastructure, but you should at least version and have a rollback plan.\n\nMy favorite analogy for this, is a lot of the devops, agile, etc. strategy and tactics we have are built for an F16 Falcon. Right now, you don't have a falcon. you have an F6F Hellcat. the tactics and strategy for an F16 don't really work in an F6F. Afterall, the top speed of the hellcat is pretty close to the stall speed of the f16, you really can't approach them the same way.\n\nYou can't just upgrade your entire fleet of planes to F16s over night either. it's going to be a complex process to both get the new gear AND train not only your pilots but the mechanics, ground crew, supply chain, and support staff to not only use the new equipment but also how to maintain it.\n\nHire an expert. If you can't afford one, find someone with passion in your org and enable them to become an expert. DevOps and Release Management will be the umbrella terms you are most interested in. Highly recommend anything by the poppendiecks you can get your hands on and watching Mary's keynotes will give a lot of insight. \n\n\\---------\n\nEdit:  \n\n\nWanted to address 'projects' as well.   \n\n\nIn general, what we are talking about here exists outside of a project and it's better to think of it as part of the infrastructure needed to execute and deliver projects. \n\nProjects as a construct dont' really work in the agile world. and while there are hybrid models, more often than not they end up with all problems and none of the benefit. \n\nAt the portfolio level, we usually track progress of investments with a Kanban.   \nOne reason we avoid the word project here, is at this level project as a construct shouldn't even exist until we're about 3/4 of the way through it when things are well defined. very few investments should make it past phase 1 and become viable \"projects.\" \n\nIf we do use projects, we often end up in a 'turtles all the way down' situation where it's hard to tell what is and is not a project, where it began, how it was funded, how to fund this new emergency thing we have to do that's not really part of any project...\n\nSo..we don't fund or track things via projects.   \n\n\nBut back to the original question: Automated deployments aren't a specific step. rather it occurs during all steps. how it occurs and what is expected to happen while it is occurring will change depending on where you are in the release process. you want to have clear distinctions between what is a deployment and what is a release. The simplest one I've seen is: Release is a deployment that turns the feature flag on to expose code to the customer. \n\neverything else is a deployment and locked behind a feature flag.", "edited": 1644429624.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;how do you normally deal with that in your project? Do you have an automated deployment step?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s not always an automated deployment step. More often it&amp;#39;s semi-automated. and starting out, it will of course be manual. automation is the end-goal but depending on where you are, this could be a multi-year effort.&lt;/p&gt;\n\n&lt;p&gt;On the journey to an automated pipeline, DoD is often the first step. we can&amp;#39;t really automate a deployment from dev to test if we don&amp;#39;t have standards to build that automation from. Without a good DoD we can&amp;#39;t build consistency around the pushes, that&amp;#39;s step 1: Establish a baseline and build consistency. focus on one part of the deployment process and then scale from there.&lt;/p&gt;\n\n&lt;p&gt;Depending on other problems you&amp;#39;re having (IE: many orgs in this position also have security and quality issues) you can roll more initiatives into the DoD as you get closer to a release. IE: performance and security requirements become more stringent starting in test and mirror production in stage. you also want to include things like rollback plans and data recovery as part of DoD&lt;/p&gt;\n\n&lt;p&gt;before you have fully automated pipelines, it&amp;#39;s not uncommon to temporarily have a DoD when exiting each environment.&lt;/p&gt;\n\n&lt;p&gt;IE: Dev, Test, Stage, Prod. are the usual suspects. Dev is typically focused on testing individual changes against last known good build. Test is about testing the team&amp;#39;s changes against the last known good build. and stage is about testing teams changes against other teams changes in a prod-like conditions.&lt;/p&gt;\n\n&lt;p&gt;As you move through this, your DoD should increase in complexity and homogenize what the teams are working on into releasable code.&lt;/p&gt;\n\n&lt;p&gt;before you start trying to automate, make sure you understand your environments, how you&amp;#39;re using them, how you maintain parity, and the developers have a crystal clear way to understand what is and is not part of a specific build/version.&lt;/p&gt;\n\n&lt;p&gt;--------&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d probably start with feature flags and versioning before building in the automation. you&amp;#39;ll want a good system for knowing what&amp;#39;s in production, what&amp;#39;s turned on, what&amp;#39;s turned off, and a quick/easy way to interface with those flags and selectively turn off/on specific functionality.&lt;/p&gt;\n\n&lt;p&gt;once you know how to do it, automation can be used to make it easier as you&amp;#39;ll have hands on experience knowing specifically what you want it to do. as you start automating your infrastructure, you&amp;#39;ll also want to apply the same theory of versioning; when you start to automate you begin approaching infrastructure as code and you&amp;#39;ll want to start on the right foot and make sure it&amp;#39;s versioned and maintained. you may not have to start out with a dev environment for infrastructure, but you should at least version and have a rollback plan.&lt;/p&gt;\n\n&lt;p&gt;My favorite analogy for this, is a lot of the devops, agile, etc. strategy and tactics we have are built for an F16 Falcon. Right now, you don&amp;#39;t have a falcon. you have an F6F Hellcat. the tactics and strategy for an F16 don&amp;#39;t really work in an F6F. Afterall, the top speed of the hellcat is pretty close to the stall speed of the f16, you really can&amp;#39;t approach them the same way.&lt;/p&gt;\n\n&lt;p&gt;You can&amp;#39;t just upgrade your entire fleet of planes to F16s over night either. it&amp;#39;s going to be a complex process to both get the new gear AND train not only your pilots but the mechanics, ground crew, supply chain, and support staff to not only use the new equipment but also how to maintain it.&lt;/p&gt;\n\n&lt;p&gt;Hire an expert. If you can&amp;#39;t afford one, find someone with passion in your org and enable them to become an expert. DevOps and Release Management will be the umbrella terms you are most interested in. Highly recommend anything by the poppendiecks you can get your hands on and watching Mary&amp;#39;s keynotes will give a lot of insight. &lt;/p&gt;\n\n&lt;p&gt;---------&lt;/p&gt;\n\n&lt;p&gt;Edit:  &lt;/p&gt;\n\n&lt;p&gt;Wanted to address &amp;#39;projects&amp;#39; as well.   &lt;/p&gt;\n\n&lt;p&gt;In general, what we are talking about here exists outside of a project and it&amp;#39;s better to think of it as part of the infrastructure needed to execute and deliver projects. &lt;/p&gt;\n\n&lt;p&gt;Projects as a construct dont&amp;#39; really work in the agile world. and while there are hybrid models, more often than not they end up with all problems and none of the benefit. &lt;/p&gt;\n\n&lt;p&gt;At the portfolio level, we usually track progress of investments with a Kanban.&lt;br/&gt;\nOne reason we avoid the word project here, is at this level project as a construct shouldn&amp;#39;t even exist until we&amp;#39;re about 3/4 of the way through it when things are well defined. very few investments should make it past phase 1 and become viable &amp;quot;projects.&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;If we do use projects, we often end up in a &amp;#39;turtles all the way down&amp;#39; situation where it&amp;#39;s hard to tell what is and is not a project, where it began, how it was funded, how to fund this new emergency thing we have to do that&amp;#39;s not really part of any project...&lt;/p&gt;\n\n&lt;p&gt;So..we don&amp;#39;t fund or track things via projects.   &lt;/p&gt;\n\n&lt;p&gt;But back to the original question: Automated deployments aren&amp;#39;t a specific step. rather it occurs during all steps. how it occurs and what is expected to happen while it is occurring will change depending on where you are in the release process. you want to have clear distinctions between what is a deployment and what is a release. The simplest one I&amp;#39;ve seen is: Release is a deployment that turns the feature flag on to expose code to the customer. &lt;/p&gt;\n\n&lt;p&gt;everything else is a deployment and locked behind a feature flag.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_smkdbw", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/hw89c95/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/", "name": "t1_hw89c95", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1644417594.0, "created_utc": 1644417594.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Definition of done in project with big ticket variation", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "mystery_orange", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hvy5nbn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 23, "can_mod_post": false, "send_replies": true, "parent_id": "t3_smkdbw", "score": 3, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;I work with a team where our definition of done is \u201cthe work item to be in the product \u201c. However large chunks and of the work we are doing are big Work items that take 3 months to finish. Its not a problem with the devs its just they are just that big and we cannot split it in two.\n\n&amp;#x200B;\n\nThere's a lot to unpack here and I have a lot of questions but most of those are intended to point out the intellectual dishonesty around how the teams and management/leadership are treating the DoD.\n\n&amp;#x200B;\n\n&gt;The problem is that we don\u2019t have good tracking like that. Tickets remain in a sprint for months ans the velocity drops.\n\nOkay, what are you doing to improve your tracking?\n\nare you using a kanban? does your kanban correctly map the relationship between your work, physical location, and bottle necks?\n\n&amp;#x200B;\n\n&gt;I thought about changing the definition of done to \u201cawaiting deployment\u201d and add an extra \u201cdeploy\u201d ticket but that would mean adding an extra deploy ticket to everything else as well (i have lots of small tickets as well)\n\nThis is what you should do. the fact that it's tedious and hard means you have infrastructure problems.\n\nour process, everything we are visualizing is supposed to give us a birds eye view of what we are doing. It's supposed to take some work/effort but it shouldn't be hard. if it's hard, you have a different problem you need to fix. go fix it.\n\n&amp;#x200B;\n\n&gt;I read about dark launching but it sounded to me that i am using code architecture to solve a process problem.\n\n&amp;#x200B;\n\nFriend... The irony of this is right now you're trying to use process to solve an architectural problem.\n\nThe problem I see, is your DoD is impossible to implement at the story/increment level. It must be implemented at the feature level. features represent full functionality, and because you don't have feature flags, and i'm assuming no real automation either, you have no way to reconcile this conflict. Until this gets fixed, you can't possibly fix the story breakdown problem that others are talking about.\n\nThis is an architectural problem. There is no part of your process that prevents you from doing this. it's your architecture that is lacking, go fix it.\n\nAssembly line theory doesn't work if you're not using assembly lines and it's just one guy doing all the work in his garage. Modernize your infrastructure please and try again.\n\n&amp;#x200B;\n\n\\-------\n\nJira has a lot of automation. you can't really use any of it until you have proper feature flags and release infrastructure. we can't help you with any of that until you fix the core problem: you don't have modern release infrastructure.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I work with a team where our definition of done is \u201cthe work item to be in the product \u201c. However large chunks and of the work we are doing are big Work items that take 3 months to finish. Its not a problem with the devs its just they are just that big and we cannot split it in two.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s a lot to unpack here and I have a lot of questions but most of those are intended to point out the intellectual dishonesty around how the teams and management/leadership are treating the DoD.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The problem is that we don\u2019t have good tracking like that. Tickets remain in a sprint for months ans the velocity drops.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Okay, what are you doing to improve your tracking?&lt;/p&gt;\n\n&lt;p&gt;are you using a kanban? does your kanban correctly map the relationship between your work, physical location, and bottle necks?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I thought about changing the definition of done to \u201cawaiting deployment\u201d and add an extra \u201cdeploy\u201d ticket but that would mean adding an extra deploy ticket to everything else as well (i have lots of small tickets as well)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is what you should do. the fact that it&amp;#39;s tedious and hard means you have infrastructure problems.&lt;/p&gt;\n\n&lt;p&gt;our process, everything we are visualizing is supposed to give us a birds eye view of what we are doing. It&amp;#39;s supposed to take some work/effort but it shouldn&amp;#39;t be hard. if it&amp;#39;s hard, you have a different problem you need to fix. go fix it.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I read about dark launching but it sounded to me that i am using code architecture to solve a process problem.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Friend... The irony of this is right now you&amp;#39;re trying to use process to solve an architectural problem.&lt;/p&gt;\n\n&lt;p&gt;The problem I see, is your DoD is impossible to implement at the story/increment level. It must be implemented at the feature level. features represent full functionality, and because you don&amp;#39;t have feature flags, and i&amp;#39;m assuming no real automation either, you have no way to reconcile this conflict. Until this gets fixed, you can&amp;#39;t possibly fix the story breakdown problem that others are talking about.&lt;/p&gt;\n\n&lt;p&gt;This is an architectural problem. There is no part of your process that prevents you from doing this. it&amp;#39;s your architecture that is lacking, go fix it.&lt;/p&gt;\n\n&lt;p&gt;Assembly line theory doesn&amp;#39;t work if you&amp;#39;re not using assembly lines and it&amp;#39;s just one guy doing all the work in his garage. Modernize your infrastructure please and try again.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;-------&lt;/p&gt;\n\n&lt;p&gt;Jira has a lot of automation. you can&amp;#39;t really use any of it until you have proper feature flags and release infrastructure. we can&amp;#39;t help you with any of that until you fix the core problem: you don&amp;#39;t have modern release infrastructure.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_smkdbw", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/hvy5nbn/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/", "name": "t1_hvy5nbn", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1644244503.0, "created_utc": 1644244503.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/smkdbw/definition_of_done_in_project_with_big_ticket/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "SAFe Agile Roles &amp; Responsibilities", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "divine_s0da", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "humbbof", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 14, "can_mod_post": false, "send_replies": true, "parent_id": "t3_se4i2z", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;My question is, who's role/responsibility is this? Should it be our development team always reaching out to the requester of the feature practically begging for clarifications, meetings, testing coordination and release approval? Or is there a clearly defined role that should take ownership of each feature as if it was their baby? Steering the ship and being responsible for seeing it through to the end?\n\n&amp;#x200B;\n\nResponsibility is a tricky question. in a team-based culture there may be a primary owner, but it's really the entire teams responsibility.\n\nIE: the PM is should be driving this. but if the PM isn't doing it, who's responsible for holding them accountable and ensuring they are working in a way to hold themselves accountable?\n\nSo when you ask 'who's responsible' I wonder both what your PMs are doing, and also who's coaching them to do that. I'm also wondering where the rest of the team is.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;My question is, who&amp;#39;s role/responsibility is this? Should it be our development team always reaching out to the requester of the feature practically begging for clarifications, meetings, testing coordination and release approval? Or is there a clearly defined role that should take ownership of each feature as if it was their baby? Steering the ship and being responsible for seeing it through to the end?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Responsibility is a tricky question. in a team-based culture there may be a primary owner, but it&amp;#39;s really the entire teams responsibility.&lt;/p&gt;\n\n&lt;p&gt;IE: the PM is should be driving this. but if the PM isn&amp;#39;t doing it, who&amp;#39;s responsible for holding them accountable and ensuring they are working in a way to hold themselves accountable?&lt;/p&gt;\n\n&lt;p&gt;So when you ask &amp;#39;who&amp;#39;s responsible&amp;#39; I wonder both what your PMs are doing, and also who&amp;#39;s coaching them to do that. I&amp;#39;m also wondering where the rest of the team is.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_se4i2z", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/humbbof/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/", "name": "t1_humbbof", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1643396682.0, "created_utc": 1643396682.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "SAFe Agile Roles &amp; Responsibilities", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "divine_s0da", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hum9ssd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 14, "can_mod_post": false, "send_replies": true, "parent_id": "t1_huhnp22", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;Be under no illusions - SAFe is a governance model and not an agile model.\n\nI reject the idea that something agile can't be both.   \n\n\nGovernance is a function of scalability; and you don't need governance until you need to scale. I personally have never seen scalability without some sort of governance in place.   \n\n\n&gt; In SAFe delivery to committed is generally the sought after metric\n\nNo it isn't. \n\n[https://www.scaledagileframework.com/metrics/](https://www.scaledagileframework.com/metrics/)\n\n&gt;POs or PMs are not incentivised to move stuff out of a committed PI regardless of customer value.\n\nWhere are your coaches/SMs? Most of the time when I see this, it's due to budgeting by project. value doesn't matter, because the project is funded. It's on the guy/gal in charge's spreadsheet. so if it doesn't move we'll have to justify it and we can't want to be bothered.\n\n&amp;#x200B;\n\n&gt;Agile by definition is bottom up. SAFe is entirely top down.\n\n[https://www.scaledagileframework.com/lean-budgets/](https://www.scaledagileframework.com/lean-budgets/)  \n\n\nThis isn't true either. SAFe encourages federated governance. \n\n\\---------------------  \n\n\nI've seen a lot of bad SAFe implementation. 90% of it is bad leaders and implementation of half measures that haven't made sense in years. Very rarely do non-agile orgs think to set up a system to update processes/systems as the org matures. The general mentality is, if we need to do that we'll fund a project so we can define the needs.\n\nI understand as a consultant it's way easier to blame a complex system and it's an easy way to build comradery in a shared frustration; especially if it was never explained well. but let's not forget the people element and the number of variables we're dealing with in an agile system of work at scale. Aligning 30-100 developers is very different than aligning 300+, especially while trying to manage a spaghetti soup of bad project management. \n\nTo me, SAFe's biggest weakness isn't governance or scalability or even teach-ability but rather because it's incredibly fragile. if you aren't doing EVERYTHING, and if you're not doing it EXACTLY the right way it tends to cause a bunch of problems. it requires 100% commitment when you aren't even convinced it's goign to work yet. There are infinitely more ways to do SAFe wrong than there are to do it right and most of that stems from not fully committing to what SAFe is asking you to do. This can become nearly impossible when SAFe is asking you to adopt a lower maturity model to solve a problem you've already solved. So I typically only recommend SAFe to an org that has no idea at all how to develop software; i'm talking 'oh....it's supposed to work in *production?*' type of questions on the daily.   \n\n\nI'm all for bashing SAFe, but I think it's more productive to do it for the right reasons. Governance isn't the problem and it's one of the most appealing aspects of SAFe for orgs struggling to scale their value delivery.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Be under no illusions - SAFe is a governance model and not an agile model.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I reject the idea that something agile can&amp;#39;t be both.   &lt;/p&gt;\n\n&lt;p&gt;Governance is a function of scalability; and you don&amp;#39;t need governance until you need to scale. I personally have never seen scalability without some sort of governance in place.   &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;In SAFe delivery to committed is generally the sought after metric&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No it isn&amp;#39;t. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.scaledagileframework.com/metrics/\"&gt;https://www.scaledagileframework.com/metrics/&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;POs or PMs are not incentivised to move stuff out of a committed PI regardless of customer value.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Where are your coaches/SMs? Most of the time when I see this, it&amp;#39;s due to budgeting by project. value doesn&amp;#39;t matter, because the project is funded. It&amp;#39;s on the guy/gal in charge&amp;#39;s spreadsheet. so if it doesn&amp;#39;t move we&amp;#39;ll have to justify it and we can&amp;#39;t want to be bothered.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Agile by definition is bottom up. SAFe is entirely top down.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.scaledagileframework.com/lean-budgets/\"&gt;https://www.scaledagileframework.com/lean-budgets/&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;This isn&amp;#39;t true either. SAFe encourages federated governance. &lt;/p&gt;\n\n&lt;p&gt;---------------------  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve seen a lot of bad SAFe implementation. 90% of it is bad leaders and implementation of half measures that haven&amp;#39;t made sense in years. Very rarely do non-agile orgs think to set up a system to update processes/systems as the org matures. The general mentality is, if we need to do that we&amp;#39;ll fund a project so we can define the needs.&lt;/p&gt;\n\n&lt;p&gt;I understand as a consultant it&amp;#39;s way easier to blame a complex system and it&amp;#39;s an easy way to build comradery in a shared frustration; especially if it was never explained well. but let&amp;#39;s not forget the people element and the number of variables we&amp;#39;re dealing with in an agile system of work at scale. Aligning 30-100 developers is very different than aligning 300+, especially while trying to manage a spaghetti soup of bad project management. &lt;/p&gt;\n\n&lt;p&gt;To me, SAFe&amp;#39;s biggest weakness isn&amp;#39;t governance or scalability or even teach-ability but rather because it&amp;#39;s incredibly fragile. if you aren&amp;#39;t doing EVERYTHING, and if you&amp;#39;re not doing it EXACTLY the right way it tends to cause a bunch of problems. it requires 100% commitment when you aren&amp;#39;t even convinced it&amp;#39;s goign to work yet. There are infinitely more ways to do SAFe wrong than there are to do it right and most of that stems from not fully committing to what SAFe is asking you to do. This can become nearly impossible when SAFe is asking you to adopt a lower maturity model to solve a problem you&amp;#39;ve already solved. So I typically only recommend SAFe to an org that has no idea at all how to develop software; i&amp;#39;m talking &amp;#39;oh....it&amp;#39;s supposed to work in &lt;em&gt;production?&lt;/em&gt;&amp;#39; type of questions on the daily.   &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m all for bashing SAFe, but I think it&amp;#39;s more productive to do it for the right reasons. Governance isn&amp;#39;t the problem and it&amp;#39;s one of the most appealing aspects of SAFe for orgs struggling to scale their value delivery.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_se4i2z", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/hum9ssd/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/", "name": "t1_hum9ssd", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1643396113.0, "created_utc": 1643396113.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/se4i2z/safe_agile_roles_responsibilities/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Need help - Prince2 Agile certification", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "huful9f", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "Onisake", "num_comments": 5, "can_mod_post": false, "send_replies": true, "parent_id": "t3_sdtvqr", "score": 3, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "At the fundamental level of how budgets work and things are funded; the concepts of Prince2 and Agile are not aligned. sounds like a scam just from the name of the cert.   \nSM training looks to be about half that price from a quick google search. if you want something that is going to be more 'portfolio' level; you're likely better off with SAFe than this.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;At the fundamental level of how budgets work and things are funded; the concepts of Prince2 and Agile are not aligned. sounds like a scam just from the name of the cert.&lt;br/&gt;\nSM training looks to be about half that price from a quick google search. if you want something that is going to be more &amp;#39;portfolio&amp;#39; level; you&amp;#39;re likely better off with SAFe than this.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_sdtvqr", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/sdtvqr/need_help_prince2_agile_certification/huful9f/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/sdtvqr/need_help_prince2_agile_certification/", "name": "t1_huful9f", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1643292618.0, "created_utc": 1643292618.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/sdtvqr/need_help_prince2_agile_certification/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Agile - How to track project progress without morphing into waterfall or fixed-scope/fixed delivery?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "ZealousidealSet5442", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hrk9mpx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 19, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rxc1ls", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "As others have been implying, we don't use projects. Specifically, we don't fund projects or want to consider them as part of our RoI. We only really use projects as organizational structures. and at that point, you may as well use stories, features, epics, etc. that agile is trying to get you to use at the portfolio level anyway.\n\nTime bound roadmaps are the easiest: Burndown. or Burnup if you prefer. Include a 'total scope' line so you can monitor scope creep as you progress through the work. \n\nBurn charts aren't primarily used at the sprint level, but you can really use them for any time-bound object. At this level, however, you'll likely want to add additional complexity. IE: Stacked bars may help you see story points per team. and adding colored lines matching those bars, you can include velocity. You, of course, want to be careful when sharing this kind of information. Make it clear this should be approached like calculus. Story points are 'funny numbers' and aren't really real. we should only compare rates of changes, and how those rates are affected. It's a powerful visual, but easy to misunderstand. \n\n\\-----------\n\n&gt;2 How do you set deadlines for input for design or other collaborators in Agile - (should you)?\n\nIn agile we don't like deadlines. We prefer greatly to work from priorities. Target dates are required for planning purposes; but in the agile world no-one really expects that to be a hard deadline.   \n\n\nPriority based planning allows the dependent team to work on other things and get them done. as soon as the input is ready, and the team is ready for the next thing, you can add it to the team's flow. Easy. Unless you're impatient. In which case remind yourself (or stakeholders) a that everyone is already working as hard as they can already. You having nothing to do but wait isn't their problem. read a book. reassure your customers. get everyone coffee. Do a genba walk. Trust the team to do their jobs, I have yet to meet a team that doesn't want to. \n\n&amp;#x200B;\n\n&gt;3 How do you check your progress against goals without fixating too much in specific features?\n\nI don't understand this question. do you mean too many specific features? WIP limits.   \n\n\nGoals, and the portfolio level, should really be managed in Kanban. which also means enforcing WIP limits. How many teams do you have? how does that compare to the number of features currently in progress? If it's more than double, you might have a problem....\n\nThere's nothing wrong with fixating on features. you just have to make sure you're fixating on the right things. Do you have a good time to market at this level (do you care)? WIP limits? how about release management and architecture friction? IE: what are the things that make it easier for you to get features completed and do your metrics reflect your ability to have what the teams need prepared so they can deliver?   \n\n\nThe wrong metrics mean you will act at the wrong times and interfere with the deliver process. This is a system problem and one that you own as management. The right metrics will let you know when there's a problem and when you actually need to do something to prevent a disaster. How are you at grading your metrics to see how useful they are?", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As others have been implying, we don&amp;#39;t use projects. Specifically, we don&amp;#39;t fund projects or want to consider them as part of our RoI. We only really use projects as organizational structures. and at that point, you may as well use stories, features, epics, etc. that agile is trying to get you to use at the portfolio level anyway.&lt;/p&gt;\n\n&lt;p&gt;Time bound roadmaps are the easiest: Burndown. or Burnup if you prefer. Include a &amp;#39;total scope&amp;#39; line so you can monitor scope creep as you progress through the work. &lt;/p&gt;\n\n&lt;p&gt;Burn charts aren&amp;#39;t primarily used at the sprint level, but you can really use them for any time-bound object. At this level, however, you&amp;#39;ll likely want to add additional complexity. IE: Stacked bars may help you see story points per team. and adding colored lines matching those bars, you can include velocity. You, of course, want to be careful when sharing this kind of information. Make it clear this should be approached like calculus. Story points are &amp;#39;funny numbers&amp;#39; and aren&amp;#39;t really real. we should only compare rates of changes, and how those rates are affected. It&amp;#39;s a powerful visual, but easy to misunderstand. &lt;/p&gt;\n\n&lt;p&gt;-----------&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;2 How do you set deadlines for input for design or other collaborators in Agile - (should you)?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In agile we don&amp;#39;t like deadlines. We prefer greatly to work from priorities. Target dates are required for planning purposes; but in the agile world no-one really expects that to be a hard deadline.   &lt;/p&gt;\n\n&lt;p&gt;Priority based planning allows the dependent team to work on other things and get them done. as soon as the input is ready, and the team is ready for the next thing, you can add it to the team&amp;#39;s flow. Easy. Unless you&amp;#39;re impatient. In which case remind yourself (or stakeholders) a that everyone is already working as hard as they can already. You having nothing to do but wait isn&amp;#39;t their problem. read a book. reassure your customers. get everyone coffee. Do a genba walk. Trust the team to do their jobs, I have yet to meet a team that doesn&amp;#39;t want to. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;3 How do you check your progress against goals without fixating too much in specific features?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&amp;#39;t understand this question. do you mean too many specific features? WIP limits.   &lt;/p&gt;\n\n&lt;p&gt;Goals, and the portfolio level, should really be managed in Kanban. which also means enforcing WIP limits. How many teams do you have? how does that compare to the number of features currently in progress? If it&amp;#39;s more than double, you might have a problem....&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s nothing wrong with fixating on features. you just have to make sure you&amp;#39;re fixating on the right things. Do you have a good time to market at this level (do you care)? WIP limits? how about release management and architecture friction? IE: what are the things that make it easier for you to get features completed and do your metrics reflect your ability to have what the teams need prepared so they can deliver?   &lt;/p&gt;\n\n&lt;p&gt;The wrong metrics mean you will act at the wrong times and interfere with the deliver process. This is a system problem and one that you own as management. The right metrics will let you know when there&amp;#39;s a problem and when you actually need to do something to prevent a disaster. How are you at grading your metrics to see how useful they are?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rxc1ls", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/rxc1ls/agile_how_to_track_project_progress_without/hrk9mpx/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/rxc1ls/agile_how_to_track_project_progress_without/", "name": "t1_hrk9mpx", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1641512373.0, "created_utc": 1641512373.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/rxc1ls/agile_how_to_track_project_progress_without/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "If SAFe was renamed to remove \"Agile\"...", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Mountain_Apartment_6", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hpgf8tm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 41, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rl0igq", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;If SAFe was renamed to remove Agile, would it get as much hate?\n\nI don't think so. In fact, this would likely cause more problems. Safe could easily use different terminology and call itself something other than Agile; but then Agile would have more competition. SAFe is appealing to large orgs for specific reasons and because larger orgs tend to have a revolving door they tend to have a pretty large influence on a local area's agile maturity. \n\nThis would make Agile less appealing, as the other scaling frameworks we have today are painfully inadequate at helping a complex org manage it's portfolio. \n\nSAFe also makes decisions based on agile principles. It takes a few shortcuts, such as when establishing initial team velocity, I wouldn't take. It makes up for this in Spades however, as it makes it way easier to align across a portfolio with a common language and provides guidance on roles/responsibilities outside of the development team. No other framework provides this guidance. Everyone I know had to figure this out on their own which causes some issues as SAFe wants you to understand the system a specifically structured way which may not align with your current systems constraint.   \n\n\nTo be blunt, many people I know that really don't like SAFe have their own brand of portfolio management. It's a lot harder to sell a local standard when a global standard exists and you also have to deal with 'what about SAFe's version' questions constantly. \n\n&amp;#x200B;\n\n&gt;If it billed itself as a hybrid approach, would Agilists just leave it be?\n\nIt's not really a hybrid approach. SAFe is Agile. [https://www.scaledagileframework.com/lean-budgets/](https://www.scaledagileframework.com/lean-budgets/)\n\nThat piece alone makes it more agile than a lot of the other frameworks; because it actually has a definitive answer on how to do things outside of a project structure. It also does it in a language that makes sense to the people that would be responsible for it.   \n\n\nWhat does agile mean to you? For me, the two main things I look for is if it's team based as opposed to project based. and if I budget outside of projects, do I get better results?   \n\n\nFor SAFe; both of these are true with a caveat: You have to do all of SAFe. because SAFe is built as a complete system, it means you have to have real bonifide experts to help you close the gap when you are doing implementation.   \n\n\nPI Planning, vision casting, etc. are great. Especially if you have absolutely no basis on how to do those things and are starting from square 0, or more likely well before square 0 when it comes to being agile. So SAFe's approach to PI Planning, just like it's approach to most sub-systems within a system-of-work at scale, is to provide the bare-minimum low maturity model to get you started. IE: Training wheels. So not only is it a complete system, it's also using the lowest maturity models available for each sub-system. \n\nIf you implement PI Planning, but you're ready for a more mature model, and you don't have an expert on hand to adjust the inputs, you'll have a broken intake system that doesn't fit with what you're really trying to do. This, of course, will make SAFe look like a steaming pile of garbage as implementers aren't given guidance on how to maintain a higher maturity sub-system while also brining less mature sub-systems up to par. Instead, it looks like you have to sacrifice maturity in one area to raise maturity in another. To me, this is why most people view SAFe as anti-agile. You shouldn't have to make this tradeoff and SAFe does not yet provide an alternative within it's framework to cover this gap. The biggest gaps occur in how SAFe tells you to structure your organization, so if you can't adhere to SAFe's org structure guidance and you don't know how to close the gap there's not really a difference between what you were doing and what your'e doing under SAFe. Not to mention that many times the people put into critical positions like RTE or STE are people that don't have agile experience but do traditionally make those decisions. IE: they aren't changing anything in terms of process which undermines the whole transformation.  \n\n\nIt also doesn't do a good job of tying certain concepts together. IE: nothing in training ties PI Objectives back to lean budgeting to give you a complete picture of value delivery and RoI calculations. It's there for you to see, but you have to be knowledgeable enough on your own to connect the dots. -&gt; in many areas SAFe also fails to do it's job as an introductory framework and explicitly tie things together. \n\n\\-----------  \n\n\nOverall, I view SAFe as the Harley-Davidson of Agile. It's a great entry level framework. It's probably going to break a lot and it's easy to repair. there's a lot of documentation and a whole community of people you can work with to make a plan for repair and how to get back to working order.   \n\n\nFor entry-level Agile, that makes SAFe great because it gets you used to the idea of constantly having to learn and improve and away from the idea you can setup your system of work once and never have to think about it or touch it again. and SAFe provides you plenty of opportunities to want to mature because it starts with lower maturity models and also provides you a solid baseline you can always fallback to should you need a reset.   \n\n\n\\----------------\n\nSAFe is also constantly making updates. It's on version 5 or 6 now I think.   \n\n\nI know one of the earlier versions, I want to say it was 2, 3, or maybe 4; had a bit of drama around it. Essentially an intern wrote the revision and no-one checked it. What came out was something less than Agile. As you might imagine, a shit-show ensued and they've been trying to recover their reputation.   \n\n\nSo, depending on when your last exposure to SAFe was and SAFe training; things could be drastically different. \n\n\\------------\n\nI would encourage/discourage SAFe based on your local market factors. If you have a lot of large orgs in your area doing software; you likely want to be familiar with SAFe.   \n\n\nIn my experience, it is NEVER the choice in framework that prevents an org from going agile. It's always the coaches ability and the org's willingness to change. 90% of the posts I see complaining about SAFe boil down to having shit RTEs.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;If SAFe was renamed to remove Agile, would it get as much hate?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&amp;#39;t think so. In fact, this would likely cause more problems. Safe could easily use different terminology and call itself something other than Agile; but then Agile would have more competition. SAFe is appealing to large orgs for specific reasons and because larger orgs tend to have a revolving door they tend to have a pretty large influence on a local area&amp;#39;s agile maturity. &lt;/p&gt;\n\n&lt;p&gt;This would make Agile less appealing, as the other scaling frameworks we have today are painfully inadequate at helping a complex org manage it&amp;#39;s portfolio. &lt;/p&gt;\n\n&lt;p&gt;SAFe also makes decisions based on agile principles. It takes a few shortcuts, such as when establishing initial team velocity, I wouldn&amp;#39;t take. It makes up for this in Spades however, as it makes it way easier to align across a portfolio with a common language and provides guidance on roles/responsibilities outside of the development team. No other framework provides this guidance. Everyone I know had to figure this out on their own which causes some issues as SAFe wants you to understand the system a specifically structured way which may not align with your current systems constraint.   &lt;/p&gt;\n\n&lt;p&gt;To be blunt, many people I know that really don&amp;#39;t like SAFe have their own brand of portfolio management. It&amp;#39;s a lot harder to sell a local standard when a global standard exists and you also have to deal with &amp;#39;what about SAFe&amp;#39;s version&amp;#39; questions constantly. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;If it billed itself as a hybrid approach, would Agilists just leave it be?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s not really a hybrid approach. SAFe is Agile. &lt;a href=\"https://www.scaledagileframework.com/lean-budgets/\"&gt;https://www.scaledagileframework.com/lean-budgets/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;That piece alone makes it more agile than a lot of the other frameworks; because it actually has a definitive answer on how to do things outside of a project structure. It also does it in a language that makes sense to the people that would be responsible for it.   &lt;/p&gt;\n\n&lt;p&gt;What does agile mean to you? For me, the two main things I look for is if it&amp;#39;s team based as opposed to project based. and if I budget outside of projects, do I get better results?   &lt;/p&gt;\n\n&lt;p&gt;For SAFe; both of these are true with a caveat: You have to do all of SAFe. because SAFe is built as a complete system, it means you have to have real bonifide experts to help you close the gap when you are doing implementation.   &lt;/p&gt;\n\n&lt;p&gt;PI Planning, vision casting, etc. are great. Especially if you have absolutely no basis on how to do those things and are starting from square 0, or more likely well before square 0 when it comes to being agile. So SAFe&amp;#39;s approach to PI Planning, just like it&amp;#39;s approach to most sub-systems within a system-of-work at scale, is to provide the bare-minimum low maturity model to get you started. IE: Training wheels. So not only is it a complete system, it&amp;#39;s also using the lowest maturity models available for each sub-system. &lt;/p&gt;\n\n&lt;p&gt;If you implement PI Planning, but you&amp;#39;re ready for a more mature model, and you don&amp;#39;t have an expert on hand to adjust the inputs, you&amp;#39;ll have a broken intake system that doesn&amp;#39;t fit with what you&amp;#39;re really trying to do. This, of course, will make SAFe look like a steaming pile of garbage as implementers aren&amp;#39;t given guidance on how to maintain a higher maturity sub-system while also brining less mature sub-systems up to par. Instead, it looks like you have to sacrifice maturity in one area to raise maturity in another. To me, this is why most people view SAFe as anti-agile. You shouldn&amp;#39;t have to make this tradeoff and SAFe does not yet provide an alternative within it&amp;#39;s framework to cover this gap. The biggest gaps occur in how SAFe tells you to structure your organization, so if you can&amp;#39;t adhere to SAFe&amp;#39;s org structure guidance and you don&amp;#39;t know how to close the gap there&amp;#39;s not really a difference between what you were doing and what your&amp;#39;e doing under SAFe. Not to mention that many times the people put into critical positions like RTE or STE are people that don&amp;#39;t have agile experience but do traditionally make those decisions. IE: they aren&amp;#39;t changing anything in terms of process which undermines the whole transformation.  &lt;/p&gt;\n\n&lt;p&gt;It also doesn&amp;#39;t do a good job of tying certain concepts together. IE: nothing in training ties PI Objectives back to lean budgeting to give you a complete picture of value delivery and RoI calculations. It&amp;#39;s there for you to see, but you have to be knowledgeable enough on your own to connect the dots. -&amp;gt; in many areas SAFe also fails to do it&amp;#39;s job as an introductory framework and explicitly tie things together. &lt;/p&gt;\n\n&lt;p&gt;-----------  &lt;/p&gt;\n\n&lt;p&gt;Overall, I view SAFe as the Harley-Davidson of Agile. It&amp;#39;s a great entry level framework. It&amp;#39;s probably going to break a lot and it&amp;#39;s easy to repair. there&amp;#39;s a lot of documentation and a whole community of people you can work with to make a plan for repair and how to get back to working order.   &lt;/p&gt;\n\n&lt;p&gt;For entry-level Agile, that makes SAFe great because it gets you used to the idea of constantly having to learn and improve and away from the idea you can setup your system of work once and never have to think about it or touch it again. and SAFe provides you plenty of opportunities to want to mature because it starts with lower maturity models and also provides you a solid baseline you can always fallback to should you need a reset.   &lt;/p&gt;\n\n&lt;p&gt;----------------&lt;/p&gt;\n\n&lt;p&gt;SAFe is also constantly making updates. It&amp;#39;s on version 5 or 6 now I think.   &lt;/p&gt;\n\n&lt;p&gt;I know one of the earlier versions, I want to say it was 2, 3, or maybe 4; had a bit of drama around it. Essentially an intern wrote the revision and no-one checked it. What came out was something less than Agile. As you might imagine, a shit-show ensued and they&amp;#39;ve been trying to recover their reputation.   &lt;/p&gt;\n\n&lt;p&gt;So, depending on when your last exposure to SAFe was and SAFe training; things could be drastically different. &lt;/p&gt;\n\n&lt;p&gt;------------&lt;/p&gt;\n\n&lt;p&gt;I would encourage/discourage SAFe based on your local market factors. If you have a lot of large orgs in your area doing software; you likely want to be familiar with SAFe.   &lt;/p&gt;\n\n&lt;p&gt;In my experience, it is NEVER the choice in framework that prevents an org from going agile. It&amp;#39;s always the coaches ability and the org&amp;#39;s willingness to change. 90% of the posts I see complaining about SAFe boil down to having shit RTEs.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rl0igq", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/rl0igq/if_safe_was_renamed_to_remove_agile/hpgf8tm/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/rl0igq/if_safe_was_renamed_to_remove_agile/", "name": "t1_hpgf8tm", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1640112127.0, "created_utc": 1640112127.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/rl0igq/if_safe_was_renamed_to_remove_agile/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhpq", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "[deleted by user]", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "scrum", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hont4gy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "Onisake", "num_comments": 1, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rgv8mt", "score": 4, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I don't know what your background is, but when I have  fresh PO I try to have a conversation with them and figure out what artifact they think most closely translates to a project. IE: When they first start working in Agile what is the thing they are applying their current skills to?\n\nFor most people with project management experience, they latch onto Epic, Features, stories, etc. these are the wrong artifact, you should instead be focused on the release.\n\nEspecially when it comes to iterative planning and how to utilize iterations; many find it difficult or impossible to iterate at the feature level. The feature is the thing you're trying to deliver. by the time you can iterate it's already delivered. For many, at this point they are more likely to adopt an attitude of 'I don't want it to be good, I want it Tuesday' and quality is lost. With something delivered, it's also time to move on so their may never be an opportunity to go and fix things.\n\nso many POs find it hard to really see the value of what we're doing because of an incorrect emphasis. We get feedback at the release level, so the quicker you shift your focus here the faster you'll be able to realize value from an agile system. This will also enable you to see opportunities to stop working on one feature because enough value has been delivered. Flexibility and agility doesn't come from good feature breakdown, it comes from good release management. Your features, stories, and any other artifact you're dealing with should be looked at through the lens of: how does this help me manage the next release?\n\n  \nEdit:\n\nEG: When you're making a feature or an epic or a higher level artifact. one of the first questions you should find an answer to is: How many feedback loops do I want before I deliver this feature? if you only plan for one release, you're only getting one opportunity for feedback. if you plan for 3, you'll get 3. etc. I really want my POs to be able to tell me what feedback they are trying to get out of a release as it really helps the team understand what they are supposed to deliver.", "edited": 1639586068.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know what your background is, but when I have  fresh PO I try to have a conversation with them and figure out what artifact they think most closely translates to a project. IE: When they first start working in Agile what is the thing they are applying their current skills to?&lt;/p&gt;\n\n&lt;p&gt;For most people with project management experience, they latch onto Epic, Features, stories, etc. these are the wrong artifact, you should instead be focused on the release.&lt;/p&gt;\n\n&lt;p&gt;Especially when it comes to iterative planning and how to utilize iterations; many find it difficult or impossible to iterate at the feature level. The feature is the thing you&amp;#39;re trying to deliver. by the time you can iterate it&amp;#39;s already delivered. For many, at this point they are more likely to adopt an attitude of &amp;#39;I don&amp;#39;t want it to be good, I want it Tuesday&amp;#39; and quality is lost. With something delivered, it&amp;#39;s also time to move on so their may never be an opportunity to go and fix things.&lt;/p&gt;\n\n&lt;p&gt;so many POs find it hard to really see the value of what we&amp;#39;re doing because of an incorrect emphasis. We get feedback at the release level, so the quicker you shift your focus here the faster you&amp;#39;ll be able to realize value from an agile system. This will also enable you to see opportunities to stop working on one feature because enough value has been delivered. Flexibility and agility doesn&amp;#39;t come from good feature breakdown, it comes from good release management. Your features, stories, and any other artifact you&amp;#39;re dealing with should be looked at through the lens of: how does this help me manage the next release?&lt;/p&gt;\n\n&lt;p&gt;Edit:&lt;/p&gt;\n\n&lt;p&gt;EG: When you&amp;#39;re making a feature or an epic or a higher level artifact. one of the first questions you should find an answer to is: How many feedback loops do I want before I deliver this feature? if you only plan for one release, you&amp;#39;re only getting one opportunity for feedback. if you plan for 3, you&amp;#39;ll get 3. etc. I really want my POs to be able to tell me what feedback they are trying to get out of a release as it really helps the team understand what they are supposed to deliver.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rgv8mt", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/scrum/comments/rgv8mt/deleted_by_user/hont4gy/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/scrum/comments/rgv8mt/deleted_by_user/", "name": "t1_hont4gy", "author_flair_template_id": null, "subreddit_name_prefixed": "r/scrum", "author_flair_text": null, "treatment_tags": [], "created": 1639585834.0, "created_utc": 1639585834.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/scrum/comments/rgv8mt/deleted_by_user/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhpq", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "What makes a good scrum-timer?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "scrum", "link_author": "mosforge", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hodjwuc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 22, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rey940", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I don't understand what you mean by 'scrum'-timer. so in my head there's no difference. \n\nI can't think of a need for a specific 'scrum' timer. If I need a timer I use google or my phone. \n\nDuring outages, I've sometimes used an overlay available in the Microsoft store so I can show current time and elapsed time since outage started. This is because we like to make detailed logs with time-stamps during outages. I can't imagine doing that outside of that setting. \n\n\\------------\n\nLean-coffee style meetings are where I see timers used the most. In this case someone uses their phone and when the alarm goes off we switch topics. \n\nFor big room meetings, we usually have someone dedicated to shouting out timing prompts. (IE: 5 min remaining, 1 min remaining, etc.) When I do this, I'm on mute and I use my phone to tell me when to give the  next prompt.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t understand what you mean by &amp;#39;scrum&amp;#39;-timer. so in my head there&amp;#39;s no difference. &lt;/p&gt;\n\n&lt;p&gt;I can&amp;#39;t think of a need for a specific &amp;#39;scrum&amp;#39; timer. If I need a timer I use google or my phone. &lt;/p&gt;\n\n&lt;p&gt;During outages, I&amp;#39;ve sometimes used an overlay available in the Microsoft store so I can show current time and elapsed time since outage started. This is because we like to make detailed logs with time-stamps during outages. I can&amp;#39;t imagine doing that outside of that setting. &lt;/p&gt;\n\n&lt;p&gt;------------&lt;/p&gt;\n\n&lt;p&gt;Lean-coffee style meetings are where I see timers used the most. In this case someone uses their phone and when the alarm goes off we switch topics. &lt;/p&gt;\n\n&lt;p&gt;For big room meetings, we usually have someone dedicated to shouting out timing prompts. (IE: 5 min remaining, 1 min remaining, etc.) When I do this, I&amp;#39;m on mute and I use my phone to tell me when to give the  next prompt.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rey940", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/scrum/comments/rey940/what_makes_a_good_scrumtimer/hodjwuc/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/scrum/comments/rey940/what_makes_a_good_scrumtimer/", "name": "t1_hodjwuc", "author_flair_template_id": null, "subreddit_name_prefixed": "r/scrum", "author_flair_text": null, "treatment_tags": [], "created": 1639401972.0, "created_utc": 1639401972.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/scrum/comments/rey940/what_makes_a_good_scrumtimer/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Ways to show team velocity besides the velocity chart?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "PlanktonDisastrous32", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ho0l4nk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 10, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rdc4nk", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I use the EazyBI Plugin. Outside of that, I think the best thing is to export data directly into powerBI or Excel. \n\nAlternatively you may want to look into adding a few ghost fields so you can use JQL to get certain things. IE: updating a hidden field with a date so you can see when the sprint was assigned. that way you can see how many tickets were assigned after the sprint start date. Not every team has this problem, of course.\n\nWhat specifically are you trying to capture with velocity?", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I use the EazyBI Plugin. Outside of that, I think the best thing is to export data directly into powerBI or Excel. &lt;/p&gt;\n\n&lt;p&gt;Alternatively you may want to look into adding a few ghost fields so you can use JQL to get certain things. IE: updating a hidden field with a date so you can see when the sprint was assigned. that way you can see how many tickets were assigned after the sprint start date. Not every team has this problem, of course.&lt;/p&gt;\n\n&lt;p&gt;What specifically are you trying to capture with velocity?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rdc4nk", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/rdc4nk/ways_to_show_team_velocity_besides_the_velocity/ho0l4nk/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/rdc4nk/ways_to_show_team_velocity_besides_the_velocity/", "name": "t1_ho0l4nk", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1639160301.0, "created_utc": 1639160301.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/rdc4nk/ways_to_show_team_velocity_besides_the_velocity/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Discuss post: Why Agile Sucks for Building Quality Software", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "alediaferia", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hnv11ix", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "Onisake", "num_comments": 19, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rcci7y", "score": 3, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I read the article. Not sure I feel that was a good use of my time, but here are some thoughts on that first:\n\nThe author never stopped thinking like a project manager. I don't think they once mentioned a team. (Edit: I went back and counted. It's 3. One time is a quote. Another time is him admitting his org has no idea how to retain talent in the modern age. and the third is him implying the team isn't responsible for software quality ) If you think you're talking about agile and you never once mention the team: You aren't really talking about agile.\n\nThroughout his argument, he made it clear he views the asset as the software. anyone who builds software and understands the nature of software knows that's stupid. software is far too volatile, changes too frequently, and the requirements around them change so rapidly that investing in software and calling it an asset is a fools errand that will only lead you to suffering. The asset is the team. It's not the software that's goign to help you on a rainy day. it's not the software that's going to change itself when your customers needs expand. in the agile world we invest in teams. This person doesn't understand that.\n\nSo in a lot of ways, he's right. his approach makes the problem impossible to solve; but it's precisely because he's still thinking like project manager and not an agilest.\n\nWhen I look at his progress graph; it's also hard to tell if he's just stupid and waiting 3 releases to get feedback or if he honestly expects his software to never change/needs to be taught what microservices are.\n\nThe argument behind quality and its basis of efficiency/maintainability is 100% solved by moving to a team based structure and away from investing in projects/hiring people based on project work. if you invest in a team that can handle any problem you throw at it instead...that problem just goes away. The team is responsible for the software, if they are enabled.... no-one in their right mind builds a system they can't maintain. 90% of the retrospectives I lead end up with us talking about how to build quality in. This whole article just makes no sense. Part of me wants to say it's made in bad faith, but I honestly just think this person is incapable of thinking outside of projects.\n\n\\----------\n\n&amp;#x200B;\n\n&gt;Anyway, my personal consideration is that if you don't iterate and validate frequently you might be building the perfectly-architected software that doesn't solve anyone's problem.\n\n&amp;#x200B;\n\nYes, exactly. Working software means it solves someone's problem and adds value to what they are doing. thats' the whole point. the design documents dont' help them.\n\nIt's just really stupid to me that part of the argument this person is making is that we don't include the experience of using the software when considering if it works. I feel like he's the type of person you'd have to explicitly tell: Yes, all software needs to be working in Production. Working on your personal laptop doesn't count.\n\n&amp;#x200B;\n\n&gt;That being said, I somewhat agree that it's easy to neglect robustness and architecture in certain agile contexts (something I've experienced in my career).\n\nIt's hard to change your paradigm. the reason this is easy is because most orgs are in this weird state of partially transformed. where the teams, etc. are working with a team based focus but finance and performance are still based on project work.\n\nMy favorite way to explain this, is to use calculus to solve algebra problems. you can do this. it's not really a good idea or very efficient in most cases. And we've given  a lot people used to solving algebra problems a new tool: Calculus. However, until we start viewing the world in terms of calculus problems; calculus just seems like a weird way to relate algebra equations and it's unclear why it's a better way to approach/understand a complex system.", "edited": 1639064342.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I read the article. Not sure I feel that was a good use of my time, but here are some thoughts on that first:&lt;/p&gt;\n\n&lt;p&gt;The author never stopped thinking like a project manager. I don&amp;#39;t think they once mentioned a team. (Edit: I went back and counted. It&amp;#39;s 3. One time is a quote. Another time is him admitting his org has no idea how to retain talent in the modern age. and the third is him implying the team isn&amp;#39;t responsible for software quality ) If you think you&amp;#39;re talking about agile and you never once mention the team: You aren&amp;#39;t really talking about agile.&lt;/p&gt;\n\n&lt;p&gt;Throughout his argument, he made it clear he views the asset as the software. anyone who builds software and understands the nature of software knows that&amp;#39;s stupid. software is far too volatile, changes too frequently, and the requirements around them change so rapidly that investing in software and calling it an asset is a fools errand that will only lead you to suffering. The asset is the team. It&amp;#39;s not the software that&amp;#39;s goign to help you on a rainy day. it&amp;#39;s not the software that&amp;#39;s going to change itself when your customers needs expand. in the agile world we invest in teams. This person doesn&amp;#39;t understand that.&lt;/p&gt;\n\n&lt;p&gt;So in a lot of ways, he&amp;#39;s right. his approach makes the problem impossible to solve; but it&amp;#39;s precisely because he&amp;#39;s still thinking like project manager and not an agilest.&lt;/p&gt;\n\n&lt;p&gt;When I look at his progress graph; it&amp;#39;s also hard to tell if he&amp;#39;s just stupid and waiting 3 releases to get feedback or if he honestly expects his software to never change/needs to be taught what microservices are.&lt;/p&gt;\n\n&lt;p&gt;The argument behind quality and its basis of efficiency/maintainability is 100% solved by moving to a team based structure and away from investing in projects/hiring people based on project work. if you invest in a team that can handle any problem you throw at it instead...that problem just goes away. The team is responsible for the software, if they are enabled.... no-one in their right mind builds a system they can&amp;#39;t maintain. 90% of the retrospectives I lead end up with us talking about how to build quality in. This whole article just makes no sense. Part of me wants to say it&amp;#39;s made in bad faith, but I honestly just think this person is incapable of thinking outside of projects.&lt;/p&gt;\n\n&lt;p&gt;----------&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Anyway, my personal consideration is that if you don&amp;#39;t iterate and validate frequently you might be building the perfectly-architected software that doesn&amp;#39;t solve anyone&amp;#39;s problem.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Yes, exactly. Working software means it solves someone&amp;#39;s problem and adds value to what they are doing. thats&amp;#39; the whole point. the design documents dont&amp;#39; help them.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s just really stupid to me that part of the argument this person is making is that we don&amp;#39;t include the experience of using the software when considering if it works. I feel like he&amp;#39;s the type of person you&amp;#39;d have to explicitly tell: Yes, all software needs to be working in Production. Working on your personal laptop doesn&amp;#39;t count.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;That being said, I somewhat agree that it&amp;#39;s easy to neglect robustness and architecture in certain agile contexts (something I&amp;#39;ve experienced in my career).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It&amp;#39;s hard to change your paradigm. the reason this is easy is because most orgs are in this weird state of partially transformed. where the teams, etc. are working with a team based focus but finance and performance are still based on project work.&lt;/p&gt;\n\n&lt;p&gt;My favorite way to explain this, is to use calculus to solve algebra problems. you can do this. it&amp;#39;s not really a good idea or very efficient in most cases. And we&amp;#39;ve given  a lot people used to solving algebra problems a new tool: Calculus. However, until we start viewing the world in terms of calculus problems; calculus just seems like a weird way to relate algebra equations and it&amp;#39;s unclear why it&amp;#39;s a better way to approach/understand a complex system.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rcci7y", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/rcci7y/discuss_post_why_agile_sucks_for_building_quality/hnv11ix/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/rcci7y/discuss_post_why_agile_sucks_for_building_quality/", "name": "t1_hnv11ix", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1639063983.0, "created_utc": 1639063983.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/rcci7y/discuss_post_why_agile_sucks_for_building_quality/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "What can I reasonably expect my Scrum master to do?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hnm3ik0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 32, "can_mod_post": false, "send_replies": true, "parent_id": "t3_rawhza", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Your scrum master is essentially a process engineer.   \n\n\nIf you're familiar with what a manufacturing engineer does, a scrum master is very similar. while a MFG is responsible for the enablement of a mfg line, they aren't really responsible for pushing the line to go faster. When there's a problem with a unit, we figure out if we should keep working on it or push it aside so it can get special care. IE: Remove impediments and keep working flowing. Part of the strategy here is getting any unit done is better than letting one unit clog up the whole system. yes, your RoI for that specific unit will turn to shit, but that's ok I only care about the RoI of the entire line. \n\nThis is in direct contract with a more project management mindset where you are very much concerned with every specific unit's RoI. \n\n\\-------------\n\nA lot of people I know like Analogies. we often compare Scrum Masters to Coaches. \n\nA Professional sports team might have something like 1 coach (or assist coach) for every 4-5 players. \n\nNot every team needs this, so a 'professional' team that's a little less serious about this investment might be more like 8-10. and a Highschool team that isn't trying to be professional might have a single coach. \n\nAs you might imagine, each of these teams might have a different approach on what they may ask these coaches to do. At the top level where we have the most investment, coaches will often have specialties and you would pair players with specialists based on how you want to develop those players. \n\n\\----------\n\nScrum Masters are similar. For example, I specialize in Lean Software Development, Kanban, and Devops. Other SMs specialized in portfolio management, sprint mechanics, customer service, etc. \n\nAs generalists, we all understand software delivery and team based thinking (IE: how do you maximize the RoI of a team, as opposed to a specific project.) \n\n&amp;#x200B;\n\n&gt;Am I being unreasonable in my expectations? According to engineering, all of the above are the job of my product owners rather than the scrum master.\n\nI don't think so. It kind of sounds like you hired a dud. But that also doesn't surprise me because it also sounds like you didn't know what to look for and probably just hired someone with a lot of experience. \n\nUnfortunately the scrum master position is one of those where quality of experience matters a lot more than quantity. Variety of experience also matters. A SM with 4 years total, 2 years at 2 different companies will almost always perform better than a scrum master that has worked at only one place for 8 years. There are, of course, exceptions. but assuming all 3 organization in this scenario have similar agile maturity this holds water. \n\n\\------------\n\nAs the head of the product group, you should be bought into the agile mindset. if you aren't, I wouldn't hire Scrum Masters. There's also a conflict of interest that exists between the product duties and the SM duties that is more pronounces the lower your agile maturity is. \n\nIf these SMs are goign to report to you, it also sounds like you're responsible for giving them a vision for where the agile implementation is going. if you're not bought in and have some idea of where you want to go, there's not much else your SM can do other than facilitate meetings. \n\nSMs typically focus more on the team level and aren't necessarily concerned with higher level strategy of what the agile implementation is trying to do. They are more focused on making sure the nuts and bolts of the implementation are where they need to be.  IE: because you haven't been equipped to provide the SM direction, the only thing he can do is facilitate meetings. there's no improvements to drive, processes to change/learn, etc. \n\nYou may want to look for an agile coach or solution/release train engineer that's going to have more direct experience with coaching roles/responsibilities, will know how to spot/identify the weakest areas of your system of work and won't need as much direct input from you on what they should be doing. They will also be able to provide direction to your other SMs. IE: Hire a team lead. Look for Agile coach or some kind of 'train engineer' If an SM is a developer, the Agile Coach or Train engineer is like an architect.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your scrum master is essentially a process engineer.   &lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re familiar with what a manufacturing engineer does, a scrum master is very similar. while a MFG is responsible for the enablement of a mfg line, they aren&amp;#39;t really responsible for pushing the line to go faster. When there&amp;#39;s a problem with a unit, we figure out if we should keep working on it or push it aside so it can get special care. IE: Remove impediments and keep working flowing. Part of the strategy here is getting any unit done is better than letting one unit clog up the whole system. yes, your RoI for that specific unit will turn to shit, but that&amp;#39;s ok I only care about the RoI of the entire line. &lt;/p&gt;\n\n&lt;p&gt;This is in direct contract with a more project management mindset where you are very much concerned with every specific unit&amp;#39;s RoI. &lt;/p&gt;\n\n&lt;p&gt;-------------&lt;/p&gt;\n\n&lt;p&gt;A lot of people I know like Analogies. we often compare Scrum Masters to Coaches. &lt;/p&gt;\n\n&lt;p&gt;A Professional sports team might have something like 1 coach (or assist coach) for every 4-5 players. &lt;/p&gt;\n\n&lt;p&gt;Not every team needs this, so a &amp;#39;professional&amp;#39; team that&amp;#39;s a little less serious about this investment might be more like 8-10. and a Highschool team that isn&amp;#39;t trying to be professional might have a single coach. &lt;/p&gt;\n\n&lt;p&gt;As you might imagine, each of these teams might have a different approach on what they may ask these coaches to do. At the top level where we have the most investment, coaches will often have specialties and you would pair players with specialists based on how you want to develop those players. &lt;/p&gt;\n\n&lt;p&gt;----------&lt;/p&gt;\n\n&lt;p&gt;Scrum Masters are similar. For example, I specialize in Lean Software Development, Kanban, and Devops. Other SMs specialized in portfolio management, sprint mechanics, customer service, etc. &lt;/p&gt;\n\n&lt;p&gt;As generalists, we all understand software delivery and team based thinking (IE: how do you maximize the RoI of a team, as opposed to a specific project.) &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Am I being unreasonable in my expectations? According to engineering, all of the above are the job of my product owners rather than the scrum master.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I don&amp;#39;t think so. It kind of sounds like you hired a dud. But that also doesn&amp;#39;t surprise me because it also sounds like you didn&amp;#39;t know what to look for and probably just hired someone with a lot of experience. &lt;/p&gt;\n\n&lt;p&gt;Unfortunately the scrum master position is one of those where quality of experience matters a lot more than quantity. Variety of experience also matters. A SM with 4 years total, 2 years at 2 different companies will almost always perform better than a scrum master that has worked at only one place for 8 years. There are, of course, exceptions. but assuming all 3 organization in this scenario have similar agile maturity this holds water. &lt;/p&gt;\n\n&lt;p&gt;------------&lt;/p&gt;\n\n&lt;p&gt;As the head of the product group, you should be bought into the agile mindset. if you aren&amp;#39;t, I wouldn&amp;#39;t hire Scrum Masters. There&amp;#39;s also a conflict of interest that exists between the product duties and the SM duties that is more pronounces the lower your agile maturity is. &lt;/p&gt;\n\n&lt;p&gt;If these SMs are goign to report to you, it also sounds like you&amp;#39;re responsible for giving them a vision for where the agile implementation is going. if you&amp;#39;re not bought in and have some idea of where you want to go, there&amp;#39;s not much else your SM can do other than facilitate meetings. &lt;/p&gt;\n\n&lt;p&gt;SMs typically focus more on the team level and aren&amp;#39;t necessarily concerned with higher level strategy of what the agile implementation is trying to do. They are more focused on making sure the nuts and bolts of the implementation are where they need to be.  IE: because you haven&amp;#39;t been equipped to provide the SM direction, the only thing he can do is facilitate meetings. there&amp;#39;s no improvements to drive, processes to change/learn, etc. &lt;/p&gt;\n\n&lt;p&gt;You may want to look for an agile coach or solution/release train engineer that&amp;#39;s going to have more direct experience with coaching roles/responsibilities, will know how to spot/identify the weakest areas of your system of work and won&amp;#39;t need as much direct input from you on what they should be doing. They will also be able to provide direction to your other SMs. IE: Hire a team lead. Look for Agile coach or some kind of &amp;#39;train engineer&amp;#39; If an SM is a developer, the Agile Coach or Train engineer is like an architect.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_rawhza", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/rawhza/what_can_i_reasonably_expect_my_scrum_master_to_do/hnm3ik0/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/rawhza/what_can_i_reasonably_expect_my_scrum_master_to_do/", "name": "t1_hnm3ik0", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1638897155.0, "created_utc": 1638897155.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/rawhza/what_can_i_reasonably_expect_my_scrum_master_to_do/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhpq", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "agile team burn out", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "scrum", "link_author": "begin2", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hn3e77k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 16, "can_mod_post": false, "send_replies": true, "parent_id": "t3_r79pxz", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;right now its almost impossible to finish my work without working around the clock and never taking time off.\n\nWhy are you committing to the work? It sounds like your management is either weaponizing your velocity or your team isn't standing up for themselves and saying 'no' when they can't fit something in.\n\n\\-----------\n\nThe fact you're working around the clock and claiming to be on an agile team, to me, is an oxymoron. those two things can't coincide.\n\nSo it also sounds like there may be some gaps in how you handle performance reviews. IE: when first transitioning away from traditional waterfall, one of the first and glaring gaps is that we traditionally measure an individual's performance based on project delivery or performance.\n\nAre you convinced that management understands how to measure value and RoI from a teams perspective? Or is the burnout encouraged because of how the business measures value and therefore tries to maximize it?", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;right now its almost impossible to finish my work without working around the clock and never taking time off.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Why are you committing to the work? It sounds like your management is either weaponizing your velocity or your team isn&amp;#39;t standing up for themselves and saying &amp;#39;no&amp;#39; when they can&amp;#39;t fit something in.&lt;/p&gt;\n\n&lt;p&gt;-----------&lt;/p&gt;\n\n&lt;p&gt;The fact you&amp;#39;re working around the clock and claiming to be on an agile team, to me, is an oxymoron. those two things can&amp;#39;t coincide.&lt;/p&gt;\n\n&lt;p&gt;So it also sounds like there may be some gaps in how you handle performance reviews. IE: when first transitioning away from traditional waterfall, one of the first and glaring gaps is that we traditionally measure an individual&amp;#39;s performance based on project delivery or performance.&lt;/p&gt;\n\n&lt;p&gt;Are you convinced that management understands how to measure value and RoI from a teams perspective? Or is the burnout encouraged because of how the business measures value and therefore tries to maximize it?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_r79pxz", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/scrum/comments/r79pxz/agile_team_burn_out/hn3e77k/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/scrum/comments/r79pxz/agile_team_burn_out/", "name": "t1_hn3e77k", "author_flair_template_id": null, "subreddit_name_prefixed": "r/scrum", "author_flair_text": null, "treatment_tags": [], "created": 1638554223.0, "created_utc": 1638554223.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/scrum/comments/r79pxz/agile_team_burn_out/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Academic Survey Research about Large Scale Agile - Looking for respondents", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Tikl2", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hmsovu7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 2, "can_mod_post": false, "send_replies": true, "parent_id": "t3_r6buww", "score": 2, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "We get a lot of these, I personally like them. I just wish more of you came back and shared results when you were done. I think I've helped with 5 of these this year and haven't seen a single follow up report :(\n\n\\----------\n\nI like a lot about this survey, it seemed a lot more thoughtful than a lot of the others.   \n\n\nOne issue I had with this one, is when addressing impact there's not a way for me to indicate if the result is a direct result of our agile efforts or if it's an area we haven't gotten to yet/we're self sabotaging and need some coaching. \n\nIE: While we have a prioritized backlog with features, epics, etc. That doesn't mean my product team knows how to use this to make decisions or that they have broken them down in a way they can make meaningful decisions. I found myself wanting to explain some of the weirdness.\n\nIt looks like this is accounted for in the self assessment of where you are on the maturity curve; as I would generally expect people lower on the curve to have more variance in their answers.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We get a lot of these, I personally like them. I just wish more of you came back and shared results when you were done. I think I&amp;#39;ve helped with 5 of these this year and haven&amp;#39;t seen a single follow up report :(&lt;/p&gt;\n\n&lt;p&gt;----------&lt;/p&gt;\n\n&lt;p&gt;I like a lot about this survey, it seemed a lot more thoughtful than a lot of the others.   &lt;/p&gt;\n\n&lt;p&gt;One issue I had with this one, is when addressing impact there&amp;#39;s not a way for me to indicate if the result is a direct result of our agile efforts or if it&amp;#39;s an area we haven&amp;#39;t gotten to yet/we&amp;#39;re self sabotaging and need some coaching. &lt;/p&gt;\n\n&lt;p&gt;IE: While we have a prioritized backlog with features, epics, etc. That doesn&amp;#39;t mean my product team knows how to use this to make decisions or that they have broken them down in a way they can make meaningful decisions. I found myself wanting to explain some of the weirdness.&lt;/p&gt;\n\n&lt;p&gt;It looks like this is accounted for in the self assessment of where you are on the maturity curve; as I would generally expect people lower on the curve to have more variance in their answers.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_r6buww", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/r6buww/academic_survey_research_about_large_scale_agile/hmsovu7/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/r6buww/academic_survey_research_about_large_scale_agile/", "name": "t1_hmsovu7", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1638367553.0, "created_utc": 1638367553.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/r6buww/academic_survey_research_about_large_scale_agile/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qhp0", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Question about coaching leaders", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "agile", "link_author": "Convoarcs", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "hlx81wl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "Onisake", "num_comments": 14, "can_mod_post": false, "send_replies": true, "parent_id": "t1_hlwwk71", "score": 1, "author_fullname": "t2_djc8o", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;I'm still not clear on what you're hoping to achieve with your judgements of me, based on very little information about me. Or what prompted your judgement.\n\nI was distracted and came off a little strong. IE: IF you came into my org and did this, this is the opinion everyone would have of you. Nothing you've said here indicates you know how a portfolio works. you might in reality, but i'm not seeing it and I expect this to be your perceived reputation in your org right now. \n\nYou working with portfolio teams doesn't mean you know how it works. IE: do you know how to build a portfolio from scratch, what common problems you will run into and how to mitigate them.\n\nI'm not seeing it. My goal is to answer your original question: Why doesn't my leadership team think I know what I'm doing? -&gt; you haven't shown you can navigate the core basic principles of what we're doing yet.\n\n&amp;#x200B;\n\n&gt;The feedback I got was that I don't know what I'm talking about and that I'm better suited to be a scrum master. I'm confused.\n\nI'm trying to get you to understand why you got this feedback. It's true. you have a lot of gaps to close and you don't seem willing to admit those gaps exist. this is why you're better suited to being a scrum master; you're showing you both don't know how to do it already and are unwilling to learn/admit you need to.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m still not clear on what you&amp;#39;re hoping to achieve with your judgements of me, based on very little information about me. Or what prompted your judgement.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I was distracted and came off a little strong. IE: IF you came into my org and did this, this is the opinion everyone would have of you. Nothing you&amp;#39;ve said here indicates you know how a portfolio works. you might in reality, but i&amp;#39;m not seeing it and I expect this to be your perceived reputation in your org right now. &lt;/p&gt;\n\n&lt;p&gt;You working with portfolio teams doesn&amp;#39;t mean you know how it works. IE: do you know how to build a portfolio from scratch, what common problems you will run into and how to mitigate them.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not seeing it. My goal is to answer your original question: Why doesn&amp;#39;t my leadership team think I know what I&amp;#39;m doing? -&amp;gt; you haven&amp;#39;t shown you can navigate the core basic principles of what we&amp;#39;re doing yet.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The feedback I got was that I don&amp;#39;t know what I&amp;#39;m talking about and that I&amp;#39;m better suited to be a scrum master. I&amp;#39;m confused.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m trying to get you to understand why you got this feedback. It&amp;#39;s true. you have a lot of gaps to close and you don&amp;#39;t seem willing to admit those gaps exist. this is why you&amp;#39;re better suited to being a scrum master; you&amp;#39;re showing you both don&amp;#39;t know how to do it already and are unwilling to learn/admit you need to.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_r0tdh5", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/agile/comments/r0tdh5/question_about_coaching_leaders/hlx81wl/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/agile/comments/r0tdh5/question_about_coaching_leaders/", "name": "t1_hlx81wl", "author_flair_template_id": null, "subreddit_name_prefixed": "r/agile", "author_flair_text": null, "treatment_tags": [], "created": 1637774202.0, "created_utc": 1637774202.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/agile/comments/r0tdh5/question_about_coaching_leaders/"}}], "before": null}}