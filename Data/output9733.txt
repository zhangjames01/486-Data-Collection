{"kind": "Listing", "data": {"after": "t1_d6cwskw", "dist": 25, "modhash": null, "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2qh1e", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "The best product demo of all time.", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "videos", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7ye2tf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 1727, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7xzpwl", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "https://www.youtube.com/watch?v=dAXa3wTZjes", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=dAXa3wTZjes\"&gt;https://www.youtube.com/watch?v=dAXa3wTZjes&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_540wbm", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/videos/comments/540wbm/the_best_product_demo_of_all_time/d7ye2tf/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/videos/comments/540wbm/the_best_product_demo_of_all_time/", "name": "t1_d7ye2tf", "author_flair_template_id": null, "subreddit_name_prefixed": "r/videos", "author_flair_text": null, "treatment_tags": [], "created": 1474599357.0, "created_utc": 1474599357.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://youtube.com/watch?v=5kc-bhOOLxE"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "If you could call yourself five years ago and had 30 seconds, what would you say?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "AskReddit", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7wb5qz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 18566, "can_mod_post": false, "send_replies": true, "parent_id": "t3_53sjgx", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Pay more attention, or she's going to leave you.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pay more attention, or she&amp;#39;s going to leave you.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_53sjgx", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/AskReddit/comments/53sjgx/if_you_could_call_yourself_five_years_ago_and_had/d7wb5qz/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/AskReddit/comments/53sjgx/if_you_could_call_yourself_five_years_ago_and_had/", "name": "t1_d7wb5qz", "author_flair_template_id": null, "subreddit_name_prefixed": "r/AskReddit", "author_flair_text": null, "treatment_tags": [], "created": 1474480487.0, "created_utc": 1474480487.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/AskReddit/comments/53sjgx/if_you_could_call_yourself_five_years_ago_and_had/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_363b8", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "The dog in black fled around the boulder, and the dusckslinger followed.", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "reallifedoodles", "link_author": "MattBaster", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7vpuud", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 241, "can_mod_post": false, "send_replies": true, "parent_id": "t3_53mu5k", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "It should have been a desert.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It should have been a desert.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_53mu5k", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/reallifedoodles/comments/53mu5k/the_dog_in_black_fled_around_the_boulder_and_the/d7vpuud/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/reallifedoodles/comments/53mu5k/the_dog_in_black_fled_around_the_boulder_and_the/", "name": "t1_d7vpuud", "author_flair_template_id": null, "subreddit_name_prefixed": "r/reallifedoodles", "author_flair_text": null, "treatment_tags": [], "created": 1474439880.0, "created_utc": 1474439880.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://i.imgur.com/rTijPSl.gifv"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2yuej", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "This fucking guy.", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "iamverysmart", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7vpugn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 350, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7vl9ot", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Probably by helping with term papers", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Probably by helping with term papers&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_53p7ad", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/iamverysmart/comments/53p7ad/this_fucking_guy/d7vpugn/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/iamverysmart/comments/53p7ad/this_fucking_guy/", "name": "t1_d7vpugn", "author_flair_template_id": null, "subreddit_name_prefixed": "r/iamverysmart", "author_flair_text": null, "treatment_tags": [], "created": 1474439849.0, "created_utc": 1474439849.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://imgur.com/a/NQdBE"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qi27", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "CppCon 2016: Bjarne Stroustrup's keynote", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7uhg94", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "codemercenary", "num_comments": 31, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7uf0f7", "score": 4, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Slide #19 is some visionary-level insight, too.  Applies to more than just code, too.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Slide #19 is some visionary-level insight, too.  Applies to more than just code, too.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_53mli3", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp/comments/53mli3/cppcon_2016_bjarne_stroustrups_keynote/d7uhg94/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp/comments/53mli3/cppcon_2016_bjarne_stroustrups_keynote/", "name": "t1_d7uhg94", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp", "author_flair_text": null, "treatment_tags": [], "created": 1474374457.0, "created_utc": 1474374457.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://imgur.com/a/wAWoB"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u4z3", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Plans for the V3 objective-c API?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "leapmotion", "link_author": "QuazyWabbit1", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7sxmct", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 13, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7swmch", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Sure thing.\n\nYou want to move this discussion to somewhere else?  I need a way to send you compiled binaries, can't exactly do that over Reddit.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sure thing.&lt;/p&gt;\n\n&lt;p&gt;You want to move this discussion to somewhere else?  I need a way to send you compiled binaries, can&amp;#39;t exactly do that over Reddit.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52z9j8", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/d7sxmct/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/", "name": "t1_d7sxmct", "author_flair_template_id": null, "subreddit_name_prefixed": "r/leapmotion", "author_flair_text": null, "treatment_tags": [], "created": 1474277243.0, "created_utc": 1474277243.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u4z3", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Plans for the V3 objective-c API?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "leapmotion", "link_author": "QuazyWabbit1", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7slfai", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 13, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7se55w", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "All of our code builds for all platforms, including LeapC.  Really, LeapC was a tear-down rewrite of the entire API stack, but we only provided bindings in C and C#.  The main reason for this rewrite was to address garbage collection issues in C#, the C++ bindings may suck a bit for us to maintain but they don't have that problem.\n\nIt should be possible for you to use the new LeapC API bindings in Orion, no problem.  Are you able to find a copy of LeapC.dylib in the SDK?  If not I can provide you with one, along with the headers you will need to link.  The only thing I ask is that you open source whatever bindings/wrappers you write!", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;All of our code builds for all platforms, including LeapC.  Really, LeapC was a tear-down rewrite of the entire API stack, but we only provided bindings in C and C#.  The main reason for this rewrite was to address garbage collection issues in C#, the C++ bindings may suck a bit for us to maintain but they don&amp;#39;t have that problem.&lt;/p&gt;\n\n&lt;p&gt;It should be possible for you to use the new LeapC API bindings in Orion, no problem.  Are you able to find a copy of LeapC.dylib in the SDK?  If not I can provide you with one, along with the headers you will need to link.  The only thing I ask is that you open source whatever bindings/wrappers you write!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52z9j8", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/d7slfai/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/", "name": "t1_d7slfai", "author_flair_template_id": null, "subreddit_name_prefixed": "r/leapmotion", "author_flair_text": null, "treatment_tags": [], "created": 1474249793.0, "created_utc": 1474249793.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u4z3", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Leap Service with WebRTC instead of websockets?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "leapmotion", "link_author": "yummieee", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7rextj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 2, "can_mod_post": false, "send_replies": true, "parent_id": "t3_519p9m", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Hey there:\n\nI maintain the websockets bindings in the service.  We can add support for WebRTC, but we don't have engineering resources to do this just yet.\n\nDo you have time and inclination to offer assistance?", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey there:&lt;/p&gt;\n\n&lt;p&gt;I maintain the websockets bindings in the service.  We can add support for WebRTC, but we don&amp;#39;t have engineering resources to do this just yet.&lt;/p&gt;\n\n&lt;p&gt;Do you have time and inclination to offer assistance?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_519p9m", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/leapmotion/comments/519p9m/leap_service_with_webrtc_instead_of_websockets/d7rextj/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/leapmotion/comments/519p9m/leap_service_with_webrtc_instead_of_websockets/", "name": "t1_d7rextj", "author_flair_template_id": null, "subreddit_name_prefixed": "r/leapmotion", "author_flair_text": null, "treatment_tags": [], "created": 1474172599.0, "created_utc": 1474172599.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/leapmotion/comments/519p9m/leap_service_with_webrtc_instead_of_websockets/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u4z3", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Plans for the V3 objective-c API?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "leapmotion", "link_author": "QuazyWabbit1", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7r177j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 13, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7qet0p", "score": 2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Hey there:\n\nI'm the software architect, I designed the new API.\n\nThe main difference is that the lowest layers are now written in C++ with a C-style API at the top level.  LeapCSharp, the C# binding, is maintained by hand (instead of being generated by SWIG).  Creating the binding by hand has enabled us to avoid a lot of the garbage collection and copy inefficiency problems that the generated code used to have.\n\nIf you like, you can make use of the LeapC API directly in ObjC.  If you're using ObjC, in fact, you don't even need to write your own bindings, maybe all you decided to do is make a wrapper class.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey there:&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m the software architect, I designed the new API.&lt;/p&gt;\n\n&lt;p&gt;The main difference is that the lowest layers are now written in C++ with a C-style API at the top level.  LeapCSharp, the C# binding, is maintained by hand (instead of being generated by SWIG).  Creating the binding by hand has enabled us to avoid a lot of the garbage collection and copy inefficiency problems that the generated code used to have.&lt;/p&gt;\n\n&lt;p&gt;If you like, you can make use of the LeapC API directly in ObjC.  If you&amp;#39;re using ObjC, in fact, you don&amp;#39;t even need to write your own bindings, maybe all you decided to do is make a wrapper class.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52z9j8", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/d7r177j/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/", "name": "t1_d7r177j", "author_flair_template_id": null, "subreddit_name_prefixed": "r/leapmotion", "author_flair_text": null, "treatment_tags": [], "created": 1474149750.0, "created_utc": 1474149750.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/leapmotion/comments/52z9j8/plans_for_the_v3_objectivec_api/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tdbd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Why does std::is_const report a different value to the actual const-ness?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp_questions", "link_author": "leftofzen", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7jr0k3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 11, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7jnyvo", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I said the left side _of the assignment operator_.  Situations not permitted on the left side of assignment are tolerated during copy initialization.\n\n[Copy assignment operator](http://en.cppreference.com/w/cpp/language/copy_assignment)\n\n[Copy initialization](http://en.cppreference.com/w/cpp/language/copy_initialization)\n\nIt just so happens that both of these use the same token (the `=` sign) but they are actually distinct cases.  Just to make my point clear:\n\n    struct Foo {\n      operator=(const Foo&amp;) = delete;\n    };\n    Foo foo = Foo{};  // Default copy initialization, allowed\n    foo = foo;        // Copy assignment, explicitly disallowed\n\nYour point about `std::initializer_list` is of course correct, and (imho) it's an annoying part of the standard.  The array it contains might not be const-qualified, but you aren't supposed to take or change it, which makes it both immutable and non-const.\n\nEdit:  I don't think the term \"immutable\" is a part of the standard, I'm just using as a blanket term to refer to \"anything that is not an lvalue\".", "edited": 1473700000.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I said the left side &lt;em&gt;of the assignment operator&lt;/em&gt;.  Situations not permitted on the left side of assignment are tolerated during copy initialization.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.cppreference.com/w/cpp/language/copy_assignment\"&gt;Copy assignment operator&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.cppreference.com/w/cpp/language/copy_initialization\"&gt;Copy initialization&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It just so happens that both of these use the same token (the &lt;code&gt;=&lt;/code&gt; sign) but they are actually distinct cases.  Just to make my point clear:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Foo {\n  operator=(const Foo&amp;amp;) = delete;\n};\nFoo foo = Foo{};  // Default copy initialization, allowed\nfoo = foo;        // Copy assignment, explicitly disallowed\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Your point about &lt;code&gt;std::initializer_list&lt;/code&gt; is of course correct, and (imho) it&amp;#39;s an annoying part of the standard.  The array it contains might not be const-qualified, but you aren&amp;#39;t supposed to take or change it, which makes it both immutable and non-const.&lt;/p&gt;\n\n&lt;p&gt;Edit:  I don&amp;#39;t think the term &amp;quot;immutable&amp;quot; is a part of the standard, I&amp;#39;m just using as a blanket term to refer to &amp;quot;anything that is not an lvalue&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52bk0k", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/d7jr0k3/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/", "name": "t1_d7jr0k3", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp_questions", "author_flair_text": null, "treatment_tags": [], "created": 1473699396.0, "created_utc": 1473699396.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tdbd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Why does std::is_const report a different value to the actual const-ness?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp_questions", "link_author": "leftofzen", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7jboln", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 11, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7j9qte", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "First, note that the definition of [`std::is_const`](http://en.cppreference.com/w/cpp/types/is_const) is actually quite strict.  It states specifically that `T` must be [const-qualified](http://en.cppreference.com/w/c/language/const).\n\nSecond, [reference types cannot be cv-qualified at the top level](http://en.cppreference.com/w/cpp/language/reference).  If you put a const qualifier on a reference somehow, it just gets dropped.  Here's an example:\n\n    template&lt;typename T&gt;\n    struct foo {\n      static const bool value = std::is_const&lt;const T&gt;::value;\n    };\n    foo&lt;int&gt;::value; // True!\n    foo&lt;int&amp;&gt;::value; // False!\n\nWhy can't a reference type be cv-qualified?  Because only an object type can be cv-qualified.  Objects in C++ have two properties:\n\n1.  Address (generally, a distinct address)\n2.  Size (must be nonzero)\n\nPointers are a kind of object, because `sizeof(void*)` and `&amp;ptr` both work on a pointer.  `sizeof` and `&amp;` on a reference get you the size and address of the referenced object, _not_ the reference itself, and no syntax is provided to do this, thus references are not objects.\n\nEdit:\n\nAlso one more thing, to your question from before:  Immutability and const aren't the same thing.  Immutable just means something can't ever be on the left side of the assignment operator.  The literal value `1`, however, is immutable and `std::is_const&lt;decltype(1)&gt;::value` is actually false!", "edited": 1473668231.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First, note that the definition of &lt;a href=\"http://en.cppreference.com/w/cpp/types/is_const\"&gt;&lt;code&gt;std::is_const&lt;/code&gt;&lt;/a&gt; is actually quite strict.  It states specifically that &lt;code&gt;T&lt;/code&gt; must be &lt;a href=\"http://en.cppreference.com/w/c/language/const\"&gt;const-qualified&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Second, &lt;a href=\"http://en.cppreference.com/w/cpp/language/reference\"&gt;reference types cannot be cv-qualified at the top level&lt;/a&gt;.  If you put a const qualifier on a reference somehow, it just gets dropped.  Here&amp;#39;s an example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;template&amp;lt;typename T&amp;gt;\nstruct foo {\n  static const bool value = std::is_const&amp;lt;const T&amp;gt;::value;\n};\nfoo&amp;lt;int&amp;gt;::value; // True!\nfoo&amp;lt;int&amp;amp;&amp;gt;::value; // False!\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Why can&amp;#39;t a reference type be cv-qualified?  Because only an object type can be cv-qualified.  Objects in C++ have two properties:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt; Address (generally, a distinct address)&lt;/li&gt;\n&lt;li&gt; Size (must be nonzero)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Pointers are a kind of object, because &lt;code&gt;sizeof(void*)&lt;/code&gt; and &lt;code&gt;&amp;amp;ptr&lt;/code&gt; both work on a pointer.  &lt;code&gt;sizeof&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; on a reference get you the size and address of the referenced object, &lt;em&gt;not&lt;/em&gt; the reference itself, and no syntax is provided to do this, thus references are not objects.&lt;/p&gt;\n\n&lt;p&gt;Edit:&lt;/p&gt;\n\n&lt;p&gt;Also one more thing, to your question from before:  Immutability and const aren&amp;#39;t the same thing.  Immutable just means something can&amp;#39;t ever be on the left side of the assignment operator.  The literal value &lt;code&gt;1&lt;/code&gt;, however, is immutable and &lt;code&gt;std::is_const&amp;lt;decltype(1)&amp;gt;::value&lt;/code&gt; is actually false!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52bk0k", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/d7jboln/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/", "name": "t1_d7jboln", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp_questions", "author_flair_text": null, "treatment_tags": [], "created": 1473667894.0, "created_utc": 1473667894.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tdbd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Why does std::is_const report a different value to the actual const-ness?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp_questions", "link_author": "leftofzen", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7j9cij", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 11, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d7izgi6", "score": 2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "FYI, `std::is_const&lt;int* const&gt;::value` would be `true`", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FYI, &lt;code&gt;std::is_const&amp;lt;int* const&amp;gt;::value&lt;/code&gt; would be &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52bk0k", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/d7j9cij/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/", "name": "t1_d7j9cij", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp_questions", "author_flair_text": null, "treatment_tags": [], "created": 1473660603.0, "created_utc": 1473660603.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cpp_questions/comments/52bk0k/why_does_stdis_const_report_a_different_value_to/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tdbd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Why do segfault's halt the program, and not simply throw an exception ?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp_questions", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7il6vy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 4, "can_mod_post": false, "send_replies": true, "parent_id": "t3_529b6s", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The main reason that you don't get an exception is that the concept of an \"exception\" is strictly a part of the C++ language, whereas a segmentation fault is happening because of craziness in the memory manager or the operating system proper.  To throw an exception in C++, you either need a `throw` keyword or a bad cast or some kind of C++ language construct to originate the exception.\n\nA `SIGSEGV` means \"accessed bad address\".  There isn't necessarily anything wrong with the heap, or the program at large, but if you don't handle this gracefully that's what the OS will assume and it will kill your process.  And so...there ARE cases where you might be able to gracefully handle the failure, rather than terminating the program.\n\nFor instance, suppose you're writing a driver, and the driver can receive a pointer to memory from a user-mode application.  You can't just trust the usermode application to give you valid memory, right?  It could be a pointer to anywhere, and passing a pointer to anywhere to your driver could actually cause your driver to crash the whole system.\n\nYou could override the signal handler for `SIGSEGV` using the [`signal`](http://pubs.opengroup.org/onlinepubs/009695399/functions/signal.html) method, and then try to dereference each byte in the block of memory passed to you by the user.  If any of the bytes aren't valid, you'll be able to handle it in your signal handler.\n\nWindows doesn't use signals for segmentation faults; rather, it uses something called [structured exception handling](https://msdn.microsoft.com/en-us/library/swezty51.aspx?f=255&amp;MSPPError=-2147217396), or SEH.  They look a little like C++ exceptions but they are incompatible with C++ exceptions and work completely differently.\n\n    // Intentional pointer to garbage\n    void* pGarbage = (void*)0x92984819;\n    __try {\n      std::cout &lt;&lt; *pGarbage &lt;&lt; std::endl;\n    } __except(EXCEPTION_EXECUTE_HANDLER) {\n      std::cout &lt;&lt; \"Memory is not valid!\";\n    }\n\nThis kind of thing is pretty common to see in Windows DLLs, for instance, that need to verify user pointers before reading or writing them.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The main reason that you don&amp;#39;t get an exception is that the concept of an &amp;quot;exception&amp;quot; is strictly a part of the C++ language, whereas a segmentation fault is happening because of craziness in the memory manager or the operating system proper.  To throw an exception in C++, you either need a &lt;code&gt;throw&lt;/code&gt; keyword or a bad cast or some kind of C++ language construct to originate the exception.&lt;/p&gt;\n\n&lt;p&gt;A &lt;code&gt;SIGSEGV&lt;/code&gt; means &amp;quot;accessed bad address&amp;quot;.  There isn&amp;#39;t necessarily anything wrong with the heap, or the program at large, but if you don&amp;#39;t handle this gracefully that&amp;#39;s what the OS will assume and it will kill your process.  And so...there ARE cases where you might be able to gracefully handle the failure, rather than terminating the program.&lt;/p&gt;\n\n&lt;p&gt;For instance, suppose you&amp;#39;re writing a driver, and the driver can receive a pointer to memory from a user-mode application.  You can&amp;#39;t just trust the usermode application to give you valid memory, right?  It could be a pointer to anywhere, and passing a pointer to anywhere to your driver could actually cause your driver to crash the whole system.&lt;/p&gt;\n\n&lt;p&gt;You could override the signal handler for &lt;code&gt;SIGSEGV&lt;/code&gt; using the &lt;a href=\"http://pubs.opengroup.org/onlinepubs/009695399/functions/signal.html\"&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; method, and then try to dereference each byte in the block of memory passed to you by the user.  If any of the bytes aren&amp;#39;t valid, you&amp;#39;ll be able to handle it in your signal handler.&lt;/p&gt;\n\n&lt;p&gt;Windows doesn&amp;#39;t use signals for segmentation faults; rather, it uses something called &lt;a href=\"https://msdn.microsoft.com/en-us/library/swezty51.aspx?f=255&amp;amp;MSPPError=-2147217396\"&gt;structured exception handling&lt;/a&gt;, or SEH.  They look a little like C++ exceptions but they are incompatible with C++ exceptions and work completely differently.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Intentional pointer to garbage\nvoid* pGarbage = (void*)0x92984819;\n__try {\n  std::cout &amp;lt;&amp;lt; *pGarbage &amp;lt;&amp;lt; std::endl;\n} __except(EXCEPTION_EXECUTE_HANDLER) {\n  std::cout &amp;lt;&amp;lt; &amp;quot;Memory is not valid!&amp;quot;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This kind of thing is pretty common to see in Windows DLLs, for instance, that need to verify user pointers before reading or writing them.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_529b6s", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp_questions/comments/529b6s/why_do_segfaults_halt_the_program_and_not_simply/d7il6vy/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp_questions/comments/529b6s/why_do_segfaults_halt_the_program_and_not_simply/", "name": "t1_d7il6vy", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp_questions", "author_flair_text": null, "treatment_tags": [], "created": 1473623692.0, "created_utc": 1473623692.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cpp_questions/comments/529b6s/why_do_segfaults_halt_the_program_and_not_simply/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_37wn5", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "He doesn't like sleeping alone", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Unorthodog", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d7ikn55", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 3, "can_mod_post": false, "send_replies": true, "parent_id": "t3_52642k", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "My dog does this, too.  Except he likes to do it on my clean laundry if I don't put all of it away at once.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My dog does this, too.  Except he likes to do it on my clean laundry if I don&amp;#39;t put all of it away at once.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_52642k", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Unorthodog/comments/52642k/he_doesnt_like_sleeping_alone/d7ikn55/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Unorthodog/comments/52642k/he_doesnt_like_sleeping_alone/", "name": "t1_d7ikn55", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Unorthodog", "author_flair_text": null, "treatment_tags": [], "created": 1473623030.0, "created_utc": 1473623030.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://imgur.com/7AgxzrR"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r6rj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Sarcastically asked friend, 'Who shot your dog?'", "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cringe", "link_author": "WhyAlwaysLouie", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d78i0o8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 111, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d78hwom", "score": 5, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Agree with this.\n\nOp validated his friend's feelings, showed real sensitivity, and then provided comfort in a moment of pain that his friend may have had to suffer alone.\n\nGood work, /u/WhyAlwaysLouie, you are a true friend.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Agree with this.&lt;/p&gt;\n\n&lt;p&gt;Op validated his friend&amp;#39;s feelings, showed real sensitivity, and then provided comfort in a moment of pain that his friend may have had to suffer alone.&lt;/p&gt;\n\n&lt;p&gt;Good work, &lt;a href=\"/u/WhyAlwaysLouie\"&gt;/u/WhyAlwaysLouie&lt;/a&gt;, you are a true friend.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_51002n", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cringe/comments/51002n/sarcastically_asked_friend_who_shot_your_dog/d78i0o8/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cringe/comments/51002n/sarcastically_asked_friend_who_shot_your_dog/", "name": "t1_d78i0o8", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cringe", "author_flair_text": null, "treatment_tags": [], "created": 1472943187.0, "created_utc": 1472943187.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cringe/comments/51002n/sarcastically_asked_friend_who_shot_your_dog/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ti4h", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "This tile is not misplaced, it's completely different from others.", "mod_reason_by": null, "banned_by": null, "ups": 22, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "mildlyinteresting", "link_author": "squarus", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d78aklz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "codemercenary", "num_comments": 45, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d782pfc", "score": 22, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "High frequency versus low frequency image components.\n\n[Here's a paper](http://cvcl.mit.edu/papers/Oliva-HybridImages-ArtPerception2013.pdf)--scroll down to the fourth page, you'll see the same effect (but a lot more pronounced) if you zoom in and out.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;High frequency versus low frequency image components.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://cvcl.mit.edu/papers/Oliva-HybridImages-ArtPerception2013.pdf\"&gt;Here&amp;#39;s a paper&lt;/a&gt;--scroll down to the fourth page, you&amp;#39;ll see the same effect (but a lot more pronounced) if you zoom in and out.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_50ys90", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/mildlyinteresting/comments/50ys90/this_tile_is_not_misplaced_its_completely/d78aklz/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/mildlyinteresting/comments/50ys90/this_tile_is_not_misplaced_its_completely/", "name": "t1_d78aklz", "author_flair_template_id": null, "subreddit_name_prefixed": "r/mildlyinteresting", "author_flair_text": null, "treatment_tags": [], "created": 1472930562.0, "created_utc": 1472930562.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.reddituploads.com/8537fc8300c94a279f6ac7b18974fb89?fit=max&amp;h=1536&amp;w=1536&amp;s=b705f8786e4af51b5d49be157f647c14"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2rk5q", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "[Help] My Z axis band is rubbing against the acrylic and damaging it. (HICTOP Prusa I3) what should I do?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "3Dprinting", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d77qdw3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 7, "can_mod_post": false, "send_replies": true, "parent_id": "t3_50xft7", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Is the pulley misaligned, perhaps?  Others here may know more than me, but my first inclination would be to pull it apart, clean it, and then put it back together again.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is the pulley misaligned, perhaps?  Others here may know more than me, but my first inclination would be to pull it apart, clean it, and then put it back together again.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_50xft7", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/3Dprinting/comments/50xft7/help_my_z_axis_band_is_rubbing_against_the/d77qdw3/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/3Dprinting/comments/50xft7/help_my_z_axis_band_is_rubbing_against_the/", "name": "t1_d77qdw3", "author_flair_template_id": null, "subreddit_name_prefixed": "r/3Dprinting", "author_flair_text": null, "treatment_tags": [], "created": 1472882035.0, "created_utc": 1472882035.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://imgur.com/nDf484y"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2tdbd", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Shared memory with NORESERVE", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "cpp_questions", "link_author": "callipygous", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d77q85t", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 1, "can_mod_post": false, "send_replies": true, "parent_id": "t3_50un43", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "You might consume all of the memory in the system and wind up crashing due to an out-of-memory condition.  The `MAP_NORESERVE` flag has the same effect as marking the memory as being non-pageable, which means that if there isn't enough physical memory available to satisfy the request the process is going to die, and this also reduces the amount of physical memory that can be paged out for use by other processes.\n\nIf you are sharing memory between the parent and child processes using `fork` (don't do this, though), then all forked child processes will have views on the same pages of physical memory--that is to say, there is only a nominal amount of additional memory required to process the fork, and that is the amount of memory required to create another process, and you will have 10g of the same set of physical pages mapped to the same address range in each forked process.\n\nIf you don't need the extra isolation provided by having two separate processes, you should consider creating additional threads instead.  It's way less overhead and you will find the communication to be much simpler.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might consume all of the memory in the system and wind up crashing due to an out-of-memory condition.  The &lt;code&gt;MAP_NORESERVE&lt;/code&gt; flag has the same effect as marking the memory as being non-pageable, which means that if there isn&amp;#39;t enough physical memory available to satisfy the request the process is going to die, and this also reduces the amount of physical memory that can be paged out for use by other processes.&lt;/p&gt;\n\n&lt;p&gt;If you are sharing memory between the parent and child processes using &lt;code&gt;fork&lt;/code&gt; (don&amp;#39;t do this, though), then all forked child processes will have views on the same pages of physical memory--that is to say, there is only a nominal amount of additional memory required to process the fork, and that is the amount of memory required to create another process, and you will have 10g of the same set of physical pages mapped to the same address range in each forked process.&lt;/p&gt;\n\n&lt;p&gt;If you don&amp;#39;t need the extra isolation provided by having two separate processes, you should consider creating additional threads instead.  It&amp;#39;s way less overhead and you will find the communication to be much simpler.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_50un43", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/cpp_questions/comments/50un43/shared_memory_with_noreserve/d77q85t/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/cpp_questions/comments/50un43/shared_memory_with_noreserve/", "name": "t1_d77q85t", "author_flair_template_id": null, "subreddit_name_prefixed": "r/cpp_questions", "author_flair_text": null, "treatment_tags": [], "created": 1472881588.0, "created_utc": 1472881588.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/cpp_questions/comments/50un43/shared_memory_with_noreserve/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "What company is surprisingly behind the times for how successful they are?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "AskReddit", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d77jouy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 9834, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d77g6bo", "score": 2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Your printer may not have enough dimensions.  Try a 3d printer.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your printer may not have enough dimensions.  Try a 3d printer.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_50syt7", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/AskReddit/comments/50syt7/what_company_is_surprisingly_behind_the_times_for/d77jouy/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/AskReddit/comments/50syt7/what_company_is_surprisingly_behind_the_times_for/", "name": "t1_d77jouy", "author_flair_template_id": null, "subreddit_name_prefixed": "r/AskReddit", "author_flair_text": null, "treatment_tags": [], "created": 1472867613.0, "created_utc": 1472867613.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/AskReddit/comments/50syt7/what_company_is_surprisingly_behind_the_times_for/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh6x", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "How do you do your header guards?", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Cplusplus", "link_author": "my-alt-account-", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d71b30e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 10, "can_mod_post": false, "send_replies": true, "parent_id": "t3_500lfy", "score": 2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "    #pragma once\n\nDon't bother with header guards unless you've got a reason to be using an ancient toolchain.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;#pragma once\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Don&amp;#39;t bother with header guards unless you&amp;#39;ve got a reason to be using an ancient toolchain.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_500lfy", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Cplusplus/comments/500lfy/how_do_you_do_your_header_guards/d71b30e/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Cplusplus/comments/500lfy/how_do_you_do_your_header_guards/", "name": "t1_d71b30e", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Cplusplus", "author_flair_text": null, "treatment_tags": [], "created": 1472485330.0, "created_utc": 1472485330.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Cplusplus/comments/500lfy/how_do_you_do_your_header_guards/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2seqz", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Outdoor advertisement for Cingular Wireless; (Agency: BBDO, New York) [597X610]", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "AdPorn", "link_author": "JustBlue", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d71b0un", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 12, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d70psm0", "score": 2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Yeah, why would I trust them not to drop my calls when they can't even keep their billboard from dropping _pieces of itself_.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yeah, why would I trust them not to drop my calls when they can&amp;#39;t even keep their billboard from dropping &lt;em&gt;pieces of itself&lt;/em&gt;.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_500lsb", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/AdPorn/comments/500lsb/outdoor_advertisement_for_cingular_wireless/d71b0un/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/AdPorn/comments/500lsb/outdoor_advertisement_for_cingular_wireless/", "name": "t1_d71b0un", "author_flair_template_id": null, "subreddit_name_prefixed": "r/AdPorn", "author_flair_text": null, "treatment_tags": [], "created": 1472485251.0, "created_utc": 1472485251.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://i.imgur.com/K7yOlF9.jpg"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0u", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Magnet art", "mod_reason_by": null, "banned_by": null, "ups": -2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "pics", "link_author": "nture", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d719qx9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 91, "can_mod_post": false, "send_replies": true, "parent_id": "t3_504mbg", "score": -2, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I have a title for this:\n\n\"Desire\"", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have a title for this:&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;Desire&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_504mbg", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/pics/comments/504mbg/magnet_art/d719qx9/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/pics/comments/504mbg/magnet_art/", "name": "t1_d719qx9", "author_flair_template_id": null, "subreddit_name_prefixed": "r/pics", "author_flair_text": null, "treatment_tags": [], "created": 1472483468.0, "created_utc": 1472483468.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://i.imgur.com/CVdWMMT.jpg"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh03", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "The Dark Brotherhood are true assassins", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "gaming", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d6sgsut", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 1577, "can_mod_post": false, "send_replies": true, "parent_id": "t3_4z14od", "score": 1, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "At least not after labor day.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;At least not after labor day.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_4z14od", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/gaming/comments/4z14od/the_dark_brotherhood_are_true_assassins/d6sgsut/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/gaming/comments/4z14od/the_dark_brotherhood_are_true_assassins/", "name": "t1_d6sgsut", "author_flair_template_id": null, "subreddit_name_prefixed": "r/gaming", "author_flair_text": null, "treatment_tags": [], "created": 1471904516.0, "created_utc": 1471904516.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://i.imgur.com/brjpZ8T.png"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2rk5q", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "I printed a Magic the Gathering deck box for my friend who is participating in a Magic event soon.", "mod_reason_by": null, "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "3Dprinting", "link_author": "pemt", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d6mpaef", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "codemercenary", "num_comments": 10, "can_mod_post": false, "send_replies": true, "parent_id": "t3_4ybjmm", "score": 11, "author_fullname": "t2_5jtgb", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "First: This is very cool.  The fire symbol in relief looks great, you should consider painting it, maybe give it a black background.  Acrylic paint works well on PLA.\n\nSecond:  The red pins look like nipples.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First: This is very cool.  The fire symbol in relief looks great, you should consider painting it, maybe give it a black background.  Acrylic paint works well on PLA.&lt;/p&gt;\n\n&lt;p&gt;Second:  The red pins look like nipples.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_4ybjmm", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/3Dprinting/comments/4ybjmm/i_printed_a_magic_the_gathering_deck_box_for_my/d6mpaef/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/3Dprinting/comments/4ybjmm/i_printed_a_magic_the_gathering_deck_box_for_my/", "name": "t1_d6mpaef", "author_flair_template_id": null, "subreddit_name_prefixed": "r/3Dprinting", "author_flair_text": null, "treatment_tags": [], "created": 1471534598.0, "created_utc": 1471534598.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "http://imgur.com/a/O9u8B"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh1i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Non-LGBT people, what inappropriate questions do you want to ask LGBT people?", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "AskReddit", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "d6cwskw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": true, "author": "codemercenary", "num_comments": 16552, "can_mod_post": false, "send_replies": true, "parent_id": "t1_d6cql1d", "score": 1, "author_fullname": "t2_5jtgb", "over_18": true, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "It wouldn't be hard, that's why it would be difficult.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It wouldn&amp;#39;t be hard, that&amp;#39;s why it would be difficult.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_4x3p8n", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/AskReddit/comments/4x3p8n/nonlgbt_people_what_inappropriate_questions_do/d6cwskw/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/AskReddit/comments/4x3p8n/nonlgbt_people_what_inappropriate_questions_do/", "name": "t1_d6cwskw", "author_flair_template_id": null, "subreddit_name_prefixed": "r/AskReddit", "author_flair_text": null, "treatment_tags": [], "created": 1470895061.0, "created_utc": 1470895061.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/AskReddit/comments/4x3p8n/nonlgbt_people_what_inappropriate_questions_do/"}}], "before": null}}