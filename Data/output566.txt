{"kind": "Listing", "data": {"after": "t1_drof4cw", "dist": 25, "modhash": null, "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "what does the .into() method do?", "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "dorgon15", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "h9bgwgk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 24, "can_mod_post": false, "send_replies": true, "parent_id": "t3_p69c9w", "score": 5, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "The `Into` trait specifies the other direction of the `From` trait.\n\nThat is, `From` allows a type to define how to create itself from another type. `Into` simply performs that.\n\nFrom the extremely helpful [Rust By Example](https://doc.rust-lang.org/rust-by-example/conversion/from_into.html) book, you see a very trivial example where we have a `Number` type which implements the `From` trait against the type `i32`. In the `Into` example, we see it in action (I'm going to add some stuff to try and make it clearer):  \n\n\n```Rust\nfn main() {    \n  // Our `int` is of type `i32` for which we have implemented the `From` trait\n  // for our `Number` type. So, we can call `into()` against it.\n  let int: i32 = 5;\n  // Gives us a `Number` type \"from\" an `i32` type via the `into()` method.\n  let num: Number = int.into();\n  println!(\"My number is {:?}\", num);\n}\n```", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &lt;code&gt;Into&lt;/code&gt; trait specifies the other direction of the &lt;code&gt;From&lt;/code&gt; trait.&lt;/p&gt;\n\n&lt;p&gt;That is, &lt;code&gt;From&lt;/code&gt; allows a type to define how to create itself from another type. &lt;code&gt;Into&lt;/code&gt; simply performs that.&lt;/p&gt;\n\n&lt;p&gt;From the extremely helpful &lt;a href=\"https://doc.rust-lang.org/rust-by-example/conversion/from_into.html\"&gt;Rust By Example&lt;/a&gt; book, you see a very trivial example where we have a &lt;code&gt;Number&lt;/code&gt; type which implements the &lt;code&gt;From&lt;/code&gt; trait against the type &lt;code&gt;i32&lt;/code&gt;. In the &lt;code&gt;Into&lt;/code&gt; example, we see it in action (I&amp;#39;m going to add some stuff to try and make it clearer):  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Rust\nfn main() {    \n  // Our `int` is of type `i32` for which we have implemented the `From` trait\n  // for our `Number` type. So, we can call `into()` against it.\n  let int: i32 = 5;\n  // Gives us a `Number` type &amp;quot;from&amp;quot; an `i32` type via the `into()` method.\n  let num: Number = int.into();\n  println!(&amp;quot;My number is {:?}&amp;quot;, num);\n}\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_p69c9w", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/p69c9w/what_does_the_into_method_do/h9bgwgk/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/p69c9w/what_does_the_into_method_do/", "name": "t1_h9bgwgk", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1629225453.0, "created_utc": 1629225453.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/p69c9w/what_does_the_into_method_do/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hey Rustaceans! Got an easy question? Ask here (45/2020)!", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "llogiq", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "gax2tph", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 151, "can_mod_post": false, "send_replies": true, "parent_id": "t1_gax1ihm", "score": 2, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I mostly agree, but it's sort of strange when you put it up against array literals.\n\nLike, this is just me waxing philosophically, but it seems like it would have been more congruent if array literals **also** resulted in a reference. You have to basically use a reference to do anything with them anyway, so why not treat them the same as string literals?\n\n    fn foo() {\n      let arr = [1, 2, 3, 4, 5];\n      // in order to iterate over this array, I have to ref\n      for val in &amp;arr {}\n    }\n\nI guess the only thing that's bugging me is that it's the same syntax to create literals, but you get conceptually different things. I guess I would expect one of the following:\n\n    let slice: &amp;str = &amp;\"Hello, World!\";\n    let arr: &amp;[i32; 5] = &amp;[1, 2, 3, 4, 5];\n    \n    // OR\n    \n    let slice: &amp;str = \"Hello, World!\";\n    let arr: &amp;[i32; 5] = [1, 2, 3, 4, 5];", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I mostly agree, but it&amp;#39;s sort of strange when you put it up against array literals.&lt;/p&gt;\n\n&lt;p&gt;Like, this is just me waxing philosophically, but it seems like it would have been more congruent if array literals &lt;strong&gt;also&lt;/strong&gt; resulted in a reference. You have to basically use a reference to do anything with them anyway, so why not treat them the same as string literals?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn foo() {\n  let arr = [1, 2, 3, 4, 5];\n  // in order to iterate over this array, I have to ref\n  for val in &amp;amp;arr {}\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I guess the only thing that&amp;#39;s bugging me is that it&amp;#39;s the same syntax to create literals, but you get conceptually different things. I guess I would expect one of the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let slice: &amp;amp;str = &amp;amp;&amp;quot;Hello, World!&amp;quot;;\nlet arr: &amp;amp;[i32; 5] = &amp;amp;[1, 2, 3, 4, 5];\n\n// OR\n\nlet slice: &amp;amp;str = &amp;quot;Hello, World!&amp;quot;;\nlet arr: &amp;amp;[i32; 5] = [1, 2, 3, 4, 5];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_jmijzu", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/gax2tph/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/", "name": "t1_gax2tph", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1604340174.0, "created_utc": 1604340174.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hey Rustaceans! Got an easy question? Ask here (45/2020)!", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "llogiq", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "gawykce", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 151, "can_mod_post": false, "send_replies": true, "parent_id": "t1_gawxr1e", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": " \n\n&gt;So the main reason is that it's a reference because otherwise all string literals would need an &amp; in front of it.\n\nThis is precisely what I was asking about - it seems like it *should* have an amp in front of it (see my last line of code in the op).", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;So the main reason is that it&amp;#39;s a reference because otherwise all string literals would need an &amp;amp; in front of it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is precisely what I was asking about - it seems like it &lt;em&gt;should&lt;/em&gt; have an amp in front of it (see my last line of code in the op).&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_jmijzu", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/gawykce/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/", "name": "t1_gawykce", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1604338202.0, "created_utc": 1604338202.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hey Rustaceans! Got an easy question? Ask here (45/2020)!", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "llogiq", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "gawug22", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 151, "can_mod_post": false, "send_replies": true, "parent_id": "t3_jmijzu", "score": 3, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Why is it `&amp;str` and not `str`?\n\nI was playing with a tutorial-type project to introduce some colleagues to Rust and came across the following situations which initially confused me.\n\n    struct Foo&lt;'a&gt; {\n      slice: &amp;'a str,\n    }\n    \n    fn some_func&lt;'a&gt;() -&gt; Foo&lt;'a&gt; {\n      let slice: &amp;str = \"Hello, World!\";\n    \n      Foo {\n        slice,\n      }\n    }\n\nSo, this makes sense because that `\"Hello, World!\"` gets compiled into the binary and our `slice` is simply a reference to it. Fine, but then I came up with the following:\n\n    struct Bar&lt;'a&gt; {\n      arr_slice: &amp;'a [i32],\n    }\n    \n    fn other_func&lt;'a&gt;() -&gt; Bar&lt;'a&gt; {\n      let arr_slice: &amp;[i32; 5] = &amp;[1, 2, 3, 4, 5];\n    \n      Bar {\n        arr_slice,\n      }\n    }\n\nAgain, *this* makes sense because that `[1,2,3,4,5]` gets compiled into the binary and our `arr_slice` is a reference to it.\n\nThe reason I'm asking this question is because these two examples seem to be doing the same thing but with different syntax. Is there some reason (hopefully a good one) why the first example is *not*\n\n    let slice: &amp;str = &amp;\"Hello, World!\";\n\nNote: I left the superfluous type declarations on purpose.", "edited": 1604337265.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why is it &lt;code&gt;&amp;amp;str&lt;/code&gt; and not &lt;code&gt;str&lt;/code&gt;?&lt;/p&gt;\n\n&lt;p&gt;I was playing with a tutorial-type project to introduce some colleagues to Rust and came across the following situations which initially confused me.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Foo&amp;lt;&amp;#39;a&amp;gt; {\n  slice: &amp;amp;&amp;#39;a str,\n}\n\nfn some_func&amp;lt;&amp;#39;a&amp;gt;() -&amp;gt; Foo&amp;lt;&amp;#39;a&amp;gt; {\n  let slice: &amp;amp;str = &amp;quot;Hello, World!&amp;quot;;\n\n  Foo {\n    slice,\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So, this makes sense because that &lt;code&gt;&amp;quot;Hello, World!&amp;quot;&lt;/code&gt; gets compiled into the binary and our &lt;code&gt;slice&lt;/code&gt; is simply a reference to it. Fine, but then I came up with the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Bar&amp;lt;&amp;#39;a&amp;gt; {\n  arr_slice: &amp;amp;&amp;#39;a [i32],\n}\n\nfn other_func&amp;lt;&amp;#39;a&amp;gt;() -&amp;gt; Bar&amp;lt;&amp;#39;a&amp;gt; {\n  let arr_slice: &amp;amp;[i32; 5] = &amp;amp;[1, 2, 3, 4, 5];\n\n  Bar {\n    arr_slice,\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Again, &lt;em&gt;this&lt;/em&gt; makes sense because that &lt;code&gt;[1,2,3,4,5]&lt;/code&gt; gets compiled into the binary and our &lt;code&gt;arr_slice&lt;/code&gt; is a reference to it.&lt;/p&gt;\n\n&lt;p&gt;The reason I&amp;#39;m asking this question is because these two examples seem to be doing the same thing but with different syntax. Is there some reason (hopefully a good one) why the first example is &lt;em&gt;not&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let slice: &amp;amp;str = &amp;amp;&amp;quot;Hello, World!&amp;quot;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note: I left the superfluous type declarations on purpose.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_jmijzu", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/gawug22/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/", "name": "t1_gawug22", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1604336268.0, "created_utc": 1604336268.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/jmijzu/hey_rustaceans_got_an_easy_question_ask_here/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Beginner's critiques of Rust", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "crab1122334", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "fzy5lwm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 309, "can_mod_post": false, "send_replies": true, "parent_id": "t1_fzx0xcl", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I highly recommend it - think of it like the Rust linter. Pretty easy to set up on save in IntelliJ or VSCode", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I highly recommend it - think of it like the Rust linter. Pretty easy to set up on save in IntelliJ or VSCode&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_hzx1ak", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/hzx1ak/beginners_critiques_of_rust/fzy5lwm/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/hzx1ak/beginners_critiques_of_rust/", "name": "t1_fzy5lwm", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1596250733.0, "created_utc": 1596250733.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/hzx1ak/beginners_critiques_of_rust/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Beginner's critiques of Rust", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "crab1122334", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "fzna7cn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 309, "can_mod_post": false, "send_replies": true, "parent_id": "t3_hzx1ak", "score": 4, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "&gt;Conditionals with two possible branches should use if-else. Conditionals  of three or more branches can use switch statements. Rust tries to  wedge match into *everything*. Options are a perfect example of this - either a thing has a value (is\\_some()) or it doesn't (is\\_none()) but examples in the Rust Book only use match.\n\nYou are afforded sugar to deal with this exact complaint:\n\n    let my_option: Option&lt;String&gt; = func_that_returns_option();\n    if let Some(val) = my_option {\n      // val = my_option.unwrap() but only if it was Some\n    } else {\n      // my_option.is_none() == true\n    }\n\nEDIT: It seems like you would have benefited from enabling Clippy, which would have caught a lot of the anti-patterns you were trying as a matter of course.", "edited": 1596048115.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Conditionals with two possible branches should use if-else. Conditionals  of three or more branches can use switch statements. Rust tries to  wedge match into &lt;em&gt;everything&lt;/em&gt;. Options are a perfect example of this - either a thing has a value (is_some()) or it doesn&amp;#39;t (is_none()) but examples in the Rust Book only use match.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You are afforded sugar to deal with this exact complaint:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let my_option: Option&amp;lt;String&amp;gt; = func_that_returns_option();\nif let Some(val) = my_option {\n  // val = my_option.unwrap() but only if it was Some\n} else {\n  // my_option.is_none() == true\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT: It seems like you would have benefited from enabling Clippy, which would have caught a lot of the anti-patterns you were trying as a matter of course.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_hzx1ak", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/hzx1ak/beginners_critiques_of_rust/fzna7cn/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/hzx1ak/beginners_critiques_of_rust/", "name": "t1_fzna7cn", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1596047794.0, "created_utc": 1596047794.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/hzx1ak/beginners_critiques_of_rust/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hey Rustaceans! Got an easy question? Ask here (23/2020)!", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "llogiq", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "fsrhkzr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 160, "can_mod_post": false, "send_replies": true, "parent_id": "t1_fsrfupd", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Unfortunately not.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unfortunately not.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_guo4c1", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/fsrhkzr/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/", "name": "t1_fsrhkzr", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1591202796.0, "created_utc": 1591202796.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s7lj", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Hey Rustaceans! Got an easy question? Ask here (23/2020)!", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "rust", "link_author": "llogiq", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "fsr8lu3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 160, "can_mod_post": false, "send_replies": true, "parent_id": "t3_guo4c1", "score": 2, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Howdy, I have a pretty firm background in Java and I am trying to learn Rust. I read most of the book, but have come across a complicated enough issue that I am stuck.\n\nI create an instance of some struct and I create an impl for it so that I can pass this instance to some library code. At this point, ownership is given to the lib and there does not seem to be a way for me to get ownership back. But work happens in my impl that I want to get out.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Howdy, I have a pretty firm background in Java and I am trying to learn Rust. I read most of the book, but have come across a complicated enough issue that I am stuck.&lt;/p&gt;\n\n&lt;p&gt;I create an instance of some struct and I create an impl for it so that I can pass this instance to some library code. At this point, ownership is given to the lib and there does not seem to be a way for me to get ownership back. But work happens in my impl that I want to get out.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_guo4c1", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/fsr8lu3/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/", "name": "t1_fsr8lu3", "author_flair_template_id": null, "subreddit_name_prefixed": "r/rust", "author_flair_text": null, "treatment_tags": [], "created": 1591198567.0, "created_utc": 1591198567.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/rust/comments/guo4c1/hey_rustaceans_got_an_easy_question_ask_here/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ra0i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Cody Bellinger has been announced as an MVP finalist!", "mod_reason_by": null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Dodgers", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "f6kqbp6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 11, "can_mod_post": false, "send_replies": true, "parent_id": "t1_f6koirb", "score": 7, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Wat. Rendon is better in BA (an outdated and deeply flawed metric), RBIs (outdated and highly contextual), and OBP. Belli has the leg up in slugging (and dongs). Their SO/BB are roughly the same.\n\nBelli has three times the stolen bases (15 v 5) and has more defensive runs saved.\n\nIt\u2019s probably a coin flip, still.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wat. Rendon is better in BA (an outdated and deeply flawed metric), RBIs (outdated and highly contextual), and OBP. Belli has the leg up in slugging (and dongs). Their SO/BB are roughly the same.&lt;/p&gt;\n\n&lt;p&gt;Belli has three times the stolen bases (15 v 5) and has more defensive runs saved.&lt;/p&gt;\n\n&lt;p&gt;It\u2019s probably a coin flip, still.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_drr54u", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Dodgers/comments/drr54u/cody_bellinger_has_been_announced_as_an_mvp/f6kqbp6/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Dodgers/comments/drr54u/cody_bellinger_has_been_announced_as_an_mvp/", "name": "t1_f6kqbp6", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Dodgers", "author_flair_text": null, "treatment_tags": [], "created": 1572918097.0, "created_utc": 1572918097.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Dodgers/comments/drr54u/cody_bellinger_has_been_announced_as_an_mvp/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "We paid at most $60 for Overwatch once within the last 3 years, is it really so bad to pay another $40-60 after all that time assuming Overwatch 2 is a true sequel?", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "Heyyy-ohhh", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "f5ofytt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 299, "can_mod_post": false, "send_replies": true, "parent_id": "t3_dofg44", "score": 3, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Given Blizzard\u2019s completely cowardly handling of the Hong Kong protests, their players\u2019 free speech, and China generally, I simply won\u2019t be buying another product from them.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Given Blizzard\u2019s completely cowardly handling of the Hong Kong protests, their players\u2019 free speech, and China generally, I simply won\u2019t be buying another product from them.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_dofg44", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/dofg44/we_paid_at_most_60_for_overwatch_once_within_the/f5ofytt/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/dofg44/we_paid_at_most_60_for_overwatch_once_within_the/", "name": "t1_f5ofytt", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1572317136.0, "created_utc": 1572317136.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Overwatch/comments/dofg44/we_paid_at_most_60_for_overwatch_once_within_the/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ra0i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Is AJ Pollock the least fun, biggest disappointment free agent that we\u2019ve thrown a barrel of cash at maybe ever?", "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Dodgers", "link_author": "yungjuniorsoprano", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "f3orv27", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 91, "can_mod_post": false, "send_replies": true, "parent_id": "t3_dhjeew", "score": 4, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "It\u2019s funny that everyone is too young to remember Jason Schmidt.\n\nThis thread is now over.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It\u2019s funny that everyone is too young to remember Jason Schmidt.&lt;/p&gt;\n\n&lt;p&gt;This thread is now over.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_dhjeew", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Dodgers/comments/dhjeew/is_aj_pollock_the_least_fun_biggest/f3orv27/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Dodgers/comments/dhjeew/is_aj_pollock_the_least_fun_biggest/", "name": "t1_f3orv27", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Dodgers", "author_flair_text": null, "treatment_tags": [], "created": 1571026569.0, "created_utc": 1571026569.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Dodgers/comments/dhjeew/is_aj_pollock_the_least_fun_biggest/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2s5xr", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "THE LOS ANGELES DODGERS HAVE BEEN ELIMINATED FROM WORLD SERIES CONTENTION", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "SFGiants", "link_author": "ericrs22", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "f3ahav3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 338, "can_mod_post": false, "send_replies": true, "parent_id": "t3_dfsz0s", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Got us. We caught up the Giants who clinched their World Series elimination contention in June \ud83d\udc4d", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Got us. We caught up the Giants who clinched their World Series elimination contention in June \ud83d\udc4d&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_dfsz0s", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/SFGiants/comments/dfsz0s/the_los_angeles_dodgers_have_been_eliminated_from/f3ahav3/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/SFGiants/comments/dfsz0s/the_los_angeles_dodgers_have_been_eliminated_from/", "name": "t1_f3ahav3", "author_flair_template_id": null, "subreddit_name_prefixed": "r/SFGiants", "author_flair_text": null, "treatment_tags": [], "created": 1570773227.0, "created_utc": 1570773227.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/SFGiants/comments/dfsz0s/the_los_angeles_dodgers_have_been_eliminated_from/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ra0i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "My dad, a lifelong Dodger fan, passed away last night.", "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Dodgers", "link_author": "drulenarendes", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ezi45rc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 90, "can_mod_post": false, "send_replies": true, "parent_id": "t3_d127v0", "score": 3, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I am very sorry for your loss. I have a three year old son with whom I watch most dodger games; his favorite player is cody Bellinger, and the thought of him having to deal with my passing (a huge dodger nerd) is heartbreaking. I would be honored to send flowers to to his memory; please dm me.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am very sorry for your loss. I have a three year old son with whom I watch most dodger games; his favorite player is cody Bellinger, and the thought of him having to deal with my passing (a huge dodger nerd) is heartbreaking. I would be honored to send flowers to to his memory; please dm me.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_d127v0", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Dodgers/comments/d127v0/my_dad_a_lifelong_dodger_fan_passed_away_last/ezi45rc/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Dodgers/comments/d127v0/my_dad_a_lifelong_dodger_fan_passed_away_last/", "name": "t1_ezi45rc", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Dodgers", "author_flair_text": null, "treatment_tags": [], "created": 1567920982.0, "created_utc": 1567920982.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Dodgers/comments/d127v0/my_dad_a_lifelong_dodger_fan_passed_away_last/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "[Workshop] - i made doomfist's rocket punch able to travel in any direction - CODE: GJKM0 - by Therister", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "trappi", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "er650yq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 392, "can_mod_post": false, "send_replies": true, "parent_id": "t3_c0iouk", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I have wanted this forever.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have wanted this forever.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_c0iouk", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/c0iouk/workshop_i_made_doomfists_rocket_punch_able_to/er650yq/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/c0iouk/workshop_i_made_doomfists_rocket_punch_able_to/", "name": "t1_er650yq", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1560540087.0, "created_utc": 1560540087.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://v.redd.it/auqp4yyvxa431"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2fwo", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "If you installed PEAR PHP in the last 6 months, you may be infected", "mod_reason_by": null, "banned_by": null, "ups": -17, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "programming", "link_author": "[deleted]", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "eetj0u3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 20, "can_mod_post": false, "send_replies": true, "parent_id": "t3_aj6kle", "score": -17, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "\u201cIf you installed PEAR PHP in the last 6 months, you may be infected with PHP.\u201d - ftfy", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;\u201cIf you installed PEAR PHP in the last 6 months, you may be infected with PHP.\u201d - ftfy&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_aj6kle", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/programming/comments/aj6kle/if_you_installed_pear_php_in_the_last_6_months/eetj0u3/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/programming/comments/aj6kle/if_you_installed_pear_php_in_the_last_6_months/", "name": "t1_eetj0u3", "author_flair_template_id": null, "subreddit_name_prefixed": "r/programming", "author_flair_text": null, "treatment_tags": [], "created": 1548302161.0, "created_utc": 1548302161.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://arstechnica.com/information-technology/2019/01/pear-php-site-breach-lets-hackers-slip-malware-into-official-download/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ra0i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "DEM BOYS", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Dodgers", "link_author": "dumdim", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "e6pqyhs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 16, "can_mod_post": false, "send_replies": true, "parent_id": "t1_e6npfvk", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Respect; I had been drinking and that\u2019s what came out. I appreciate the correction. \ud83d\udc4d", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Respect; I had been drinking and that\u2019s what came out. I appreciate the correction. \ud83d\udc4d&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_9izif5", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Dodgers/comments/9izif5/dem_boys/e6pqyhs/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Dodgers/comments/9izif5/dem_boys/", "name": "t1_e6pqyhs", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Dodgers", "author_flair_text": null, "treatment_tags": [], "created": 1538020878.0, "created_utc": 1538020878.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.redd.it/0jhw1zjvkio11.png"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2ra0i", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "DEM BOYS", "mod_reason_by": null, "banned_by": null, "ups": 28, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Dodgers", "link_author": "dumdim", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "e6nlytp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 16, "can_mod_post": false, "send_replies": true, "parent_id": "t3_9izif5", "score": 28, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Because the boys in the hood are always hard; come in talking that shit and they\u2019ll pull your card; knowing nothing in life but to be legit; don\u2019t quote me boy, I ain\u2019t said shit.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Because the boys in the hood are always hard; come in talking that shit and they\u2019ll pull your card; knowing nothing in life but to be legit; don\u2019t quote me boy, I ain\u2019t said shit.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_9izif5", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Dodgers/comments/9izif5/dem_boys/e6nlytp/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Dodgers/comments/9izif5/dem_boys/", "name": "t1_e6nlytp", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Dodgers", "author_flair_text": null, "treatment_tags": [], "created": 1537938526.0, "created_utc": 1537938526.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.redd.it/0jhw1zjvkio11.png"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "[Unpopular opinion] Hanzo's Arrow speed is too fast", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "Ardibanan", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "dyq234h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 8, "can_mod_post": false, "send_replies": true, "parent_id": "t3_8i98dr", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "His air-dash completely countering Doomfist's uppercut is bullshit.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;His air-dash completely countering Doomfist&amp;#39;s uppercut is bullshit.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_8i98dr", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/8i98dr/unpopular_opinion_hanzos_arrow_speed_is_too_fast/dyq234h/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/8i98dr/unpopular_opinion_hanzos_arrow_speed_is_too_fast/", "name": "t1_dyq234h", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1525903462.0, "created_utc": 1525903462.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Overwatch/comments/8i98dr/unpopular_opinion_hanzos_arrow_speed_is_too_fast/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Brigitte is the best", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "SpringRolls55", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "dw8w3kv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 15, "can_mod_post": false, "send_replies": true, "parent_id": "t1_dw65tar", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "She has Doomfist's original hitbox for her stun... and that was fine right?\nOh wait no, they nerfed that... because it was OP.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;She has Doomfist&amp;#39;s original hitbox for her stun... and that was fine right?\nOh wait no, they nerfed that... because it was OP.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_86i8sv", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/86i8sv/brigitte_is_the_best/dw8w3kv/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/86i8sv/brigitte_is_the_best/", "name": "t1_dw8w3kv", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1521955370.0, "created_utc": 1521955370.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Overwatch/comments/86i8sv/brigitte_is_the_best/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Brigitte is the best", "mod_reason_by": null, "banned_by": null, "ups": -15, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "SpringRolls55", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "dw5ap6q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 15, "can_mod_post": false, "send_replies": true, "parent_id": "t3_86i8sv", "score": -15, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "They made an overpowered hero and you're enjoying playing her... weird.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They made an overpowered hero and you&amp;#39;re enjoying playing her... weird.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_86i8sv", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/86i8sv/brigitte_is_the_best/dw5ap6q/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/86i8sv/brigitte_is_the_best/", "name": "t1_dw5ap6q", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1521782334.0, "created_utc": 1521782334.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Overwatch/comments/86i8sv/brigitte_is_the_best/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh0u", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "My wife and I have also lost a ton of weight together! It has brought us closer together and we are so much happier for it. 170 lbs in this picture together 185 currently", "mod_reason_by": null, "banned_by": null, "ups": 49, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "pics", "link_author": "w00t692", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "duxtb79", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 1095, "can_mod_post": false, "send_replies": true, "parent_id": "t3_80qwc8", "score": 49, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Bad Religion is my all time favorite band; Greg Graffin is the best.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bad Religion is my all time favorite band; Greg Graffin is the best.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_80qwc8", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/pics/comments/80qwc8/my_wife_and_i_have_also_lost_a_ton_of_weight/duxtb79/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/pics/comments/80qwc8/my_wife_and_i_have_also_lost_a_ton_of_weight/", "name": "t1_duxtb79", "author_flair_template_id": null, "subreddit_name_prefixed": "r/pics", "author_flair_text": null, "treatment_tags": [], "created": 1519783013.0, "created_utc": 1519783013.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://i.imgur.com/H84vJf7.jpg"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Doomfist Has 16+ More New Bugs", "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "iSinner_", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ds8bjun", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 793, "can_mod_post": false, "send_replies": true, "parent_id": "t3_7obpkm", "score": 1, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Not to derail, but the dva issue (not getting knocked back as far whilst shooting) is part of her physics. She simply moves slower when firing... and it\u2019s annoying. If you are in the air moving at normal speed, you can open fire to slow down (jackiechanwat.jpg).", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not to derail, but the dva issue (not getting knocked back as far whilst shooting) is part of her physics. She simply moves slower when firing... and it\u2019s annoying. If you are in the air moving at normal speed, you can open fire to slow down (jackiechanwat.jpg).&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_7obpkm", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/7obpkm/doomfist_has_16_more_new_bugs/ds8bjun/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/7obpkm/doomfist_has_16_more_new_bugs/", "name": "t1_ds8bjun", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1515168492.0, "created_utc": 1515168492.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.reddit.com/r/Overwatch/comments/7obpkm/doomfist_has_16_more_new_bugs/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2r3ex", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "im back pls fix my swing", "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "richtext", "total_awards_received": 0, "subreddit": "Bowling", "link_author": "vroomvroomtreetree", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "ds0mgnm", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 10, "can_mod_post": false, "send_replies": true, "parent_id": "t3_7nbj7q", "score": 2, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Ball comes behind you too much, and too far away from your body at the bottom. Practice taking it back more directly and getting the bottom nearer your slide foot.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": "", "is_submitter": false, "collapsed": false, "author_flair_richtext": [{"e": "text", "t": "Avg: 202 | HG: 287 | HS: 699"}], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ball comes behind you too much, and too far away from your body at the bottom. Practice taking it back more directly and getting the bottom nearer your slide foot.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_7nbj7q", "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden": false, "permalink": "/r/Bowling/comments/7nbj7q/im_back_pls_fix_my_swing/ds0mgnm/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Bowling/comments/7nbj7q/im_back_pls_fix_my_swing/", "name": "t1_ds0mgnm", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Bowling", "author_flair_text": "Avg: 202 | HG: 287 | HS: 699", "treatment_tags": [], "created": 1514764048.0, "created_utc": 1514764048.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": "", "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://v.redd.it/37fmfkpn5c701"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2qh13", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "World's first fusion plant is now half-way to 'First Plasma'", "mod_reason_by": null, "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "worldnews", "link_author": "Sultanust", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "drpb77x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow": false, "author": "kainsavage", "num_comments": 207, "can_mod_post": false, "send_replies": true, "parent_id": "t1_drp76r7", "score": 10, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "Came here to write literally this. Also, I wouldn\u2019t classify ITER as a \u201cfusion plant\u201d as it is just a prototype and will not generate electricity.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Came here to write literally this. Also, I wouldn\u2019t classify ITER as a \u201cfusion plant\u201d as it is just a prototype and will not generate electricity.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_7lun70", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/worldnews/comments/7lun70/worlds_first_fusion_plant_is_now_halfway_to_first/drpb77x/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/worldnews/comments/7lun70/worlds_first_fusion_plant_is_now_halfway_to_first/", "name": "t1_drpb77x", "author_flair_template_id": null, "subreddit_name_prefixed": "r/worldnews", "author_flair_text": null, "treatment_tags": [], "created": 1514130524.0, "created_utc": 1514130524.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://www.digitaltrends.com/cool-tech/iter-nuclear-fusion-reactor-halfway-complete/"}}, {"kind": "t1", "data": {"subreddit_id": "t5_2u5kl", "approved_at_utc": null, "author_is_blocked": false, "comment_type": null, "link_title": "Utilizing Doomfist's Rocket Punch as a vertical movement ability.", "mod_reason_by": null, "banned_by": null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received": 0, "subreddit": "Overwatch", "link_author": "Natlusan", "likes": null, "replies": "", "user_reports": [], "saved": false, "id": "drof4cw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived": false, "collapsed_reason_code": null, "no_follow": true, "author": "kainsavage", "num_comments": 96, "can_mod_post": false, "send_replies": true, "parent_id": "t3_7lo8cq", "score": 0, "author_fullname": "t2_4qu20", "over_18": false, "report_reasons": null, "removal_reason": null, "approved_by": null, "controversiality": 0, "body": "I think you should be able to just aim his rocketpunch arbitrarily; you wanna rocketpunch straight up? Okay", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you should be able to just aim his rocketpunch arbitrarily; you wanna rocketpunch straight up? Okay&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award": null, "stickied": false, "author_premium": false, "can_gild": true, "link_id": "t3_7lo8cq", "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/Overwatch/comments/7lo8cq/utilizing_doomfists_rocket_punch_as_a_vertical/drof4cw/", "subreddit_type": "public", "link_permalink": "https://www.reddit.com/r/Overwatch/comments/7lo8cq/utilizing_doomfists_rocket_punch_as_a_vertical/", "name": "t1_drof4cw", "author_flair_template_id": null, "subreddit_name_prefixed": "r/Overwatch", "author_flair_text": null, "treatment_tags": [], "created": 1514069697.0, "created_utc": 1514069697.0, "awarders": [], "all_awardings": [], "locked": false, "author_flair_background_color": null, "collapsed_because_crowd_control": null, "mod_reports": [], "quarantine": false, "mod_note": null, "link_url": "https://gfycat.com/LikableOccasionalGhostshrimp"}}], "before": null}}